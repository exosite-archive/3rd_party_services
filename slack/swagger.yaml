---
swagger: "2.0"
basePath: /api
externalDocs:
  url: https://api.slack.com/web
  description: Learn more about the Slack Web API
schemes:
- https
host: slack.com
consumes:
- application/json
produces:
- application/json
x-exosite-config-parameters:
- name: token
  description: Slack Workspace Token
  type: string
  format: password
  required: true
securityDefinitions:
  Bearer:
    type: bearer
    name: token
    description: bearer scheme token authentication defined in https://tools.ietf.org/html/rfc6750
    x-exosite-restricted: true
info:
  version: 1.0.6
  title: Slack Web API
  description: |
    ## Use with the new [Workspace Tokens](https://api.slack.com/docs/working-with-workspace-tokens)
    [Create a new app](https://api.slack.com/apps/new) over at slack, note
    its **OAuth Access Token** (should start with xoxa-...) from the
    *OAuth & Permissions* menu and enter it below:
  contact:
    name: Exosite Support
    email: support@exosite.com
definitions:
  defs_ts:
    pattern: ^\d{10}\.\d{6}$
    title: Timestamp in format 0123456789.012345
    type: string
    description: defs_ts
  objs_group:
    required:
    - id
    - name
    - is_group
    - created
    - creator
    - name_normalized
    - members
    - topic
    - purpose
    additionalProperties: true
    title: Group object
    type: object
    properties:
      creator:
        $ref: '#/definitions/defs_user_id'
        description: creator
      last_read:
        $ref: '#/definitions/defs_ts'
        description: last_read
      priority:
        type: integer
        description: priority
      created:
        type: integer
        description: created
      is_moved:
        type: integer
        description: is_moved
      members:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_user_id'
        type: array
        description: members
      is_archived:
        type: boolean
        description: is_archived
      purpose:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
            description: creator
          value:
            type: string
            description: value
          last_set:
            type: integer
            description: last_set
        description: purpose
      topic:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
            description: creator
          value:
            type: string
            description: value
          last_set:
            type: integer
            description: last_set
        description: topic
      name_normalized:
        type: string
        description: name_normalized
      is_mpim:
        type: boolean
        description: is_mpim
      name:
        type: string
        description: name
      is_pending_ext_shared:
        type: boolean
        description: is_pending_ext_shared
      is_group:
        type: boolean
        description: is_group
      unread_count:
        type: integer
        description: unread_count
      id:
        $ref: '#/definitions/defs_group_id'
        description: id
      unread_count_display:
        type: integer
        description: unread_count_display
      latest:
        items:
        - $ref: '#/definitions/objs_message'
          description: item
        - type: "null"
          description: item
        description: latest
      is_open:
        type: boolean
        description: is_open
    description: objs_group
  objs_team_profile_field:
    required:
    - id
    - ordering
    - label
    - hint
    - type
    - options
    additionalProperties: true
    type: object
    properties:
      possible_values:
        items:
          type: string
          description: item
        type: array
        description: possible_values
      field_name:
        type: string
        description: field_name
      hint:
        type: string
        description: hint
      is_hidden:
        type: boolean
        description: is_hidden
      id:
        pattern: ^X[a-zA-Z0-9]{9}$
        type: string
        description: id
      options:
        items:
          type: string
          description: item
        type: array
        description: options
      type:
        type: string
        enum:
        - text
        - date
        - link
        - mailto
        - options_list
        - user
        description: type
      ordering:
        type: number
        description: ordering
      label:
        type: string
        description: label
    description: objs_team_profile_field
  prefs_prefs:
    additionalProperties: true
    title: User Prefs object
    type: object
    properties:
      push_mention_channels:
        type: string
        description: push_mention_channels
      seen_onboarding_direct_messages:
        type: boolean
        description: seen_onboarding_direct_messages
      separate_shared_channels:
        type: boolean
        description: separate_shared_channels
      seen_app_space_coachmark:
        type: boolean
        description: seen_app_space_coachmark
      arrow_history:
        type: boolean
        description: arrow_history
      sidebar_theme:
        type: string
        description: sidebar_theme
      new_msg_snd:
        type: string
        description: new_msg_snd
      seen_shdep_slackbot_message:
        type: boolean
        description: seen_shdep_slackbot_message
      analytics_upsell_coachmark_seen:
        type: boolean
        description: analytics_upsell_coachmark_seen
      enterprise_migration_seen:
        type: boolean
        description: enterprise_migration_seen
      seen_onboarding_invites:
        type: boolean
        description: seen_onboarding_invites
      spaces_new_xp_banner_dismissed:
        type: boolean
        description: spaces_new_xp_banner_dismissed
      k_key_omnibox:
        type: boolean
        description: k_key_omnibox
      onboarding_slackbot_conversation_step:
        type: integer
        description: onboarding_slackbot_conversation_step
      prompted_for_email_disabling:
        type: boolean
        description: prompted_for_email_disabling
      msg_input_send_btn:
        type: boolean
        description: msg_input_send_btn
      expand_snippets:
        type: boolean
        description: expand_snippets
      k_key_omnibox_auto_hide_count:
        type: integer
        description: k_key_omnibox_auto_hide_count
      has_uploaded:
        type: boolean
        description: has_uploaded
      newxp_seen_last_message:
        type: integer
        description: newxp_seen_last_message
      email_misc:
        type: boolean
        description: email_misc
      sidebar_theme_custom_values:
        type: string
        description: sidebar_theme_custom_values
      require_at:
        type: boolean
        description: require_at
      enhanced_debugging:
        type: boolean
        description: enhanced_debugging
      f_key_search:
        type: boolean
        description: f_key_search
      overloaded_message_enabled:
        type: boolean
        description: overloaded_message_enabled
      hide_hex_swatch:
        type: boolean
        description: hide_hex_swatch
      show_ent_onboarding:
        type: boolean
        description: show_ent_onboarding
      folders_enabled:
        type: boolean
        description: folders_enabled
      box_enabled:
        type: boolean
        description: box_enabled
      growth_msg_limit_long_reached_cta_last_ts:
        type: integer
        description: growth_msg_limit_long_reached_cta_last_ts
      has_recently_shared_a_channel:
        type: boolean
        description: has_recently_shared_a_channel
      mentions_exclude_at_user_groups:
        type: boolean
        description: mentions_exclude_at_user_groups
      expand_internal_inline_imgs:
        type: boolean
        description: expand_internal_inline_imgs
      seen_japanese_locale_change_message:
        type: boolean
        description: seen_japanese_locale_change_message
      seen_highlights_warm_welcome:
        type: boolean
        description: seen_highlights_warm_welcome
      email_weekly:
        type: boolean
        description: email_weekly
      allow_cmd_tab_iss:
        type: boolean
        description: allow_cmd_tab_iss
      muted_channels:
        type: string
        description: muted_channels
      search_exclude_bots:
        type: boolean
        description: search_exclude_bots
      seen_onboarding_banner:
        type: boolean
        description: seen_onboarding_banner
      growth_all_banners_prefs:
        type: string
        description: growth_all_banners_prefs
      ssb_space_window:
        type: string
        description: ssb_space_window
      push_sound:
        type: string
        description: push_sound
      hide_user_group_info_pane:
        type: boolean
        description: hide_user_group_info_pane
      growth_msg_limit_reached_cta_last_ts:
        type: integer
        description: growth_msg_limit_reached_cta_last_ts
      no_macelectron_banner:
        type: boolean
        description: no_macelectron_banner
      seen_member_invite_reminder:
        type: boolean
        description: seen_member_invite_reminder
      seen_unread_view_coachmark:
        type: boolean
        description: seen_unread_view_coachmark
      client_logs_pri:
        type: string
        description: client_logs_pri
      email_tips:
        type: boolean
        description: email_tips
      gdrive_authed:
        type: boolean
        description: gdrive_authed
      email_developer:
        type: boolean
        description: email_developer
      seen_welcome_2:
        type: boolean
        description: seen_welcome_2
      enable_unread_view:
        type: boolean
        description: enable_unread_view
      growth_msg_limit_approaching_cta_ts:
        type: integer
        description: growth_msg_limit_approaching_cta_ts
      seen_shared_channels_coachmark:
        type: boolean
        description: seen_shared_channels_coachmark
      expand_non_media_attachments:
        type: boolean
        description: expand_non_media_attachments
      email_offers:
        type: boolean
        description: email_offers
      emoji_use:
        type: string
        description: emoji_use
      seen_onboarding_starred_items:
        type: boolean
        description: seen_onboarding_starred_items
      separate_private_channels:
        type: boolean
        description: separate_private_channels
      seen_onboarding_search:
        type: boolean
        description: seen_onboarding_search
      locale:
        type: string
        description: locale
      seen_calls_interactive_coachmark:
        type: boolean
        description: seen_calls_interactive_coachmark
      seen_onboarding_private_groups:
        type: boolean
        description: seen_onboarding_private_groups
      push_everything:
        type: boolean
        description: push_everything
      search_exclude_channels:
        type: string
        description: search_exclude_channels
      ent_org_wide_channels_sidebar:
        type: boolean
        description: ent_org_wide_channels_sidebar
      user_colors:
        type: string
        description: user_colors
      full_text_extracts:
        type: boolean
        description: full_text_extracts
      seen_administration_menu:
        type: boolean
        description: seen_administration_menu
      allow_calls_to_set_current_status:
        type: boolean
        description: allow_calls_to_set_current_status
      search_sort:
        type: string
        description: search_sort
      seen_name_tagging_coachmark:
        type: boolean
        description: seen_name_tagging_coachmark
      last_seen_at_channel_warning:
        type: integer
        description: last_seen_at_channel_warning
      welcome_message_hidden:
        type: boolean
        description: welcome_message_hidden
      color_names_in_list:
        type: boolean
        description: color_names_in_list
      mac_ssb_bullet:
        type: boolean
        description: mac_ssb_bullet
      growth_msg_limit_reached_cta_count:
        type: integer
        description: growth_msg_limit_reached_cta_count
      time24:
        type: boolean
        description: time24
      flannel_server_pool:
        type: string
        description: flannel_server_pool
      email_alerts_sleep_until:
        type: integer
        description: email_alerts_sleep_until
      seen_app_space_tutorial:
        type: boolean
        description: seen_app_space_tutorial
      threads_everything:
        type: boolean
        description: threads_everything
      seen_onboarding_recent_mentions:
        type: boolean
        description: seen_onboarding_recent_mentions
      posts_formatting_guide:
        type: boolean
        description: posts_formatting_guide
      dropbox_enabled:
        type: boolean
        description: dropbox_enabled
      tz:
        type: string
        description: tz
      seen_intl_channel_names_coachmark:
        type: boolean
        description: seen_intl_channel_names_coachmark
      seen_threads_notification_banner:
        type: boolean
        description: seen_threads_notification_banner
      no_winssb1_banner:
        type: boolean
        description: no_winssb1_banner
      channel_sort:
        type: string
        description: channel_sort
      emoji_autocomplete_big:
        type: boolean
        description: emoji_autocomplete_big
      jumbomoji:
        type: boolean
        description: jumbomoji
      email_alerts:
        type: string
        description: email_alerts
      mark_msgs_read_immediately:
        type: boolean
        description: mark_msgs_read_immediately
      no_omnibox_in_channels:
        type: boolean
        description: no_omnibox_in_channels
      lessons_enabled:
        type: boolean
        description: lessons_enabled
      intro_to_apps_message_seen:
        type: boolean
        description: intro_to_apps_message_seen
      dnd_end_hour:
        type: string
        description: dnd_end_hour
      search_only_current_team:
        type: boolean
        description: search_only_current_team
      frecency_ent_jumper:
        type: string
        description: frecency_ent_jumper
      seen_custom_status_callout:
        type: boolean
        description: seen_custom_status_callout
      growth_msg_limit_approaching_cta_count:
        type: integer
        description: growth_msg_limit_approaching_cta_count
      folder_data:
        type: string
        description: folder_data
      two_factor_type:
        type: "null"
        description: two_factor_type
      at_channel_suppressed_channels:
        type: string
        description: at_channel_suppressed_channels
      search_only_my_channels:
        type: boolean
        description: search_only_my_channels
      dnd_enabled:
        type: boolean
        description: dnd_enabled
      enterprise_mdm_custom_msg:
        type: string
        description: enterprise_mdm_custom_msg
      seen_guest_admin_slackbot_announcement:
        type: boolean
        description: seen_guest_admin_slackbot_announcement
      winssb_run_from_tray:
        type: boolean
        description: winssb_run_from_tray
      push_loud_channels:
        type: string
        description: push_loud_channels
      confirm_sh_call_start:
        type: boolean
        description: confirm_sh_call_start
      display_display_names:
        type: boolean
        description: display_display_names
      push_show_preview:
        type: boolean
        description: push_show_preview
      display_real_names_override:
        type: integer
        description: display_real_names_override
      show_memory_instrument:
        type: boolean
        description: show_memory_instrument
      last_snippet_type:
        type: string
        description: last_snippet_type
      expand_inline_imgs:
        type: boolean
        description: expand_inline_imgs
      seen_locale_change_message:
        type: integer
        description: seen_locale_change_message
      enterprise_excluded_app_teams:
        type: "null"
        description: enterprise_excluded_app_teams
      confirm_clear_all_unreads:
        type: boolean
        description: confirm_clear_all_unreads
      seen_keyboard_shortcuts_coachmark:
        type: boolean
        description: seen_keyboard_shortcuts_coachmark
      snippet_editor_wrap_long_lines:
        type: boolean
        description: snippet_editor_wrap_long_lines
      whats_new_read:
        type: integer
        description: whats_new_read
      onboarding_cancelled:
        type: boolean
        description: onboarding_cancelled
      load_lato_2:
        type: boolean
        description: load_lato_2
      preferred_skin_tone:
        type: string
        description: preferred_skin_tone
      has_searched:
        type: boolean
        description: has_searched
      graphic_emoticons:
        type: boolean
        description: graphic_emoticons
      email_research:
        type: boolean
        description: email_research
      a11y_animations:
        type: boolean
        description: a11y_animations
      no_text_in_notifications:
        type: boolean
        description: no_text_in_notifications
      no_macssb2_banner:
        type: boolean
        description: no_macssb2_banner
      no_invites_widget_in_sidebar:
        type: boolean
        description: no_invites_widget_in_sidebar
      highlight_words:
        type: string
        description: highlight_words
      push_mention_alert:
        type: boolean
        description: push_mention_alert
      start_scroll_at_oldest:
        type: boolean
        description: start_scroll_at_oldest
      keyboard:
        type: "null"
        description: keyboard
      tab_ui_return_selects:
        type: boolean
        description: tab_ui_return_selects
      seen_shared_channels_opt_in_change_message:
        type: boolean
        description: seen_shared_channels_opt_in_change_message
      seen_gdrive_coachmark:
        type: boolean
        description: seen_gdrive_coachmark
      mac_ssb_bounce:
        type: string
        description: mac_ssb_bounce
      loud_channels:
        type: string
        description: loud_channels
      seen_domain_invite_reminder:
        type: boolean
        description: seen_domain_invite_reminder
      winssb_window_flash_behavior:
        type: string
        description: winssb_window_flash_behavior
      seen_highlights_coachmark:
        type: boolean
        description: seen_highlights_coachmark
      never_channels:
        type: string
        description: never_channels
      show_jumper_scores:
        type: boolean
        description: show_jumper_scores
      enable_react_emoji_picker:
        type: boolean
        description: enable_react_emoji_picker
      mentions_exclude_at_channels:
        type: boolean
        description: mentions_exclude_at_channels
      all_notifications_prefs:
        type: string
        description: all_notifications_prefs
      seen_single_emoji_msg:
        type: boolean
        description: seen_single_emoji_msg
      seen_highlights_arrows_coachmark:
        type: boolean
        description: seen_highlights_arrows_coachmark
      all_unreads_sort_order:
        type: string
        description: all_unreads_sort_order
      two_factor_backup_type:
        type: "null"
        description: two_factor_backup_type
      growth_msg_limit_sixty_day_banner_cta_count:
        type: integer
        description: growth_msg_limit_sixty_day_banner_cta_count
      push_at_channel_suppressed_channels:
        type: string
        description: push_at_channel_suppressed_channels
      growls_enabled:
        type: boolean
        description: growls_enabled
      has_invited:
        type: boolean
        description: has_invited
      emoji_mode:
        type: string
        description: emoji_mode
      ss_emojis:
        type: boolean
        description: ss_emojis
      no_created_overlays:
        type: boolean
        description: no_created_overlays
      seen_custom_status_badge:
        type: boolean
        description: seen_custom_status_badge
      ls_disabled:
        type: boolean
        description: ls_disabled
      show_sidebar_quickswitcher_button:
        type: boolean
        description: show_sidebar_quickswitcher_button
      frecency_ent_jumper_backup:
        type: string
        description: frecency_ent_jumper_backup
      loud_channels_set:
        type: string
        description: loud_channels_set
      convert_emoticons:
        type: boolean
        description: convert_emoticons
      privacy_policy_seen:
        type: boolean
        description: privacy_policy_seen
      two_factor_auth_enabled:
        type: boolean
        description: two_factor_auth_enabled
      no_joined_overlays:
        type: boolean
        description: no_joined_overlays
      seen_onboarding_slackbot_conversation:
        type: boolean
        description: seen_onboarding_slackbot_conversation
      all_channels_loud:
        type: boolean
        description: all_channels_loud
      seen_ssb_prompt:
        type: boolean
        description: seen_ssb_prompt
      webapp_spellcheck:
        type: boolean
        description: webapp_spellcheck
      last_tos_acknowledged:
        type: string
        description: last_tos_acknowledged
      enter_is_special_in_tbt:
        type: boolean
        description: enter_is_special_in_tbt
      messages_theme:
        type: string
        description: messages_theme
      measure_css_usage:
        type: boolean
        description: measure_css_usage
      growth_msg_limit_long_reached_cta_count:
        type: integer
        description: growth_msg_limit_long_reached_cta_count
      a11y_font_size:
        type: string
        description: a11y_font_size
      mute_sounds:
        type: boolean
        description: mute_sounds
      in_interactive_mas_migration_flow:
        type: boolean
        description: in_interactive_mas_migration_flow
      seen_onboarding_start:
        type: boolean
        description: seen_onboarding_start
      confirm_user_marked_away:
        type: boolean
        description: confirm_user_marked_away
      dnd_start_hour:
        type: string
        description: dnd_start_hour
      pagekeys_handled:
        type: boolean
        description: pagekeys_handled
      seen_onboarding_channels:
        type: boolean
        description: seen_onboarding_channels
      seen_channel_browser_admin_coachmark:
        type: boolean
        description: seen_channel_browser_admin_coachmark
      fuller_timestamps:
        type: boolean
        description: fuller_timestamps
      shdep_promo_code_submitted:
        type: boolean
        description: shdep_promo_code_submitted
      push_dm_alert:
        type: boolean
        description: push_dm_alert
      locales_enabled:
        additionalProperties: true
        type: object
        properties:
          fr-FR:
            type: string
            description: fr-FR
          es-ES:
            type: string
            description: es-ES
          pseudo:
            type: string
            description: pseudo
          ja-JP:
            type: string
            description: ja-JP
          de-DE:
            type: string
            description: de-DE
          en-US:
            type: string
            description: en-US
        description: locales_enabled
      show_all_skin_tones:
        type: boolean
        description: show_all_skin_tones
      growth_msg_limit_sixty_day_banner_cta_last_ts:
        type: integer
        description: growth_msg_limit_sixty_day_banner_cta_last_ts
      msg_input_send_btn_auto_set:
        type: boolean
        description: msg_input_send_btn_auto_set
      no_macssb1_banner:
        type: boolean
        description: no_macssb1_banner
      push_loud_channels_set:
        type: string
        description: push_loud_channels_set
      show_typing:
        type: boolean
        description: show_typing
      push_idle_wait:
        type: integer
        description: push_idle_wait
      seen_emoji_update_overlay_coachmark:
        type: boolean
        description: seen_emoji_update_overlay_coachmark
      sidebar_behavior:
        type: string
        description: sidebar_behavior
      frecency_jumper:
        type: string
        description: frecency_jumper
      obey_inline_img_limit:
        type: boolean
        description: obey_inline_img_limit
      gdrive_enabled:
        type: boolean
        description: gdrive_enabled
      has_created_channel:
        type: boolean
        description: has_created_channel
      purchaser:
        type: boolean
        description: purchaser
    description: prefs_prefs
  defs_comment_id:
    pattern: ^Fc[A-Z0-9]{8}$
    title: File Comment ID
    type: string
    description: defs_comment_id
  defs_pinned_info:
    additionalProperties: true
    title: Info for a pinned item
    type: object
    description: defs_pinned_info
  objs_reaction:
    required:
    - name
    - users
    - count
    additionalProperties: true
    title: Reaction object
    type: object
    properties:
      users:
        items:
          $ref: '#/definitions/defs_user_id'
        type: array
        description: users
      count:
        type: integer
        description: count
      name:
        type: string
        description: name
    description: objs_reaction
  defs_ok_false:
    title: default failure response
    type: boolean
    enum:
    - false
    description: defs_ok_false
  objs_paging:
    required:
    - count
    - page
    - total
    additionalProperties: true
    title: paging object for files
    type: object
    properties:
      pages:
        type: integer
        description: pages
      count:
        type: integer
        description: count
      page:
        type: integer
        description: page
      total:
        type: integer
        description: total
    description: objs_paging
  defs_invite_id:
    title: Invite ID for an external shared channel
    type: integer
    description: defs_invite_id
  objs_channel:
    required:
    - id
    - name
    - created
    - creator
    - is_channel
    - is_org_shared
    - is_private
    - is_mpim
    - is_shared
    - name_normalized
    - members
    - topic
    - purpose
    additionalProperties: true
    title: Channel Object
    type: object
    properties:
      is_shared:
        type: boolean
        description: is_shared
      creator:
        $ref: '#/definitions/defs_user_id'
        description: creator
      is_read_only:
        type: boolean
        description: is_read_only
      last_read:
        $ref: '#/definitions/defs_ts'
        description: last_read
      previous_names:
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_channel_name'
        type: array
        description: previous_names
      unlinked:
        title: Field to determine whether a channel has ever been shared/disconnected
          in the past
        type: integer
        description: unlinked
      priority:
        type: integer
        description: priority
      created:
        type: integer
        description: created
      is_moved:
        type: integer
        description: is_moved
      members:
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_user_id'
        type: array
        description: members
      is_general:
        type: boolean
        description: is_general
      is_archived:
        type: boolean
        description: is_archived
      is_channel:
        type: boolean
        description: is_channel
      purpose:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
            description: creator
          value:
            type: string
            description: value
          last_set:
            type: integer
            description: last_set
        description: purpose
      topic:
        required:
        - value
        - creator
        - last_set
        additionalProperties: true
        type: object
        properties:
          creator:
            $ref: '#/definitions/defs_topic_purpose_creator'
            description: creator
          value:
            type: string
            description: value
          last_set:
            type: integer
            description: last_set
        description: topic
      pending_shared:
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_team'
        type: array
        description: pending_shared
      name_normalized:
        type: string
        description: name_normalized
      is_mpim:
        type: boolean
        description: is_mpim
      name:
        type: string
        description: name
      accepted_user:
        $ref: '#/definitions/defs_user_id'
        description: accepted_user
      is_pending_ext_shared:
        type: boolean
        description: is_pending_ext_shared
      num_members:
        type: integer
        description: num_members
      unread_count:
        type: integer
        description: unread_count
      id:
        $ref: '#/definitions/defs_channel_id'
        description: id
      is_member:
        type: boolean
        description: is_member
      is_private:
        type: boolean
        description: is_private
      unread_count_display:
        type: integer
        description: unread_count_display
      latest:
        items:
        - $ref: '#/definitions/objs_message'
          description: item
        - type: "null"
          description: item
        description: latest
      is_org_shared:
        type: boolean
        description: is_org_shared
    description: objs_channel
  defs_user_id:
    pattern: ^[UW][A-Z0-9]{8}$
    title: User ID
    type: string
    description: defs_user_id
  defs_topic_purpose_creator:
    pattern: ^[UW][A-Z0-9]{8}$|^$
    title: User ID or empty string, used for topic and purpose creation
    type: string
    description: defs_topic_purpose_creator
  objs_comments:
    title: file comments object
    type: array
    description: objs_comments
  objs_user_profile_short:
    required:
    - avatar_hash
    - image_72
    - first_name
    - real_name
    - display_name
    - team
    - name
    - is_restricted
    - is_ultra_restricted
    additionalProperties: true
    type: object
    properties:
      display_name:
        type: string
        description: display_name
      first_name:
        type: string
        description: first_name
      image_72:
        format: uri
        type: string
        description: image_72
      avatar_hash:
        type: string
        description: avatar_hash
      name:
        type: string
        description: name
      real_name:
        type: string
        description: real_name
      team:
        $ref: '#/definitions/defs_team'
        description: team
      is_restricted:
        type: boolean
        description: is_restricted
      is_ultra_restricted:
        type: boolean
        description: is_ultra_restricted
    description: objs_user_profile_short
  defs_team:
    pattern: ^[T][A-Z0-9]{8}$
    title: Team ID
    type: string
    description: defs_team
  defs_group_id:
    pattern: ^[G][A-Z0-9]{8}$
    title: Private Channel ID
    type: string
    description: defs_group_id
  objs_user_profile:
    required:
    - real_name
    - display_name
    - avatar_hash
    - real_name_normalized
    - display_name_normalized
    - image_24
    - image_32
    - image_48
    - image_72
    - image_192
    additionalProperties: true
    title: User profile object
    type: object
    properties:
      email:
        format: email
        type: string
        description: email
      display_name_normalized:
        type: string
        description: display_name_normalized
      image_48:
        format: uri
        type: string
        description: image_48
      phone:
        type: string
        description: phone
      skype:
        type: string
        description: skype
      status_emoji:
        type: string
        description: status_emoji
      display_name:
        type: string
        description: display_name
      always_active:
        type: boolean
        description: always_active
      first_name:
        type: string
        description: first_name
      image_72:
        format: uri
        type: string
        description: image_72
      image_512:
        format: uri
        type: string
        description: image_512
      status_text:
        type: string
        description: status_text
      real_name_normalized:
        type: string
        description: real_name_normalized
      avatar_hash:
        type: string
        description: avatar_hash
      guest_channels:
        type: string
        description: guest_channels
      image_192:
        format: uri
        type: string
        description: image_192
      real_name:
        type: string
        description: real_name
      last_name:
        type: string
        description: last_name
      team:
        $ref: '#/definitions/defs_team'
        description: team
      status_expiration:
        type: integer
        description: status_expiration
      title:
        type: string
        description: title
      status_text_canonical:
        type: string
        description: status_text_canonical
      image_24:
        format: uri
        type: string
        description: image_24
      image_32:
        format: uri
        type: string
        description: image_32
      image_original:
        format: uri
        type: string
        description: image_original
      fields:
        type: object
        description: fields
    description: objs_user_profile
  objs_conversation:
    items:
    - required:
      - id
      - name
      - created
      - creator
      - is_archived
      - is_channel
      - is_general
      - is_mpim
      - is_group
      - is_org_shared
      - is_im
      - is_shared
      - is_private
      - name_normalized
      - topic
      - purpose
      additionalProperties: true
      title: Conversation object
      type: object
      properties:
        is_shared:
          type: boolean
          description: is_shared
        creator:
          $ref: '#/definitions/defs_user_id'
          description: creator
        is_read_only:
          type: boolean
          description: is_read_only
        last_read:
          $ref: '#/definitions/defs_ts'
          description: last_read
        previous_names:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_channel_name'
          type: array
          description: previous_names
        unlinked:
          title: Field to determine whether a channel has ever been shared/disconnected
            in the past
          type: integer
          description: unlinked
        shared_team_ids:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_team'
          type: array
          description: shared_team_ids
        priority:
          type: integer
          description: priority
        created:
          type: integer
          description: created
        is_moved:
          type: integer
          description: is_moved
        members:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_user_id'
          type: array
          description: members
        is_general:
          type: boolean
          description: is_general
        is_archived:
          type: boolean
          description: is_archived
        is_channel:
          type: boolean
          description: is_channel
        purpose:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
              description: creator
            value:
              type: string
              description: value
            last_set:
              type: integer
              description: last_set
          description: purpose
        is_im:
          type: boolean
          description: is_im
        topic:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
              description: creator
            value:
              type: string
              description: value
            last_set:
              type: integer
              description: last_set
          description: topic
        pending_shared:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_team'
          type: array
          description: pending_shared
        name_normalized:
          type: string
          description: name_normalized
        user:
          $ref: '#/definitions/defs_user_id'
          description: user
        is_mpim:
          type: boolean
          enum:
          - false
          description: is_mpim
        name:
          type: string
          description: name
        timezone_count:
          type: integer
          description: timezone_count
        accepted_user:
          $ref: '#/definitions/defs_user_id'
          description: accepted_user
        is_pending_ext_shared:
          type: boolean
          description: is_pending_ext_shared
        num_members:
          type: integer
          description: num_members
        is_group:
          type: boolean
          description: is_group
        is_ext_shared:
          type: boolean
          description: is_ext_shared
        unread_count:
          type: integer
          description: unread_count
        id:
          $ref: '#/definitions/defs_channel'
          description: id
        is_member:
          type: boolean
          description: is_member
        display_counts:
          required:
          - display_counts
          - guest_counts
          additionalProperties: true
          type: object
          properties:
            guest_counts:
              type: integer
              description: guest_counts
            display_counts:
              type: integer
              description: display_counts
          description: display_counts
        is_private:
          type: boolean
          description: is_private
        unread_count_display:
          type: integer
          description: unread_count_display
        pin_count:
          type: integer
          description: pin_count
        latest:
          items:
          - $ref: '#/definitions/objs_message'
            description: item
          - type: "null"
            description: item
          description: latest
        shares:
          minItems: 0
          uniqueItems: true
          items:
            required:
            - team
            - user
            - accepted_user
            - is_active
            additionalProperties: true
            type: object
            properties:
              user:
                $ref: '#/definitions/defs_user_id'
                description: user
              accepted_user:
                $ref: '#/definitions/defs_user_id'
                description: accepted_user
              team:
                $ref: '#/definitions/objs_team'
                description: team
              is_active:
                type: boolean
                description: is_active
            description: item
          type: array
          description: shares
        has_pins:
          type: boolean
          description: has_pins
        is_open:
          type: boolean
          description: is_open
        is_org_shared:
          type: boolean
          description: is_org_shared
      description: item
    - required:
      - id
      - name
      - created
      - creator
      - is_archived
      - is_channel
      - is_general
      - is_mpim
      - is_group
      - is_org_shared
      - is_im
      - is_shared
      - is_private
      - name_normalized
      - topic
      - purpose
      additionalProperties: true
      title: Conversation MPIM Object
      type: object
      properties:
        is_shared:
          type: boolean
          description: is_shared
        creator:
          $ref: '#/definitions/defs_user_id'
          description: creator
        is_read_only:
          type: boolean
          description: is_read_only
        last_read:
          $ref: '#/definitions/defs_ts'
          description: last_read
        previous_names:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_channel_name'
          type: array
          description: previous_names
        unlinked:
          title: Field to determine whether a channel has ever been shared/disconnected
            in the past
          type: integer
          description: unlinked
        shared_team_ids:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_team'
          type: array
          description: shared_team_ids
        priority:
          type: integer
          description: priority
        created:
          type: integer
          description: created
        is_moved:
          type: integer
          description: is_moved
        members:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_user_id'
          type: array
          description: members
        is_general:
          type: boolean
          description: is_general
        is_archived:
          type: boolean
          description: is_archived
        is_channel:
          type: boolean
          description: is_channel
        purpose:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
              description: creator
            value:
              type: string
              description: value
            last_set:
              type: integer
              description: last_set
          description: purpose
        is_im:
          type: boolean
          description: is_im
        topic:
          required:
          - value
          - creator
          - last_set
          additionalProperties: true
          type: object
          properties:
            creator:
              $ref: '#/definitions/defs_topic_purpose_creator'
              description: creator
            value:
              type: string
              description: value
            last_set:
              type: integer
              description: last_set
          description: topic
        pending_shared:
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/definitions/defs_team'
          type: array
          description: pending_shared
        name_normalized:
          type: string
          description: name_normalized
        user:
          $ref: '#/definitions/defs_user_id'
          description: user
        is_mpim:
          type: boolean
          enum:
          - true
          description: is_mpim
        name:
          type: string
          description: name
        timezone_count:
          type: integer
          description: timezone_count
        accepted_user:
          $ref: '#/definitions/defs_user_id'
          description: accepted_user
        is_pending_ext_shared:
          type: boolean
          description: is_pending_ext_shared
        num_members:
          type: integer
          description: num_members
        is_group:
          type: boolean
          description: is_group
        is_ext_shared:
          type: boolean
          description: is_ext_shared
        unread_count:
          type: integer
          description: unread_count
        id:
          $ref: '#/definitions/defs_channel'
          description: id
        is_member:
          type: boolean
          description: is_member
        display_counts:
          required:
          - display_counts
          - guest_counts
          additionalProperties: true
          type: object
          properties:
            guest_counts:
              type: integer
              description: guest_counts
            display_counts:
              type: integer
              description: display_counts
          description: display_counts
        is_private:
          type: boolean
          description: is_private
        unread_count_display:
          type: integer
          description: unread_count_display
        pin_count:
          type: string
          description: pin_count
        latest:
          items:
          - $ref: '#/definitions/objs_message'
            description: item
          - type: "null"
            description: item
          description: latest
        shares:
          minItems: 0
          uniqueItems: true
          items:
            required:
            - team
            - user
            - accepted_user
            - is_active
            additionalProperties: true
            type: object
            properties:
              user:
                $ref: '#/definitions/defs_user_id'
                description: user
              accepted_user:
                $ref: '#/definitions/defs_user_id'
                description: accepted_user
              team:
                $ref: '#/definitions/objs_team'
                description: team
              is_active:
                type: boolean
                description: is_active
            description: item
          type: array
          description: shares
        is_open:
          type: boolean
          description: is_open
        is_org_shared:
          type: boolean
          description: is_org_shared
      description: item
    - required:
      - id
      - created
      - is_im
      - is_org_shared
      - user
      - priority
      additionalProperties: true
      title: Conversation IM Channel Object from conversations.* methods
      type: object
      properties:
        is_shared:
          type: boolean
          description: is_shared
        last_read:
          $ref: '#/definitions/defs_ts'
          description: last_read
        priority:
          type: integer
          description: priority
        created:
          type: integer
          description: created
        is_user_deleted:
          type: boolean
          description: is_user_deleted
        is_im:
          type: boolean
          description: is_im
        user:
          $ref: '#/definitions/defs_user_id'
          description: user
        is_ext_shared:
          type: boolean
          description: is_ext_shared
        unread_count:
          type: integer
          description: unread_count
        id:
          $ref: '#/definitions/defs_dm_id'
          description: id
        unread_count_display:
          type: integer
          description: unread_count_display
        latest:
          items:
          - $ref: '#/definitions/objs_message'
            description: item
          - type: "null"
            description: item
          description: latest
        has_pins:
          type: boolean
          description: has_pins
        is_open:
          type: boolean
          description: is_open
        is_org_shared:
          type: boolean
          description: is_org_shared
      description: item
    description: objs_conversation
  defs_ok_true:
    title: default success response
    type: boolean
    enum:
    - true
    description: defs_ok_true
  objs_inviting_user:
    required:
    - id
    - team_id
    - name
    - profile
    - is_restricted
    - is_ultra_restricted
    - updated
    - is_app_user
    additionalProperties: true
    type: object
    properties:
      team_id:
        $ref: '#/definitions/defs_team'
        description: team_id
      is_app_user:
        type: boolean
        description: is_app_user
      profile:
        $ref: '#/definitions/objs_user_profile_shortest'
        description: profile
      name:
        type: string
        description: name
      real_name:
        type: string
        description: real_name
      id:
        $ref: '#/definitions/defs_user_id'
        description: id
      updated:
        type: number
        description: updated
      is_restricted:
        type: boolean
        description: is_restricted
      is_ultra_restricted:
        type: boolean
        description: is_ultra_restricted
    description: objs_inviting_user
  defs_file_id:
    pattern: ^[F][A-Z0-9]{8}$
    title: File ID
    type: string
    description: defs_file_id
  objs_im:
    required:
    - id
    - is_im
    - is_org_shared
    - user
    - created
    - is_user_deleted
    additionalProperties: true
    title: IM Object
    type: object
    properties:
      priority:
        type: integer
        description: priority
      created:
        type: integer
        description: created
      is_user_deleted:
        type: boolean
        description: is_user_deleted
      is_im:
        type: boolean
        description: is_im
      user:
        $ref: '#/definitions/defs_user_id'
        description: user
      id:
        $ref: '#/definitions/defs_dm_id'
        description: id
      is_org_shared:
        type: boolean
        description: is_org_shared
    description: objs_im
  objs_scopes:
    items:
      title: Named OAuth scopes
      type: string
      x-examples:
      - chat:write
      - im:history
      - im:read
      description: item
    type: array
    description: objs_scopes
  objs_user:
    required:
    - id
    - team_id
    - name
    - deleted
    - color
    - real_name
    - tz
    - tz_label
    - tz_offset
    - profile
    - is_admin
    - is_owner
    - is_primary_owner
    - is_restricted
    - is_ultra_restricted
    - is_bot
    - updated
    - is_app_user
    additionalProperties: true
    type: object
    properties:
      tz_offset:
        type: number
        description: tz_offset
      team_id:
        $ref: '#/definitions/defs_team'
        description: team_id
      is_primary_owner:
        type: boolean
        description: is_primary_owner
      is_app_user:
        type: boolean
        description: is_app_user
      color:
        pattern: ^[a-fA-F0-9]{6}$
        type: string
        description: color
      has_2fa:
        type: boolean
        description: has_2fa
      locale:
        type: string
        description: locale
      profile:
        $ref: '#/definitions/objs_user_profile'
        description: profile
      tz:
        type: string
        description: tz
      presence:
        type: string
        description: presence
      is_owner:
        type: boolean
        description: is_owner
      is_bot:
        type: boolean
        description: is_bot
      name:
        type: string
        description: name
      tz_label:
        type: string
        description: tz_label
      real_name:
        type: string
        description: real_name
      is_admin:
        type: boolean
        description: is_admin
      id:
        $ref: '#/definitions/defs_user_id'
        description: id
      deleted:
        type: boolean
        description: deleted
      updated:
        type: number
        description: updated
      is_restricted:
        type: boolean
        description: is_restricted
      is_ultra_restricted:
        type: boolean
        description: is_ultra_restricted
    description: objs_user
  defs_channel_id:
    pattern: ^[C][A-Z0-9]{8}$
    title: Channel ID
    type: string
    description: defs_channel_id
  team_prefs_prefs:
    required:
    - default_channels
    additionalProperties: true
    title: Team Prefs Object
    type: object
    properties:
      file_retention_duration:
        type: integer
        description: file_retention_duration
      default_channels:
        items:
          $ref: '#/definitions/defs_channel'
        type: array
        description: default_channels
      who_can_change_team_profile:
        type: string
        description: who_can_change_team_profile
      custom_tos:
        type: boolean
        description: custom_tos
      calling_app_name:
        type: string
        description: calling_app_name
      allow_calls_interactive_screen_sharing:
        type: boolean
        description: allow_calls_interactive_screen_sharing
      enterprise_mdm_date_enabled:
        type: integer
        description: enterprise_mdm_date_enabled
      disallow_public_file_urls:
        type: boolean
        description: disallow_public_file_urls
      file_limit_whitelisted:
        type: boolean
        description: file_limit_whitelisted
      enterprise_mdm_level:
        type: integer
        description: enterprise_mdm_level
      custom_status_default_emoji:
        type: string
        description: custom_status_default_emoji
      show_join_leave:
        type: boolean
        description: show_join_leave
      enterprise_mandatory_channels:
        type: array
        description: enterprise_mandatory_channels
      warn_before_at_channel:
        type: string
        description: warn_before_at_channel
      who_can_kick_groups:
        type: string
        description: who_can_kick_groups
      hide_referers:
        type: boolean
        description: hide_referers
      who_can_post_general:
        type: string
        description: who_can_post_general
      enable_shared_channels:
        type: integer
        description: enable_shared_channels
      locale:
        type: string
        description: locale
      group_retention_type:
        type: integer
        description: group_retention_type
      who_can_create_delete_user_groups:
        type: string
        description: who_can_create_delete_user_groups
      all_users_can_purchase:
        type: boolean
        description: all_users_can_purchase
      retention_type:
        type: integer
        description: retention_type
      default_rxns:
        items:
          type: string
          description: item
        type: array
        description: default_rxns
      gdrive_enabled_team:
        type: boolean
        description: gdrive_enabled_team
      dm_retention_duration:
        type: integer
        description: dm_retention_duration
      who_has_team_visibility:
        type: string
        description: who_has_team_visibility
      allow_message_deletion:
        type: boolean
        description: allow_message_deletion
      enterprise_default_channels:
        type: array
        description: enterprise_default_channels
      dnd_end_hour:
        type: string
        description: dnd_end_hour
      allow_retention_override:
        type: boolean
        description: allow_retention_override
      compliance_export_start:
        type: integer
        description: compliance_export_start
      who_can_manage_guests:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            items:
              type: string
              description: item
            type: array
            description: type
        description: who_can_manage_guests
      who_can_create_shared_channels:
        type: string
        description: who_can_create_shared_channels
      app_whitelist_enabled:
        type: boolean
        description: app_whitelist_enabled
      who_can_kick_channels:
        type: string
        description: who_can_kick_channels
      can_receive_shared_channels_invites:
        type: boolean
        description: can_receive_shared_channels_invites
      dnd_enabled:
        type: boolean
        description: dnd_enabled
      display_real_names:
        type: boolean
        description: display_real_names
      who_can_manage_shared_channels:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            items:
              type: string
              description: item
            type: array
            description: type
        description: who_can_manage_shared_channels
      auth_mode:
        type: string
        description: auth_mode
      who_can_at_everyone:
        type: string
        description: who_can_at_everyone
      msg_edit_window_mins:
        type: integer
        description: msg_edit_window_mins
      who_can_create_channels:
        type: string
        description: who_can_create_channels
      allow_calls:
        type: boolean
        description: allow_calls
      enterprise_team_creation_request:
        required:
        - is_enabled
        additionalProperties: true
        type: object
        properties:
          is_enabled:
            type: boolean
            description: is_enabled
        description: enterprise_team_creation_request
      who_can_manage_integrations:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            items:
              type: string
              description: item
            type: array
            description: type
        description: who_can_manage_integrations
      disable_file_uploads:
        type: string
        description: disable_file_uploads
      file_retention_type:
        type: integer
        description: file_retention_type
      disable_email_ingestion:
        type: boolean
        description: disable_email_ingestion
      loud_channel_mentions_limit:
        type: integer
        description: loud_channel_mentions_limit
      invites_only_admins:
        type: boolean
        description: invites_only_admins
      retention_duration:
        type: integer
        description: retention_duration
      who_can_post_in_shared_channels:
        required:
        - type
        additionalProperties: true
        type: object
        properties:
          type:
            items:
              type: string
              description: item
            type: array
            description: type
        description: who_can_post_in_shared_channels
      dm_retention_type:
        type: integer
        description: dm_retention_type
      who_can_at_channel:
        type: string
        description: who_can_at_channel
      group_retention_duration:
        type: integer
        description: group_retention_duration
      who_can_edit_user_groups:
        type: string
        description: who_can_edit_user_groups
      invites_limit:
        type: boolean
        description: invites_limit
      uses_customized_custom_status_presets:
        type: boolean
        description: uses_customized_custom_status_presets
      who_can_create_groups:
        type: string
        description: who_can_create_groups
      display_email_addresses:
        type: boolean
        description: display_email_addresses
      dnd_start_hour:
        type: string
        description: dnd_start_hour
      disable_file_deleting:
        type: boolean
        description: disable_file_deleting
      allow_shared_channel_perms_override:
        type: boolean
        description: allow_shared_channel_perms_override
      disable_file_editing:
        type: boolean
        description: disable_file_editing
      custom_status_presets:
        minItems: 1
        uniqueItems: true
        items:
          minItems: 1
          uniqueItems: true
          items:
            type: string
            description: item
          type: array
          description: item
        type: array
        description: custom_status_presets
      discoverable:
        type: string
        description: discoverable
      who_can_archive_channels:
        type: string
        description: who_can_archive_channels
    description: team_prefs_prefs
  objs_file:
    additionalProperties: true
    title: file object
    type: object
    properties:
      thumb_720_w:
        type: integer
        description: thumb_720_w
      thumb_360:
        format: uri
        type: string
        description: thumb_360
      thumb_720:
        format: uri
        type: string
        description: thumb_720
      groups:
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_group_id'
        type: array
        description: groups
      thumb_360_w:
        type: integer
        description: thumb_360_w
      thumb_480_h:
        type: integer
        description: thumb_480_h
      size:
        type: integer
        description: size
      created:
        type: integer
        description: created
      channels:
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_channel_id'
        type: array
        description: channels
      is_external:
        type: boolean
        description: is_external
      mode:
        type: string
        description: mode
      permalink:
        format: uri
        type: string
        description: permalink
      filetype:
        type: string
        description: filetype
      username:
        type: string
        description: username
      thumb_800_h:
        type: integer
        description: thumb_800_h
      thumb_160:
        format: uri
        type: string
        description: thumb_160
      editable:
        type: boolean
        description: editable
      thumb_1024:
        format: uri
        type: string
        description: thumb_1024
      thumb_1024_w:
        type: integer
        description: thumb_1024_w
      url_private:
        format: uri
        type: string
        description: url_private
      thumb_1024_h:
        type: integer
        description: thumb_1024_h
      image_exif_rotation:
        type: integer
        description: image_exif_rotation
      thumb_800:
        format: uri
        type: string
        description: thumb_800
      thumb_800_w:
        type: integer
        description: thumb_800_w
      pretty_type:
        type: string
        description: pretty_type
      user:
        type: string
        description: user
      mimetype:
        type: string
        description: mimetype
      comments_count:
        type: integer
        description: comments_count
      is_public:
        type: boolean
        description: is_public
      pinned_to:
        items:
          $ref: '#/definitions/defs_channel'
        type: array
        description: pinned_to
      name:
        type: string
        description: name
      ims:
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_dm_id'
        type: array
        description: ims
      external_type:
        type: string
        description: external_type
      reactions:
        items:
          $ref: '#/definitions/objs_reaction'
        type: array
        description: reactions
      url_private_download:
        format: uri
        type: string
        description: url_private_download
      thumb_480_w:
        type: integer
        description: thumb_480_w
      id:
        $ref: '#/definitions/defs_file_id'
        description: id
      thumb_480:
        format: uri
        type: string
        description: thumb_480
      permalink_public:
        format: uri
        type: string
        description: permalink_public
      title:
        type: string
        description: title
      public_url_shared:
        type: boolean
        description: public_url_shared
      thumb_360_h:
        type: integer
        description: thumb_360_h
      thumb_64:
        format: uri
        type: string
        description: thumb_64
      thumb_720_h:
        type: integer
        description: thumb_720_h
      timestamp:
        type: integer
        description: timestamp
      thumb_960:
        format: uri
        type: string
        description: thumb_960
      original_h:
        type: integer
        description: original_h
      thumb_960_w:
        type: integer
        description: thumb_960_w
      original_w:
        type: integer
        description: original_w
      thumb_960_h:
        type: integer
        description: thumb_960_h
      pinned_info:
        $ref: '#/definitions/defs_pinned_info'
        description: pinned_info
      display_as_bot:
        type: boolean
        description: display_as_bot
      thumb_80:
        format: uri
        type: string
        description: thumb_80
    description: objs_file
  objs_dnd:
    required:
    - dnd_enabled
    - next_dnd_end_ts
    - next_dnd_start_ts
    - snooze_enabled
    additionalProperties: true
    type: object
    properties:
      next_dnd_end_ts:
        type: integer
        description: next_dnd_end_ts
      dnd_enabled:
        type: boolean
        description: dnd_enabled
      snooze_enabled:
        type: boolean
        description: snooze_enabled
      next_dnd_start_ts:
        type: integer
        description: next_dnd_start_ts
    description: objs_dnd
  objs_message:
    required:
    - text
    - type
    - ts
    additionalProperties: true
    title: Message object
    type: object
    properties:
      subscribed:
        type: boolean
        description: subscribed
      source_team:
        $ref: '#/definitions/defs_team'
        description: source_team
      ts:
        $ref: '#/definitions/defs_ts'
        description: ts
      last_read:
        $ref: '#/definitions/defs_ts'
        description: last_read
      attachments:
        minItems: 1
        uniqueItems: true
        items:
          required:
          - id
          additionalProperties: true
          type: object
          properties:
            image_height:
              type: integer
              description: image_height
            image_url:
              type: string
              description: image_url
            image_width:
              type: integer
              description: image_width
            fallback:
              type: string
              description: fallback
            id:
              type: integer
              description: id
            image_bytes:
              type: integer
              description: image_bytes
          description: item
        type: array
        description: attachments
      user_profile:
        $ref: '#/definitions/objs_user_profile_short'
        description: user_profile
      text:
        type: string
        description: text
      icons:
        additionalProperties: true
        type: object
        properties:
          emoji:
            type: string
            description: emoji
        description: icons
      inviter:
        $ref: '#/definitions/defs_user_id'
        description: inviter
      permalink:
        format: uri
        type: string
        description: permalink
      is_intro:
        type: boolean
        description: is_intro
      thread_ts:
        $ref: '#/definitions/defs_ts'
        description: thread_ts
      username:
        type: string
        description: username
      purpose:
        type: string
        description: purpose
      topic:
        type: string
        description: topic
      user:
        $ref: '#/definitions/defs_user_id'
        description: user
      replies:
        items:
          required:
          - user
          - ts
          additionalProperties: true
          type: object
          properties:
            ts:
              $ref: '#/definitions/defs_ts'
              description: ts
            user:
              $ref: '#/definitions/defs_user_id'
              description: user
          description: item
        type: array
        description: replies
      pinned_to:
        items:
          $ref: '#/definitions/defs_channel'
        type: array
        description: pinned_to
      subtype:
        type: string
        description: subtype
      name:
        type: string
        description: name
      old_name:
        type: string
        description: old_name
      reactions:
        items:
          $ref: '#/definitions/objs_reaction'
        type: array
        description: reactions
      team:
        $ref: '#/definitions/defs_team'
        description: team
      unread_count:
        type: integer
        description: unread_count
      type:
        type: string
        description: type
      user_team:
        $ref: '#/definitions/defs_team'
        description: user_team
      upload:
        type: boolean
        description: upload
      bot_id:
        items:
        - $ref: '#/definitions/defs_bot_id'
          description: item
        - title: Nil bot_id set when display_as_bot is false
          type: "null"
          description: item
        description: bot_id
      comment:
        $ref: '#/definitions/objs_comment'
        description: comment
      reply_count:
        type: integer
        description: reply_count
      file:
        $ref: '#/definitions/objs_file'
        description: file
      display_as_bot:
        type: boolean
        description: display_as_bot
    description: objs_message
  defs_channel:
    pattern: ^[CGD][A-Z0-9]{8}$
    title: Channel-like conversation ID
    type: string
    description: defs_channel
  objs_comment:
    additionalProperties: true
    title: File Comment Object
    type: object
    properties:
      created:
        type: integer
        description: created
      is_intro:
        type: boolean
        description: is_intro
      user:
        type: string
        description: user
      pinned_to:
        items:
          $ref: '#/definitions/defs_channel'
        type: array
        description: pinned_to
      reactions:
        items:
          $ref: '#/definitions/objs_reaction'
        type: array
        description: reactions
      id:
        $ref: '#/definitions/defs_comment_id'
        description: id
      comment:
        type: string
        description: comment
      timestamp:
        type: integer
        description: timestamp
      pinned_info:
        $ref: '#/definitions/defs_pinned_info'
        description: pinned_info
    description: objs_comment
  defs_channel_name:
    title: Name of a channel
    type: string
    description: defs_channel_name
  defs_app_id:
    pattern: ^A[A-Z0-9]{8}$
    title: App ID
    type: string
    description: defs_app_id
  defs_bot_id:
    pattern: ^B[A-Z0-9]{8}$
    title: Bot User ID
    type: string
    description: defs_bot_id
  defs_dm_id:
    pattern: ^[D][A-Z0-9]{8}$
    title: Direct Message Channel ID
    type: string
    description: defs_dm_id
  objs_file_object_with_id_only:
    $ref: '#/definitions/defs_file_id'
    additionalProperties: true
    title: file object with ID only
    type: string
    description: objs_file_object_with_id_only
  objs_team:
    required:
    - id
    - name
    - domain
    - email_domain
    - icon
    additionalProperties: true
    title: Team Object
    type: object
    properties:
      enterprise_id:
        type: string
        description: enterprise_id
      over_storage_limit:
        type: boolean
        description: over_storage_limit
      enterprise_name:
        type: string
        description: enterprise_name
      domain:
        type: string
        description: domain
      plan:
        type: string
        description: plan
      icon:
        type: object
        properties:
          image_44:
            type: string
            description: image_44
          image_88:
            type: string
            description: image_88
          image_default:
            type: boolean
            description: image_default
          image_68:
            type: string
            description: image_68
          image_34:
            type: string
            description: image_34
          image_132:
            type: string
            description: image_132
          image_102:
            type: string
            description: image_102
          image_230:
            type: string
            description: image_230
        description: icon
      over_integrations_limit:
        type: boolean
        description: over_integrations_limit
      messages_count:
        type: integer
        description: messages_count
      name:
        type: string
        description: name
      msg_edit_window_mins:
        type: integer
        description: msg_edit_window_mins
      avatar_base_url:
        format: uri
        type: string
        description: avatar_base_url
      prefs:
        $ref: '#/definitions/team_prefs_prefs'
        description: prefs
      id:
        $ref: '#/definitions/defs_team'
        description: id
      has_compliance_export:
        type: boolean
        description: has_compliance_export
      email_domain:
        type: string
        description: email_domain
    description: objs_team
  defs_room_id:
    pattern: ^[R][A-Z0-9]{8}$
    title: Room ID for a slack call
    type: string
    description: defs_room_id
  objs_user_profile_shortest:
    required:
    - avatar_hash
    - image_72
    - first_name
    - real_name
    - display_name
    - team
    additionalProperties: true
    type: object
    properties:
      display_name:
        type: string
        description: display_name
      first_name:
        type: string
        description: first_name
      image_72:
        format: uri
        type: string
        description: image_72
      avatar_hash:
        type: string
        description: avatar_hash
      real_name:
        type: string
        description: real_name
      team:
        $ref: '#/definitions/defs_team'
        description: team
    description: objs_user_profile_shortest
  usersProfileSetdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.profile.set error schema
    type: object
    description: Schema for error response from users.profile.set method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - reserved_name
        - invalid_profile
        - profile_set_failed
        - not_admin
        - not_app_admin
        - cannot_update_admin_user
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  usersProfileSet200:
    required:
    - ok
    - username
    - profile
    additionalProperties: true
    title: users.profile.set schema
    type: object
    description: Schema for successful response from users.profile.set method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      profile:
        $ref: '#/definitions/objs_user_profile'
        description: profile
      username:
        type: string
        description: username
  usersProfileSetBody:
    type: object
    properties:
      profile:
        type: string
        description: Collection of key:value pairs presented as a URL-encoded JSON
          hash.
      user:
        type: string
        description: ID of user to change. This argument may only be specified by
          team admins on paid teams.
      value:
        type: string
        description: Value to set a single key to. Usable only if `profile` is not
          passed.
      name:
        type: string
        description: Name of a single key to set. Usable only if `profile` is not
          passed.
    description: usersProfileSet body
  dndTeamInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: dnd.teamInfo error schema
    type: object
    description: Schema for error response from dnd.teamInfo method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  dndTeamInfo200:
    required:
    - ok
    - users
    additionalProperties: true
    title: dnd.teamInfo success schema
    type: object
    description: Schema for successful response from dnd.teamInfo method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      users:
        additionalProperties: true
        type: object
        description: users
      cached:
        type: boolean
        description: cached
  chatPostMessagedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: chat.postMessage error schema
    type: object
    description: Schema for error response chat.postMessage method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - not_in_channel
        - is_archived
        - msg_too_long
        - no_text
        - too_many_attachments
        - rate_limited
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        description: error
  chatPostMessage200:
    required:
    - ok
    - channel
    - ts
    - message
    additionalProperties: true
    title: chat.postMessage success schema
    type: object
    description: Schema for successful response of chat.postMessage method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      ts:
        $ref: '#/definitions/defs_ts'
        description: ts
      channel:
        $ref: '#/definitions/defs_channel'
        description: channel
      message:
        $ref: '#/definitions/objs_message'
        description: message
  chatPostMessageBody:
    type: object
    properties:
      username:
        type: string
        description: Set your bot's user name. Must be used in conjunction with `as_user`
          set to false, otherwise ignored. See [authorship](#authorship) below.
      thread_ts:
        type: number
        description: Provide another message's `ts` value to make this message a reply.
          Avoid using a reply's `ts` value; use its parent instead.
      attachments:
        type: string
        description: A JSON-based array of structured attachments, presented as a
          URL-encoded string.
      unfurl_links:
        type: boolean
        description: Pass true to enable unfurling of primarily text-based content.
      text:
        type: string
        description: Text of the message to send. See below for an explanation of
          [formatting](#formatting). This field is usually required, unless you're
          providing only `attachments` instead. Provide no more than 40,000 characters
          or [risk truncation](/changelog/2018-04-truncating-really-long-messages).
      unfurl_media:
        type: boolean
        description: Pass false to disable unfurling of media content.
      parse:
        type: string
        description: Change how messages are treated. Defaults to `none`. See [below](#formatting).
      as_user:
        type: boolean
        description: Pass true to post the message as the authed user, instead of
          as a bot. Defaults to false. See [authorship](#authorship) below.
      mrkdwn:
        type: boolean
        description: Disable Slack markup parsing by setting to `false`. Enabled by
          default.
      icon_emoji:
        type: string
        description: Emoji to use as the icon for this message. Overrides `icon_url`.
          Must be used in conjunction with `as_user` set to `false`, otherwise ignored.
          See [authorship](#authorship) below.
      link_names:
        type: boolean
        description: Find and link channel names and usernames.
      icon_url:
        type: string
        description: URL to an image to use as the icon for this message. Must be
          used in conjunction with `as_user` set to false, otherwise ignored. See
          [authorship](#authorship) below.
      channel:
        type: string
        description: Channel, private group, or IM channel to send message to. Can
          be an encoded ID, or a name. See [below](#channels) for more details.
      reply_broadcast:
        type: boolean
        description: Used in conjunction with `thread_ts` and indicates whether reply
          should be made visible to everyone in the channel or conversation. Defaults
          to `false`.
    description: chatPostMessage body
  conversationsSetTopicdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.setTopic error schema
    type: object
    description: Schema for error response from conversations.setTopic method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - channel_not_found
        - not_in_channel
        - is_archived
        - too_long
        - user_is_restricted
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsSetTopic200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.setTopic success schema
    type: object
    description: Schema for successful response from conversations.setTopic method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
  conversationsSetTopicBody:
    type: object
    properties:
      topic:
        type: string
        description: The new topic string. Does not support formatting or linkification.
      channel:
        type: string
        description: Conversation to set the topic of
    description: conversationsSetTopic body
  mpimOpendefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: mpim.open error schema
    type: object
    description: Schema for error response from mpim.open method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - users_list_not_supplied
        - not_enough_users
        - too_many_users
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  mpimOpen200:
    required:
    - ok
    - group
    additionalProperties: true
    title: mpim.open success schema
    type: object
    description: Schema for successful response from mpim.open method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      group:
        $ref: '#/definitions/objs_group'
        description: group
  mpimOpenBody:
    type: object
    properties:
      users:
        type: string
        description: Comma separated lists of users.  The ordering of the users is
          preserved whenever a MPIM group is returned.
    description: mpimOpen body
  usersGetPresencedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.counts error schema
    type: object
    description: Schema for error response users.getPresence method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        description: error
  usersGetPresence200:
    required:
    - ok
    - presence
    additionalProperties: true
    title: 'API method: users.getPresence'
    type: object
    description: Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      online:
        type: boolean
        description: online
      manual_away:
        type: boolean
        description: manual_away
      auto_away:
        type: boolean
        description: auto_away
      presence:
        type: string
        description: presence
      connection_count:
        type: integer
        description: connection_count
      last_activity:
        type: integer
        description: last_activity
  chatMeMessagedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  chatMeMessage200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  chatMeMessageBody:
    type: object
    properties:
      text:
        type: string
        description: Text of the message to send.
      channel:
        type: string
        description: Channel to send message to. Can be a public channel, private
          group or IM channel. Can be an encoded ID, or a name.
    description: chatMeMessage body
  conversationsLeavedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.leave error schema
    type: object
    description: Schema for error response from conversations.leave method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - last_member
        - missing_scope
        - channel_not_found
        - is_archived
        - cant_leave_general
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsLeave200:
    required:
    - ok
    additionalProperties: true
    title: conversations.leave success schema
    type: object
    description: Schema for successful response from conversations.leave method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      not_in_channel:
        type: boolean
        enum:
        - true
        description: not_in_channel
  conversationsLeaveBody:
    type: object
    properties:
      channel:
        type: string
        description: Conversation to leave
    description: conversationsLeave body
  rtmConnectdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: rtm.connect error schema
    type: object
    description: Schema for error response from rtm.connect method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  rtmConnect200:
    required:
    - ok
    - url
    - team
    - self
    additionalProperties: true
    title: rtm.connect schema
    type: object
    description: Schema for successful response from rtm.connect method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      url:
        format: uri
        type: string
        description: url
      self:
        required:
        - id
        - name
        additionalProperties: true
        type: object
        properties:
          name:
            type: string
            description: name
          id:
            $ref: '#/definitions/defs_user_id'
            description: id
        description: self
      team:
        required:
        - id
        - name
        - domain
        additionalProperties: true
        type: object
        properties:
          domain:
            type: string
            description: domain
          name:
            type: string
            description: name
          id:
            $ref: '#/definitions/defs_team'
            description: id
        description: team
  mpimRepliesdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimReplies200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  teamAccessLogsdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  teamAccessLogs200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  authTestdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: auth.test error schema
    type: object
    description: Schema for error response auth.test method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - token_revoked
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  authTest200:
    required:
    - ok
    - url
    - team
    - user
    - team_id
    - user_id
    additionalProperties: true
    title: auth.test success schema
    type: object
    description: Schema for successful response auth.test method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      team_id:
        $ref: '#/definitions/defs_team'
        description: team_id
      url:
        type: string
        description: url
      user:
        type: string
        description: user
      team:
        type: string
        description: team
      user_id:
        $ref: '#/definitions/defs_user_id'
        description: user_id
  imHistorydefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: im.history error schema
    type: object
    description: Schema for error response from im.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_ts_latest
        - invalid_ts_oldest
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  imHistory200:
    required:
    - ok
    - messages
    - has_more
    additionalProperties: true
    title: im.history success schema
    type: object
    description: Schema for successful response from im.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      has_more:
        type: boolean
        description: has_more
      messages:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_message'
        type: array
        description: messages
  groupsHistorydefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.history error schema
    type: object
    description: Schema for error response groups.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_ts_latest
        - invalid_ts_oldest
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  groupsHistory200:
    required:
    - ok
    - messages
    - has_more
    additionalProperties: true
    title: groups.history success schema
    type: object
    description: Schema for successful response groups.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      has_more:
        type: boolean
        description: has_more
      messages:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_message'
        type: array
        description: messages
  pinsListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: pins.list error schema
    type: object
    description: Schema for error response from pins.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  pinsList200:
    items:
    - required:
      - ok
      - items
      additionalProperties: true
      type: object
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        items:
          uniqueItems: true
          items:
          - additionalProperties: true
            title: File Comment Pin
            type: object
            properties:
              created:
                type: integer
                description: created
              created_by:
                $ref: '#/definitions/defs_user_id'
                description: created_by
              type:
                type: string
                enum:
                - file_comment
                description: type
              comment:
                $ref: '#/definitions/objs_comment'
                description: comment
              file:
                $ref: '#/definitions/objs_file'
                description: file
            description: item
          - additionalProperties: true
            title: File Pin
            type: object
            properties:
              created:
                type: integer
                description: created
              created_by:
                $ref: '#/definitions/defs_user_id'
                description: created_by
              type:
                type: string
                enum:
                - file
                description: type
              file:
                $ref: '#/definitions/objs_file'
                description: file
            description: item
          - additionalProperties: true
            title: Message Pin
            type: object
            properties:
              created:
                type: integer
                description: created
              channel:
                $ref: '#/definitions/defs_channel'
                description: channel
              created_by:
                $ref: '#/definitions/defs_user_id'
                description: created_by
              type:
                type: string
                enum:
                - message
                description: type
              message:
                $ref: '#/definitions/objs_message'
                description: message
            description: item
          type: array
          description: items
      description: item
    - required:
      - ok
      - count
      additionalProperties: true
      type: object
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        count:
          type: integer
          description: count
      description: item
    title: pins.list success schema
    description: Schema for successful response from pins.list method
  searchMessagesdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  searchMessages200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  apiTestdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: api.test error schema
    type: object
    description: Schema for error response api.test method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        description: error
  apiTest200:
    required:
    - ok
    additionalProperties: true
    title: api.test success schema
    type: object
    description: Schema for successful response api.test method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  emojiListdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  emojiList200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  oauthAccessdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  oauthAccess200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  reactionsAdddefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: reactions.add error schema
    type: object
    description: Schema for error response from reactions.add method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - bad_timestamp
        - file_not_found
        - file_comment_not_found
        - message_not_found
        - no_item_specified
        - invalid_name
        - already_reacted
        - too_many_emoji
        - too_many_reactions
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  reactionsAdd200:
    required:
    - ok
    additionalProperties: true
    title: reactions.add schema
    type: object
    description: Schema for successful response from reactions.add method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  reactionsAddBody:
    type: object
    properties:
      name:
        type: string
        description: Reaction (emoji) name.
      file_comment:
        type: string
        description: File comment to add reaction to.
      timestamp:
        type: number
        description: Timestamp of the message to add reaction to.
      file:
        type: string
        description: File to add reaction to.
      channel:
        type: string
        description: Channel where the message to add reaction to was posted.
    description: reactionsAdd body
  dndEndSnoozedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  dndEndSnooze200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: files.info error schema
    type: object
    description: Schema for error response from files.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - file_not_found
        - file_deleted
        - timezone_count_failed
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  filesInfo200:
    required:
    - ok
    - file
    - comments
    - paging
    additionalProperties: true
    title: files.info schema
    type: object
    description: Schema for successful response from files.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      paging:
        $ref: '#/definitions/objs_paging'
        description: paging
      comments:
        $ref: '#/definitions/objs_comments'
        description: comments
      file:
        $ref: '#/definitions/objs_file'
        description: file
  groupsRenamedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsRename200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsRenameBody:
    type: object
    properties:
      validate:
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
      name:
        type: string
        description: New name for private channel.
      channel:
        type: string
        description: Private channel to rename
    description: groupsRename body
  conversationsArchivedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.archive error schema
    type: object
    description: Schema for error response from conversations.archive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - not_supported
        - channel_not_found
        - already_archived
        - cant_archive_general
        - restricted_action
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsArchive200:
    required:
    - ok
    additionalProperties: true
    title: conversations.archive success schema
    type: object
    description: Schema for successful response conversations.archive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  conversationsArchiveBody:
    type: object
    properties:
      channel:
        type: string
        description: ID of conversation to archive
    description: conversationsArchive body
  reactionsRemovedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: reactions.remove error schema
    type: object
    description: Schema for error response from reactions.remove method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - bad_timestamp
        - file_not_found
        - file_comment_not_found
        - message_not_found
        - no_item_specified
        - invalid_name
        - no_reaction
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  reactionsRemove200:
    required:
    - ok
    additionalProperties: true
    title: reactions.remove schema
    type: object
    description: Schema for successful response from reactions.remove method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  reactionsRemoveBody:
    type: object
    properties:
      name:
        type: string
        description: Reaction (emoji) name.
      file_comment:
        type: string
        description: File comment to remove reaction from.
      timestamp:
        type: number
        description: Timestamp of the message to remove reaction from.
      file:
        type: string
        description: File to remove reaction from.
      channel:
        type: string
        description: Channel where the message to remove reaction from was posted.
    description: reactionsRemove body
  oauthTokendefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  oauthToken200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  conversationsKickdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.kick error schema
    type: object
    description: Schema for error response conversations.kick method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - channel_not_found
        - user_not_found
        - cant_kick_self
        - not_in_channel
        - cant_kick_from_general
        - restricted_action
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsKick200:
    required:
    - ok
    additionalProperties: true
    title: conversations.kick success schema
    type: object
    description: Schema for successful response conversations.kick method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  conversationsKickBody:
    type: object
    properties:
      user:
        type: string
        description: User ID to be removed.
      channel:
        type: string
        description: ID of conversation to remove user from.
    description: conversationsKick body
  usersIdentitydefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.identity error schema
    type: object
    description: Schema for error response from users.identity method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  usersIdentity200:
    items:
    - required:
      - ok
      - user
      - team
      additionalProperties: true
      type: object
      description: Schema for 'identity.basic' scope
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        user:
          required:
          - name
          - id
          additionalProperties: true
          type: object
          properties:
            name:
              type: string
              description: name
            id:
              $ref: '#/definitions/defs_user_id'
              description: id
          description: user
        team:
          required:
          - id
          additionalProperties: true
          type: object
          properties:
            id:
              $ref: '#/definitions/defs_team'
              description: id
          description: team
    - required:
      - ok
      - user
      - team
      additionalProperties: true
      type: object
      description: Schema for 'identity.basic,identity.email' scopes
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        user:
          required:
          - name
          - id
          - email
          additionalProperties: true
          type: object
          properties:
            email:
              format: email
              type: string
              description: email
            name:
              type: string
              description: name
            id:
              $ref: '#/definitions/defs_user_id'
              description: id
          description: user
        team:
          required:
          - id
          additionalProperties: true
          type: object
          properties:
            id:
              $ref: '#/definitions/defs_team'
              description: id
          description: team
    - required:
      - ok
      - user
      - team
      additionalProperties: true
      type: object
      description: Schema for 'identity.basic,identity.avatar' scopes
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        user:
          required:
          - name
          - id
          - image_24
          - image_32
          - image_48
          - image_72
          - image_192
          - image_512
          additionalProperties: true
          type: object
          properties:
            image_48:
              format: url
              type: string
              description: image_48
            image_72:
              format: url
              type: string
              description: image_72
            image_512:
              format: url
              type: string
              description: image_512
            name:
              type: string
              description: name
            image_192:
              format: url
              type: string
              description: image_192
            id:
              $ref: '#/definitions/defs_user_id'
              description: id
            image_24:
              format: url
              type: string
              description: image_24
            image_32:
              format: url
              type: string
              description: image_32
          description: user
        team:
          required:
          - id
          additionalProperties: true
          type: object
          properties:
            id:
              $ref: '#/definitions/defs_team'
              description: id
          description: team
    - required:
      - ok
      - user
      - team
      additionalProperties: true
      type: object
      description: Schema for 'identity.basic,identity.team' scopes
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        user:
          required:
          - name
          - id
          additionalProperties: true
          type: object
          properties:
            name:
              type: string
              description: name
            id:
              $ref: '#/definitions/defs_user_id'
              description: id
          description: user
        team:
          required:
          - id
          - name
          - domain
          - image_34
          - image_44
          - image_68
          - image_88
          - image_102
          - image_132
          - image_230
          - image_default
          additionalProperties: true
          type: object
          properties:
            image_44:
              format: url
              type: string
              description: image_44
            image_88:
              format: url
              type: string
              description: image_88
            domain:
              type: string
              description: domain
            image_default:
              type: boolean
              description: image_default
            image_68:
              format: url
              type: string
              description: image_68
            name:
              type: string
              description: name
            image_34:
              format: url
              type: string
              description: image_34
            id:
              $ref: '#/definitions/defs_team'
              description: id
            image_132:
              format: url
              type: string
              description: image_132
            image_102:
              format: url
              type: string
              description: image_102
            image_230:
              format: url
              type: string
              description: image_230
          description: team
    title: users.identity schema
    description: Schema for successful response from users.identity method
  channelsSetPurposedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.setPurpose error schema
    type: object
    description: Schema for error response from channels.setPurpose method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - not_in_channel
        - is_archived
        - too_long
        - user_is_restricted
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  channelsSetPurpose200:
    required:
    - ok
    - purpose
    additionalProperties: true
    title: channels.setPurpose schema
    type: object
    description: Schema for successful response from channels.setPurpose method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      purpose:
        type: string
        description: purpose
  channelsSetPurposeBody:
    type: object
    properties:
      purpose:
        type: string
        description: The new purpose
      channel:
        type: string
        description: Channel to set the purpose of
    description: channelsSetPurpose body
  usersInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.info error schema
    type: object
    description: Schema for error response from users.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - user_not_found
        - user_not_visible
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  usersInfo200:
    required:
    - ok
    - user
    additionalProperties: true
    title: users.info success schema
    type: object
    description: Schema for successful response from users.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      user:
        $ref: '#/definitions/objs_user'
        description: user
  conversationsListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.list error schema
    type: object
    description: Schema for error response from conversations.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - missing_scope
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsList200:
    required:
    - ok
    - channels
    additionalProperties: true
    title: conversations.list success schema
    type: object
    description: Schema for successful response from conversations.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channels:
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_conversation'
        type: array
        description: channels
      response_metadata:
        required:
        - next_cursor
        additionalProperties: true
        type: object
        properties:
          next_cursor:
            type: string
            description: next_cursor
        description: response_metadata
  channelsCreatedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.create error schema
    type: object
    description: Schema for error response channels.create method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - name_taken
        - restricted_action
        - no_channel
        - invalid_name_required
        - invalid_name_punctuation
        - invalid_name_maxlength
        - invalid_name_specials
        - invalid_name
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
  channelsCreate200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: channels.create error schema
    type: object
    description: Schema for successful response channels.create method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_channel'
        description: channel
  channelsCreateBody:
    type: object
    properties:
      validate:
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
      name:
        type: string
        description: Name of channel to create
    description: channelsCreate body
  conversationsJoindefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.join error schema
    type: object
    description: Schema for error response from conversations.join method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - channel_not_found
        - is_archived
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsJoin200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.join success schema
    type: object
    description: Schema for successful response from conversations.join method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
      warning:
        type: string
        description: warning
      response_metadata:
        title: Response metadata
        type: object
        properties:
          warnings:
            minItems: 1
            uniqueItems: true
            items:
              type: string
              description: item
            type: array
            description: warnings
        description: response_metadata
  conversationsJoinBody:
    type: object
    properties:
      channel:
        type: string
        description: ID of conversation to join
    description: conversationsJoin body
  usergroupsEnabledefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsEnable200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsEnableBody:
    type: object
    properties:
      include_count:
        type: boolean
        description: Include the number of users in the User Group.
      usergroup:
        type: string
        description: The encoded ID of the User Group to enable.
    description: usergroupsEnable body
  usersSetActivedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usersSetActive200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersDeletedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersDelete200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersDeleteBody:
    type: object
    properties:
      reminder:
        type: string
        description: The ID of the reminder
    description: remindersDelete body
  remindersCompletedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersComplete200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersCompleteBody:
    type: object
    properties:
      reminder:
        type: string
        description: The ID of the reminder to be marked as complete
    description: remindersComplete body
  appsPermissionsScopesListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: apps.permissions.scopes.list error schema
    type: object
    description: Schema for error response from apps.permissions.scopes.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  appsPermissionsScopesList200:
    required:
    - ok
    - scopes
    additionalProperties: true
    title: api.permissions.scopes.list success schema
    type: object
    description: Schema for successful response api.permissions.scopes.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      scopes:
        additionalProperties: true
        type: object
        properties:
          im:
            $ref: '#/definitions/objs_scopes'
            description: im
          group:
            $ref: '#/definitions/objs_scopes'
            description: group
          channel:
            $ref: '#/definitions/objs_scopes'
            description: channel
          app_home:
            $ref: '#/definitions/objs_scopes'
            description: app_home
          user:
            $ref: '#/definitions/objs_scopes'
            description: user
          team:
            $ref: '#/definitions/objs_scopes'
            description: team
          mpim:
            $ref: '#/definitions/objs_scopes'
            description: mpim
        description: scopes
  starsRemovedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  starsRemove200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  starsRemoveBody:
    type: object
    properties:
      file_comment:
        type: string
        description: File comment to remove star from.
      timestamp:
        type: number
        description: Timestamp of the message to remove star from.
      channel:
        type: string
        description: Channel to remove star from, or channel where the message to
          remove star from was posted (used with `timestamp`).
      file:
        type: string
        description: File to remove star from.
    description: starsRemove body
  channelsHistorydefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.history error schema
    type: object
    description: Schema for error response channels.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_ts_latest
        - invalid_ts_oldest
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  channelsHistory200:
    required:
    - ok
    - messages
    - has_more
    additionalProperties: true
    title: channels.history success schema
    type: object
    description: Schema for successful response channels.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      has_more:
        type: boolean
        description: has_more
      messages:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_message'
        type: array
        description: messages
  teamBillableInfodefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  teamBillableInfo200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  conversationsRepliesdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.replies error schema
    type: object
    description: Schema for error response from conversations.replies method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - missing_scope
        - channel_not_found
        - thread_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsReplies200:
    required:
    - ok
    - messages
    additionalProperties: true
    title: conversations.replies success schema
    type: object
    description: Schema for successful response from conversations.replies method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      has_more:
        type: boolean
        description: has_more
      messages:
        items:
          items:
          - required:
            - type
            - user
            - text
            - thread_ts
            - reply_count
            - replies
            - subscribed
            - ts
            additionalProperties: true
            type: object
            properties:
              subscribed:
                type: boolean
                description: subscribed
              source_team:
                $ref: '#/definitions/defs_team'
                description: source_team
              ts:
                $ref: '#/definitions/defs_ts'
                description: ts
              last_read:
                $ref: '#/definitions/defs_ts'
                description: last_read
              user_profile:
                $ref: '#/definitions/objs_user_profile_short'
                description: user_profile
              text:
                type: string
                description: text
              thread_ts:
                $ref: '#/definitions/defs_ts'
                description: thread_ts
              user:
                $ref: '#/definitions/defs_user_id'
                description: user
              replies:
                items:
                  required:
                  - user
                  - ts
                  additionalProperties: true
                  type: object
                  properties:
                    ts:
                      $ref: '#/definitions/defs_ts'
                      description: ts
                    user:
                      $ref: '#/definitions/defs_user_id'
                      description: user
                  description: item
                type: array
                description: replies
              team:
                $ref: '#/definitions/defs_team'
                description: team
              unread_count:
                type: integer
                description: unread_count
              type:
                type: string
                description: type
              user_team:
                $ref: '#/definitions/defs_team'
                description: user_team
              reply_count:
                type: integer
                description: reply_count
            description: item
          - required:
            - type
            - user
            - text
            - thread_ts
            - parent_user_id
            - ts
            additionalProperties: true
            type: object
            properties:
              source_team:
                $ref: '#/definitions/defs_team'
                description: source_team
              ts:
                $ref: '#/definitions/defs_ts'
                description: ts
              is_starred:
                type: boolean
                description: is_starred
              user_profile:
                $ref: '#/definitions/objs_user_profile_short'
                description: user_profile
              text:
                type: string
                description: text
              thread_ts:
                $ref: '#/definitions/defs_ts'
                description: thread_ts
              user:
                $ref: '#/definitions/defs_user_id'
                description: user
              team:
                $ref: '#/definitions/defs_team'
                description: team
              parent_user_id:
                $ref: '#/definitions/defs_user_id'
                description: parent_user_id
              type:
                type: string
                description: type
              user_team:
                $ref: '#/definitions/defs_team'
                description: user_team
            description: item
          description: item
        type: array
        description: messages
  filesCommentsAdddefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: files.comments.add error schema
    type: object
    description: Schema for error response from files.comments.add method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - file_not_found
        - file_deleted
        - no_comment
        - cant_add
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  filesCommentsAdd200:
    required:
    - ok
    - comment
    additionalProperties: true
    title: files.comments.add schema
    type: object
    description: Schema for successful response files.comments.add method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      comment:
        $ref: '#/definitions/objs_comment'
        description: comment
  filesCommentsAddBody:
    type: object
    properties:
      comment:
        type: string
        description: Text of the comment to add.
      file:
        type: string
        description: File to add a comment to.
    description: filesCommentsAdd body
  chatUpdatedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: chat.update error schema
    type: object
    description: Schema for error response chat.update method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - message_not_found
        - cant_update_message
        - channel_not_found
        - edit_window_closed
        - msg_too_long
        - too_many_attachments
        - rate_limited
        - no_text
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - request_timeout
        - invalid_json
        - json_not_object
        - upgrade_required
        - fatal_error
        description: error
  chatUpdate200:
    required:
    - ok
    - channel
    - ts
    - text
    additionalProperties: true
    title: chat.update success schema
    type: object
    description: Schema for successful response of chat.update method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      ts:
        $ref: '#/definitions/defs_ts'
        description: ts
      text:
        title: Updated message text
        type: string
        description: text
      channel:
        $ref: '#/definitions/defs_channel'
        description: channel
  chatUpdateBody:
    type: object
    properties:
      attachments:
        type: string
        description: A JSON-based array of structured attachments, presented as a
          URL-encoded string. This field is required when not presenting `text`.
      text:
        type: string
        description: New text for the message, using the [default formatting rules](/docs/formatting).
          It's not required when presenting `attachments`.
      ts:
        type: number
        description: Timestamp of the message to be updated.
      parse:
        type: string
        description: Change how messages are treated. Defaults to `client`, unlike
          `chat.postMessage`. See [below](#formatting).
      as_user:
        type: boolean
        description: Pass true to update the message as the authed user. [Bot users](/bot-users)
          in this context are considered authed users.
      link_names:
        type: boolean
        description: Find and link channel names and usernames. Defaults to `none`.
          See [below](#formatting).
      channel:
        type: string
        description: Channel containing the message to be updated.
    description: chatUpdate body
  chatDeletedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: chat.delete error schema
    type: object
    description: Schema for error response from chat.delete method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - message_not_found
        - channel_not_found
        - cant_delete_message
        - compliance_exports_prevent_deletion
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  chatDelete200:
    required:
    - ok
    - channel
    - ts
    additionalProperties: true
    title: chat.delete success schema
    type: object
    description: Schema for successful response of chat.delete method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      ts:
        $ref: '#/definitions/defs_ts'
        description: ts
      channel:
        $ref: '#/definitions/defs_channel'
        description: channel
  chatDeleteBody:
    type: object
    properties:
      as_user:
        type: boolean
        description: Pass true to delete the message as the authed user with `chat:write:user`
          scope. [Bot users](/bot-users) in this context are considered authed users.
          If unused or false, the message will be deleted with `chat:write:bot` scope.
      ts:
        type: number
        description: Timestamp of the message to be deleted.
      channel:
        type: string
        description: Channel containing the message to be deleted.
    description: chatDelete body
  groupsSetTopicdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.setTopic error schema
    type: object
    description: Schema for error response from groups.setTopic method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - is_archived
        - too_long
        - user_is_restricted
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  groupsSetTopic200:
    required:
    - ok
    - topic
    additionalProperties: true
    title: groups.setTopic schema
    type: object
    description: Schema for successful response from groups.setTopic method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      topic:
        type: string
        description: topic
  groupsSetTopicBody:
    type: object
    properties:
      topic:
        type: string
        description: The new topic
      channel:
        type: string
        description: Private channel to set the topic of
    description: groupsSetTopic body
  remindersListdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersList200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsLeavedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsLeave200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsLeaveBody:
    type: object
    properties:
      channel:
        type: string
        description: Private channel to leave
    description: groupsLeave body
  usersLookupByEmaildefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.lookupByEmail error schema
    type: object
    description: Schema for error response from users.lookupByEmail method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - users_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  usersLookupByEmail200:
    required:
    - ok
    - user
    additionalProperties: true
    title: users.lookupByEmail success schema
    type: object
    description: Schema for successful response from users.lookupByEmail method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      user:
        $ref: '#/definitions/objs_user'
        description: user
  filesRevokePublicURLdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesRevokePublicURL200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesRevokePublicURLBody:
    type: object
    properties:
      file:
        type: string
        description: File to revoke
    description: filesRevokePublicURL body
  imOpendefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: im.open error schema
    type: object
    description: Schema for error response from im.open method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - user_not_found
        - user_not_visible
        - user_disabled
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  imOpen200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: im.open success schema
    type: object
    description: Schema for successful response from im.open method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        required:
        - id
        additionalProperties: true
        type: object
        properties:
          last_read:
            $ref: '#/definitions/defs_ts'
            description: last_read
          created:
            type: string
            description: created
          is_im:
            type: boolean
            description: is_im
          user:
            $ref: '#/definitions/defs_user_id'
            description: user
          unread_count:
            type: number
            description: unread_count
          id:
            $ref: '#/definitions/defs_dm_id'
            description: id
          unread_count_display:
            type: number
            description: unread_count_display
          latest:
            $ref: '#/definitions/objs_message'
            description: latest
          is_open:
            type: boolean
            description: is_open
        description: channel
      no_op:
        type: boolean
        description: no_op
      already_open:
        type: boolean
        description: already_open
  imOpenBody:
    type: object
    properties:
      return_im:
        type: boolean
        description: Boolean, indicates you want the full IM channel definition in
          the response.
      user:
        type: string
        description: User to open a direct message channel with.
      include_locale:
        type: boolean
        description: Set this to `true` to receive the locale for this im. Defaults
          to `false`
    description: imOpen body
  channelsRenamedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.rename error schema
    type: object
    description: Schema for error response from channels.rename method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - not_in_channel
        - not_authorized
        - invalid_name
        - name_taken
        - invalid_name_required
        - invalid_name_punctuation
        - invalid_name_maxlength
        - invalid_name_specials
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - user_is_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  channelsRename200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: channels.rename schema
    type: object
    description: Schema for successful response from channels.rename method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_channel'
        description: channel
  channelsRenameBody:
    type: object
    properties:
      validate:
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
      name:
        type: string
        description: New name for channel.
      channel:
        type: string
        description: Channel to rename
    description: channelsRename body
  conversationsClosedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.close error schema
    type: object
    description: Schema for error response from conversations.close method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - channel_not_found
        - user_does_not_own_channel
        - missing_scope
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsClose200:
    required:
    - ok
    additionalProperties: true
    title: conversations.close success schema
    type: object
    description: Schema for successful response conversations.close method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      already_closed:
        type: boolean
        description: already_closed
      no_op:
        type: boolean
        description: no_op
  conversationsCloseBody:
    type: object
    properties:
      channel:
        type: string
        description: Conversation to close.
    description: conversationsClose body
  usergroupsUsersUpdatedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsUsersUpdate200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsUsersUpdateBody:
    type: object
    properties:
      include_count:
        type: boolean
        description: Include the number of users in the User Group.
      users:
        type: string
        description: A comma separated string of encoded user IDs that represent the
          entire list of users for the User Group.
      usergroup:
        type: string
        description: The encoded ID of the User Group to update.
    description: usergroupsUsersUpdate body
  usersListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.list error schema
    type: object
    description: Schema for error response from users.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - invalid_cursor
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  usersList200:
    required:
    - ok
    - members
    - cache_ts
    additionalProperties: true
    title: users.list schema
    type: object
    description: Schema for successful response from users.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      cache_ts:
        type: integer
        description: cache_ts
      members:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_user'
        type: array
        description: members
  groupsCreatedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.create error schema
    type: object
    description: Schema for error response groups.create method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - no_channel
        - restricted_action
        - name_taken
        - invalid_name_required
        - invalid_name_punctuation
        - invalid_name_maxlength
        - invalid_name_specials
        - invalid_name
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  groupsCreate200:
    required:
    - ok
    - group
    additionalProperties: true
    title: groups.create success schema
    type: object
    description: Schema for successful response groups.create method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      group:
        $ref: '#/definitions/objs_group'
        description: group
  groupsCreateBody:
    type: object
    properties:
      validate:
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
      name:
        type: string
        description: Name of private channel to create
    description: groupsCreate body
  groupsSetPurposedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.setPurpose error schema
    type: object
    description: Schema for error response from groups.setPurpose method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - is_archived
        - too_long
        - user_is_restricted
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  groupsSetPurpose200:
    required:
    - ok
    - purpose
    additionalProperties: true
    title: groups.setPurpose schema
    type: object
    description: Schema for successful response from groups.setPurpose method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      purpose:
        type: string
        description: purpose
  groupsSetPurposeBody:
    type: object
    properties:
      purpose:
        type: string
        description: The new purpose
      channel:
        type: string
        description: Private channel to set the purpose of
    description: groupsSetPurpose body
  groupsOpendefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsOpen200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsOpenBody:
    type: object
    properties:
      channel:
        type: string
        description: Private channel to open.
    description: groupsOpen body
  authRevokedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: auth.revoke error schema
    type: object
    description: Schema for error response from auth.revoke method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  authRevoke200:
    required:
    - ok
    - revoked
    additionalProperties: true
    title: auth.revoke schema
    type: object
    description: Schema for successful response from auth.revoke method
    properties:
      revoked:
        type: boolean
        description: revoked
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  conversationsInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.info error schema
    type: object
    description: Schema for error response from conversations.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - missing_scope
        - channel_not_found
        - team_added_to_org
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsInfo200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.info success schema
    type: object
    description: Schema for successful response conversations.info
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
  groupsInvitedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.invite error schema
    type: object
    description: Schema for error response groups.invite method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - user_not_found
        - cant_invite_self
        - is_archived
        - cant_invite
        - ura_max_channels
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  groupsInvite200:
    required:
    - ok
    - group
    additionalProperties: true
    title: groups.invite success schema
    type: object
    description: Schema for successful response groups.invite method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      group:
        $ref: '#/definitions/objs_group'
        description: group
  groupsInviteBody:
    type: object
    properties:
      user:
        type: string
        description: User to invite.
      channel:
        type: string
        description: Private channel to invite user to.
    description: groupsInvite body
  starsListdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  starsList200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  appsPermissionsRequestdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: apps.permissions.request error schema
    type: object
    description: Schema for error response from apps.permissions.request method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - invalid_trigger
        - trigger_exchanged
        - invalid_scope
        - invalid_user
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  appsPermissionsRequest200:
    required:
    - ok
    additionalProperties: true
    title: apps.permissions.request schema
    type: object
    description: Schema for successful response from apps.permissions.request method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  pinsAdddefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: pins.add error schema
    type: object
    description: Schema for error response from pins.add method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - bad_timestamp
        - file_not_found
        - file_comment_not_found
        - message_not_found
        - channel_not_found
        - no_item_specified
        - already_pinned
        - permission_denied
        - file_not_shared
        - not_pinnable
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  pinsAdd200:
    required:
    - ok
    additionalProperties: true
    title: pins.add schema
    type: object
    description: Schema for successful response from pins.add method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  pinsAddBody:
    type: object
    properties:
      file_comment:
        type: string
        description: File comment to pin.
      timestamp:
        type: number
        description: Timestamp of the message to pin.
      file:
        type: string
        description: File to pin.
      channel:
        type: string
        description: Channel to pin the item in.
    description: pinsAdd body
  channelsMarkdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.mark error schema
    type: object
    description: Schema for error response channels.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_timestamp
        - not_in_channel
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  channelsMark200:
    required:
    - ok
    additionalProperties: true
    title: channels.mark success schema
    type: object
    description: Schema for successful response channels.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsMarkBody:
    type: object
    properties:
      ts:
        type: number
        description: Timestamp of the most recently seen message.
      channel:
        type: string
        description: Channel to set reading cursor in.
    description: channelsMark body
  groupsUnarchivedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsUnarchive200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsUnarchiveBody:
    type: object
    properties:
      channel:
        type: string
        description: Private channel to unarchive
    description: groupsUnarchive body
  conversationsMembersdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.members error schema
    type: object
    description: Schema for error response conversations.members method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_limit
        - invalid_cursor
        - fetch_members_failed
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  conversationsMembers200:
    required:
    - ok
    - members
    - response_metadata
    additionalProperties: true
    title: conversations.members success schema
    type: object
    description: Schema for successful response conversations.members method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      members:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/defs_user_id'
        type: array
        description: members
      response_metadata:
        required:
        - next_cursor
        additionalProperties: true
        type: object
        properties:
          next_cursor:
            type: string
            description: next_cursor
        description: response_metadata
  starsAdddefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  starsAdd200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  starsAddBody:
    type: object
    properties:
      file_comment:
        type: string
        description: File comment to add star to.
      timestamp:
        type: number
        description: Timestamp of the message to add star to.
      channel:
        type: string
        description: Channel to add star to, or channel where the message to add star
          to was posted (used with `timestamp`).
      file:
        type: string
        description: File to add star to.
    description: starsAdd body
  groupsKickdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.kick error schema
    type: object
    description: Schema for error response from groups.kick method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - user_not_found
        - cant_kick_self
        - not_in_group
        - restricted_action
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - user_is_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  groupsKick200:
    required:
    - ok
    additionalProperties: true
    title: groups.kick schema
    type: object
    description: Schema for successful response from groups.kick method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsKickBody:
    type: object
    properties:
      user:
        type: string
        description: User to remove from private channel.
      channel:
        type: string
        description: Private channel to remove user from.
    description: groupsKick body
  channelsInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.info error schema
    type: object
    description: Schema for error response channels.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
  channelsInfo200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: channels.info success schema
    type: object
    description: Schema for successful response channels.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_channel'
        description: channel
  teamProfileGetdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: team.profile.get error schema
    type: object
    description: Schema for error response from team.profile.get method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_typ
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeou
        - upgrade_required
        description: error
  teamProfileGet200:
    required:
    - ok
    - profile
    additionalProperties: true
    title: team.profile.get success schema
    type: object
    description: Schema for successful response from team.profile.get method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      profile:
        required:
        - fields
        additionalProperties: true
        type: object
        properties:
          fields:
            minItems: 1
            uniqueItems: true
            items:
              $ref: '#/definitions/objs_team_profile_field'
            type: array
            description: fields
        description: profile
  conversationsRenamedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.rename error schema
    type: object
    description: Schema for error response from conversations.rename method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - user_is_restricted
        - method_not_supported_for_channel_type
        - missing_scope
        - channel_not_found
        - not_in_channel
        - not_authorized
        - invalid_name
        - name_taken
        - invalid_name_required
        - invalid_name_punctuation
        - invalid_name_maxlength
        - invalid_name_specials
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsRename200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.rename success schema
    type: object
    description: Schema for successful response from conversations.rename method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
  conversationsRenameBody:
    type: object
    properties:
      name:
        type: string
        description: New name for conversation.
      channel:
        type: string
        description: ID of conversation to rename
    description: conversationsRename body
  groupsListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.list error schema
    type: object
    description: Schema for error response groups.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  groupsList200:
    required:
    - ok
    - groups
    additionalProperties: true
    title: groups.list success schema
    type: object
    description: Schema for successful response groups.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      groups:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_group'
        type: array
        description: groups
  groupsArchivedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.archive error schema
    type: object
    description: Schema for error response from groups.archive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - already_archived
        - group_contains_others
        - restricted_action
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  groupsArchive200:
    required:
    - ok
    additionalProperties: true
    title: groups.archive schema
    type: object
    description: Schema for successful response from groups.archive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsArchiveBody:
    type: object
    properties:
      channel:
        type: string
        description: Private channel to archive
    description: groupsArchive body
  filesSharedPublicURLdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesSharedPublicURL200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesSharedPublicURLBody:
    type: object
    properties:
      file:
        type: string
        description: File to share
    description: filesSharedPublicURL body
  imListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: im.list error schema
    type: object
    description: Schema for error response from im.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - invalid_cursor
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  imList200:
    required:
    - ok
    - ims
    additionalProperties: true
    title: im.list success schema
    type: object
    description: Schema for successful response im.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      ims:
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_im'
        type: array
        description: ims
  chatGetPermalinkdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: chat.getPermalink error schema
    type: object
    description: Schema for error response from chat.getPermalink method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - message_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  chatGetPermalink200:
    required:
    - ok
    - channel
    - permalink
    additionalProperties: true
    title: chat.getPermalink success schema
    type: object
    description: Schema for successful response chat.getPermalink
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/defs_channel'
        description: channel
      permalink:
        format: uri
        type: string
        description: permalink
  usergroupsUsersListdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsUsersList200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimListdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimList200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimHistorydefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimHistory200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsSetTopicdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsSetTopic200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsSetTopicBody:
    type: object
    properties:
      topic:
        type: string
        description: The new topic
      channel:
        type: string
        description: Channel to set the topic of
    description: channelsSetTopic body
  remindersInfodefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersInfo200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsLeavedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsLeave200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsLeaveBody:
    type: object
    properties:
      channel:
        type: string
        description: Channel to leave
    description: channelsLeave body
  rtmStartdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: rtm.start error schema
    type: object
    description: Schema for error response from rtm.start method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - migration_in_progress
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  rtmStart200:
    required:
    - ok
    - bots
    - cache_ts
    - cache_ts_version
    - can_manage_shared_channels
    - channels
    - groups
    - dnd
    - ims
    - latest_event_ts
    - non_threadable_channels
    - read_only_channels
    - self
    - subteams
    - thread_only_channels
    - team
    - url
    - users
    additionalProperties: true
    title: rtm.start success schema
    type: object
    description: Schema for successful response from rtm.start method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      cache_ts:
        type: integer
        description: cache_ts
      groups:
        uniqueItems: true
        items:
          items:
          - type: "null"
            description: item
          - $ref: '#/definitions/objs_conversation'
            description: item
          description: item
        type: array
        description: Group objects present for rtm.start. Can be null when there are
          no groups
      users:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_user'
        type: array
        description: users
      bots:
        type: array
        description: bots
      dead_pig:
        type: boolean
        description: dead_pig
      latest_event_ts:
        type: string
        description: latest_event_ts
      channels:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_conversation'
        type: array
        description: channels
      can_manage_shared_channels:
        type: boolean
        description: can_manage_shared_channels
      url:
        format: uri
        type: string
        description: url
      non_threadable_channels:
        type: array
        description: non_threadable_channels
      dnd:
        $ref: '#/definitions/objs_dnd'
        description: dnd
      read_only_channels:
        type: array
        description: read_only_channels
      cache_version:
        type: string
        description: cache_version
      self:
        required:
        - created
        - id
        - manual_presence
        - prefs
        additionalProperties: true
        type: object
        properties:
          created:
            type: integer
            description: created
          manual_presence:
            type: string
            description: manual_presence
          name:
            type: string
            description: name
          prefs:
            $ref: '#/definitions/prefs_prefs'
            description: prefs
          id:
            type: string
            description: id
        description: self
      ims:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_conversation'
        type: array
        description: ims
      mpims:
        uniqueItems: true
        items:
          items:
          - type: "null"
            description: item
          - $ref: '#/definitions/objs_conversation'
            description: item
          description: item
        type: array
        description: Mpim objects present for rtm.start. Can be null when there are
          no mpims
      thread_only_channels:
        type: array
        description: thread_only_channels
      subteams:
        required:
        - all
        - self
        additionalProperties: true
        type: object
        properties:
          all:
            type: array
            description: all
          self:
            type: array
            description: self
        description: subteams
      team:
        $ref: '#/definitions/objs_team'
        description: team
      cache_ts_version:
        type: string
        description: cache_ts_version
  searchFilesdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  searchFiles200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  teamInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: team.info error schema
    type: object
    description: Schema for error response from team.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revokedno_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  teamInfo200:
    required:
    - ok
    - team
    additionalProperties: true
    title: team.info schema
    type: object
    description: Schema for successful response from team.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      team:
        $ref: '#/definitions/objs_team'
        description: team
  mpimMarkdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: mpim.mark error schema
    type: object
    description: Schema for error response from mpim.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_timestamp
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  mpimMark200:
    required:
    - ok
    additionalProperties: true
    title: mpim.mark schema
    type: object
    description: Schema for successful response from mpim.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimMarkBody:
    type: object
    properties:
      ts:
        type: number
        description: Timestamp of the most recently seen message.
      channel:
        type: string
        description: multiparty direct message channel to set reading cursor in.
    description: mpimMark body
  filesDeletedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: files.delete error schema
    type: object
    description: Schema for error response files.delete method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - file_not_found
        - file_deleted
        - cant_delete_file
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  filesDelete200:
    required:
    - ok
    additionalProperties: true
    title: files.delete schema
    type: object
    description: Schema for successful response files.delete method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesDeleteBody:
    type: object
    properties:
      file:
        type: string
        description: ID of file to delete.
    description: filesDelete body
  dialogOpendefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  dialogOpen200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersAdddefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersAdd200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  remindersAddBody:
    type: object
    properties:
      text:
        type: string
        description: The content of the reminder
      user:
        type: string
        description: The user who will receive the reminder. If no user is specified,
          the reminder will go to user who created it.
      time:
        type: string
        description: 'When this reminder should happen: the Unix timestamp (up to
          five years from now), the number of seconds until the reminder (if within
          24 hours), or a natural language description (Ex. "in 15 minutes," or "every
          Thursday")'
    description: remindersAdd body
  botsInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: bots.info error schema
    type: object
    description: Schema for error response from bots.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - bot_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  botsInfo200:
    required:
    - ok
    - bot
    additionalProperties: true
    title: bots.info schema
    type: object
    description: Schema for successful response from bots.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      bot:
        required:
        - id
        - deleted
        - name
        - updated
        - app_id
        - icons
        additionalProperties: true
        type: object
        properties:
          icons:
            required:
            - image_36
            - image_48
            - image_72
            additionalProperties: true
            type: object
            properties:
              image_48:
                format: uri
                type: string
                description: image_48
              image_36:
                format: uri
                type: string
                description: image_36
              image_72:
                format: uri
                type: string
                description: image_72
            description: icons
          name:
            type: string
            description: name
          id:
            $ref: '#/definitions/defs_bot_id'
            description: id
          deleted:
            type: boolean
            description: deleted
          updated:
            type: integer
            description: updated
          app_id:
            $ref: '#/definitions/defs_app_id'
            description: app_id
          user_id:
            $ref: '#/definitions/defs_user_id'
            description: user_id
        description: bot
  teamIntegrationLogsdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  teamIntegrationLogs200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usersConversationsdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.conversations error schema
    type: object
    description: Schema for error response from users.conversations method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - invalid_types
        - invalid_cursor
        - invalid_limit
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  usersConversations200:
    required:
    - ok
    - channels
    additionalProperties: true
    title: users.conversations success schema
    type: object
    description: Schema for successful response from users.conversations method. Returned
      conversation objects do not include `num_members` or `is_member`
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channels:
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_conversation'
        type: array
        description: channels
      response_metadata:
        required:
        - next_cursor
        additionalProperties: true
        type: object
        properties:
          next_cursor:
            type: string
            description: next_cursor
        description: response_metadata
  usergroupsUpdatedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsUpdate200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsUpdateBody:
    type: object
    properties:
      handle:
        type: string
        description: A mention handle. Must be unique among channels, users and User
          Groups.
      description:
        type: string
        description: A short description of the User Group.
      channels:
        type: string
        description: A comma separated string of encoded channel IDs for which the
          User Group uses as a default.
      include_count:
        type: boolean
        description: Include the number of users in the User Group.
      usergroup:
        type: string
        description: The encoded ID of the User Group to update.
      name:
        type: string
        description: A name for the User Group. Must be unique among User Groups.
    description: usergroupsUpdate body
  conversationsHistorydefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.history error schema
    type: object
    description: Schema for error response from conversations.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - missing_scope
        - channel_not_found
        - invalid_ts_latest
        - invalid_ts_oldest
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsHistory200:
    required:
    - ok
    - messages
    - has_more
    - pin_count
    additionalProperties: true
    title: conversations.history success schema
    type: object
    description: Schema for successful response from conversations.history method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      has_more:
        type: boolean
        description: has_more
      messages:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_message'
        type: array
        description: messages
      pin_count:
        type: integer
        description: pin_count
  channelsRepliesdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsReplies200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  reactionsGetdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: reactions.get error schema
    type: object
    description: Schema for error response from reactions.get method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - bad_timestamp
        - file_not_found
        - file_comment_not_found
        - message_not_found
        - no_item_specified
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  reactionsGet200:
    items:
    - required:
      - ok
      - type
      - channel
      - message
      additionalProperties: true
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        channel:
          $ref: '#/definitions/defs_channel'
          description: channel
        type:
          type: string
          enum:
          - message
          description: type
        message:
          $ref: '#/definitions/objs_message'
          description: message
      description: item
    - required:
      - ok
      - type
      - file
      additionalProperties: true
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        type:
          type: string
          enum:
          - file
          description: type
        file:
          $ref: '#/definitions/objs_file'
          description: file
      description: item
    - required:
      - ok
      - type
      - file
      - comment
      additionalProperties: true
      properties:
        ok:
          $ref: '#/definitions/defs_ok_true'
          description: ok
        type:
          type: string
          enum:
          - file_comment
          description: type
        comment:
          $ref: '#/definitions/objs_comment'
          description: comment
        file:
          $ref: '#/definitions/objs_file'
          description: file
      description: item
    title: reactions.get success schema
    type: object
    description: Schema for successful response from reactions.get method
  channelsUnarchivedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsUnarchive200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsUnarchiveBody:
    type: object
    properties:
      channel:
        type: string
        description: Channel to unarchive
    description: channelsUnarchive body
  usergroupsCreatedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsCreate200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsCreateBody:
    type: object
    properties:
      handle:
        type: string
        description: A mention handle. Must be unique among channels, users and User
          Groups.
      name:
        type: string
        description: A name for the User Group. Must be unique among User Groups.
      channels:
        type: string
        description: A comma separated string of encoded channel IDs for which the
          User Group uses as a default.
      include_count:
        type: boolean
        description: Include the number of users in each User Group.
      description:
        type: string
        description: A short description of the User Group.
    description: usergroupsCreate body
  groupsMarkdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.mark error schema
    type: object
    description: Schema for error response from groups.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_timestamp
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  groupsMark200:
    required:
    - ok
    additionalProperties: true
    title: groups.mark success schema
    type: object
    description: Schema for successful response from groups.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsMarkBody:
    type: object
    properties:
      ts:
        type: number
        description: Timestamp of the most recently seen message.
      channel:
        type: string
        description: Private channel to set reading cursor in.
    description: groupsMark body
  channelsInvitedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.invite error schema
    type: object
    description: Schema for error response channels.invite method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - user_not_found
        - cant_invite_self
        - not_in_channel
        - already_in_channel
        - is_archived
        - cant_invite
        - too_many_users
        - ura_max_channels
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
  channelsInvite200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: channels.invite error schema
    type: object
    description: Schema for successful response channels.invite method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_channel'
        description: channel
  channelsInviteBody:
    type: object
    properties:
      user:
        type: string
        description: User to invite to channel.
      channel:
        type: string
        description: Channel to invite user to.
    description: channelsInvite body
  usergroupsDisabledefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsDisable200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsDisableBody:
    type: object
    properties:
      include_count:
        type: boolean
        description: Include the number of users in the User Group.
      usergroup:
        type: string
        description: The encoded ID of the User Group to disable.
    description: usergroupsDisable body
  usersProfileGetdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: users.profile.get error schema
    type: object
    description: Schema for error response from users.profile.get method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - user_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  usersProfileGet200:
    required:
    - ok
    - profile
    additionalProperties: true
    title: users.profile.get schema
    type: object
    description: Schema for successful response from users.profile.get method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      profile:
        $ref: '#/definitions/objs_user_profile'
        description: profile
  appsPermissionsResourcesListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: apps.permissions.resources.list error schema
    type: object
    description: Schema for error response from apps.permissions.resources.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - invalid_cursor
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  appsPermissionsResourcesList200:
    required:
    - ok
    - resources
    additionalProperties: true
    title: apps.permissions.resources.list success schema
    type: object
    description: Schema for successful response apps.permissions.resources.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      resources:
        items:
          type: object
          properties:
            id:
              title: An ID for a resource
              type: string
              x-examples:
              - T0DES3UAN
              - C0ABC1ABC
              description: id
            type:
              title: The type of resource the `id` corresponds to
              type: string
              x-examples:
              - team
              - channel
              - mpim
              description: type
          description: item
        type: array
        description: resources
      response_metadata:
        required:
        - next_cursor
        additionalProperties: true
        type: object
        properties:
          next_cursor:
            type: string
            x-examples:
            - dGVhbTpDMUg5UkVTR0w=
            description: next_cursor
        description: response_metadata
  imMarkdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: im.mark error schema
    type: object
    description: Schema for error response im.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - invalid_timestamp
        - not_in_channel
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  imMark200:
    required:
    - ok
    additionalProperties: true
    title: im.mark success schema
    type: object
    description: Schema for successful response im.mark method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  imMarkBody:
    type: object
    properties:
      ts:
        type: number
        description: Timestamp of the most recently seen message.
      channel:
        type: string
        description: Direct message channel to set reading cursor in.
    description: imMark body
  usersSetPresencedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usersSetPresence200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usersSetPresenceBody:
    type: object
    properties:
      presence:
        type: string
        description: Either `auto` or `away`
    description: usersSetPresence body
  chatPostEphemeraldefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: chat.postEphemeral error schema
    type: object
    description: Schema for error response from chat.postEphemeral method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - is_archived
        - msg_too_long
        - no_text
        - restricted_action
        - too_many_attachments
        - user_not_in_channel
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  chatPostEphemeral200:
    required:
    - ok
    - message_ts
    additionalProperties: true
    title: chat.postEphemeral success schema
    type: object
    description: Schema for successful response from chat.postEphemeral method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      message_ts:
        $ref: '#/definitions/defs_ts'
        description: message_ts
  chatPostEphemeralBody:
    type: object
    properties:
      attachments:
        type: string
        description: A JSON-based array of structured attachments, presented as a
          URL-encoded string.
      text:
        type: string
        description: Text of the message to send. See below for an explanation of
          [formatting](#formatting). This field is usually required, unless you're
          providing only `attachments` instead.
      link_names:
        type: boolean
        description: Find and link channel names and usernames.
      parse:
        type: string
        description: Change how messages are treated. Defaults to `none`. See [below](#formatting).
      user:
        type: string
        description: '`id` of the user who will receive the ephemeral message. The
          user should be in the channel specified by the `channel` argument.'
      as_user:
        type: boolean
        description: Pass true to post the message as the authed bot. Defaults to
          false.
      channel:
        type: string
        description: Channel, private group, or IM channel to send message to. Can
          be an encoded ID, or a name.
    description: chatPostEphemeral body
  groupsInfodefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: groups.info error schema
    type: object
    description: Schema for error response groups.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  groupsInfo200:
    required:
    - ok
    - group
    additionalProperties: true
    title: groups.info success schema
    type: object
    description: Schema for successful response groups.info method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      group:
        $ref: '#/definitions/objs_group'
        description: group
  pinsRemovedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: pins.remove error schema
    type: object
    description: Schema for error response from pins.remove method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - bad_timestamp
        - file_not_found
        - file_comment_not_found
        - message_not_found
        - no_item_specified
        - not_pinned
        - permission_denied
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_typ
        - missing_post_typ
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeou
        - upgrade_required
        description: error
  pinsRemove200:
    required:
    - ok
    additionalProperties: true
    title: pins.remove schema
    type: object
    description: Schema for successful response from pins.remove method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  pinsRemoveBody:
    type: object
    properties:
      file_comment:
        type: string
        description: File comment to un-pin.
      timestamp:
        type: number
        description: Timestamp of the message to un-pin.
      file:
        type: string
        description: File to un-pin.
      channel:
        type: string
        description: Channel where the item is pinned to.
    description: pinsRemove body
  conversationsSetPurposedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.setPurpose error schema
    type: object
    description: Schema for error response from conversations.setPurpose method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - channel_not_found
        - not_in_channel
        - is_archived
        - too_long
        - user_is_restricted
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsSetPurpose200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.setPurpose success schema
    type: object
    description: Schema for successful response from conversations.setPurpose method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
  conversationsSetPurposeBody:
    type: object
    properties:
      purpose:
        type: string
        description: A new, specialer purpose
      channel:
        type: string
        description: Conversation to set the purpose of
    description: conversationsSetPurpose body
  filesCommentsDeletedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: files.comments.delete error schema
    type: object
    description: Schema for error response files.comments.delete method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - cant_delete
        - comment_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  filesCommentsDelete200:
    required:
    - ok
    additionalProperties: true
    title: files.comments.delete schema
    type: object
    description: Schema for successful response files.comments.delete method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesCommentsDeleteBody:
    type: object
    properties:
      id:
        type: string
        description: The comment to delete.
      file:
        type: string
        description: File to delete a comment from.
    description: filesCommentsDelete body
  appsPermissionsInfodefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  appsPermissionsInfo200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsJoindefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.join error schema
    type: object
    description: Schema for error response from channels.join method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - name_taken
        - restricted_action
        - no_channel
        - is_archived
        - invalid_name_required
        - invalid_name_punctuation
        - invalid_name_maxlength
        - invalid_name_specials
        - invalid_name
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - user_is_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  channelsJoin200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: channels.join schema
    type: object
    description: Schema for successful response from channels.join method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_channel'
        description: channel
      already_in_channel:
        type: boolean
        description: already_in_channel
  channelsJoinBody:
    type: object
    properties:
      validate:
        type: boolean
        description: Whether to return errors on invalid channel name instead of modifying
          it to meet the specified criteria.
      name:
        type: string
        description: Name of channel to join
    description: channelsJoin body
  conversationsOpendefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.open error schema
    type: object
    description: Schema for error response from conversations.open method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - user_not_found
        - user_not_visible
        - user_disabled
        - users_list_not_supplied
        - not_enough_users
        - too_many_users
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - channel_not_found
        description: error
  conversationsOpen200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.open success schema
    type: object
    description: Schema for successful response from conversations.open method when
      opening channels, ims, mpims
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
      no_op:
        type: boolean
        description: no_op
      already_open:
        type: boolean
        description: already_open
  conversationsOpenBody:
    type: object
    properties:
      return_im:
        type: boolean
        description: Boolean, indicates you want the full IM channel definition in
          the response.
      users:
        type: string
        description: Comma separated lists of users. If only one user is included,
          this creates a 1:1 DM.  The ordering of the users is preserved whenever
          a multi-person direct message is returned. Supply a `channel` when not supplying
          `users`.
      channel:
        type: string
        description: Resume a conversation by supplying an `im` or `mpim`'s ID. Or
          provide the `users` field instead.
    description: conversationsOpen body
  conversationsCreatedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.create error schema
    type: object
    description: Schema for error response from conversations.create method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - name_taken
        - restricted_action
        - no_channel
        - invalid_name_required
        - invalid_name_punctuation
        - invalid_name_maxlength
        - invalid_name_specials
        - invalid_name
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
      detail:
        type: string
        description: detail
  conversationsCreate200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.create success schema
    type: object
    description: Schema for successful response conversations.create method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
  conversationsCreateBody:
    type: object
    properties:
      name:
        type: string
        description: Name of the public or private channel to create
      is_private:
        type: boolean
        description: Create a private channel instead of a public one
    description: conversationsCreate body
  channelsKickdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.kick error schema
    type: object
    description: Schema for error response from channels.kick method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - user_not_found
        - cant_kick_self
        - not_in_channel
        - cant_kick_from_general
        - restricted_action
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - user_is_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  channelsKick200:
    required:
    - ok
    additionalProperties: true
    title: channels.kick schema
    type: object
    description: Schema for successful response from channels.kick method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsKickBody:
    type: object
    properties:
      user:
        type: string
        description: User to remove from channel.
      channel:
        type: string
        description: Channel to remove user from.
    description: channelsKick body
  imClosedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  imClose200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  imCloseBody:
    type: object
    properties:
      channel:
        type: string
        description: Direct message channel to close.
    description: imClose body
  channelsListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.list error schema
    type: object
    description: Schema for error response channels.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_authed
        - invalid_auth
        - account_inactive
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  channelsList200:
    required:
    - ok
    - channels
    additionalProperties: true
    title: channels.list success schema
    type: object
    description: Schema for successful response channels.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channels:
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_channel'
        type: array
        description: channels
  channelsArchivedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: channels.archive error schema
    type: object
    description: Schema for error response channels.archive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - channel_not_found
        - already_archived
        - cant_archive_general
        - restricted_action
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
  channelsArchive200:
    required:
    - ok
    additionalProperties: true
    title: channels.archive success schema
    type: object
    description: Schema for successful response from channels.archive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  channelsArchiveBody:
    type: object
    properties:
      channel:
        type: string
        description: Channel to archive
    description: channelsArchive body
  conversationsInvitedefault:
    required:
    - ok
    additionalProperties: true
    title: conversations.invite error schema
    type: object
    description: Schema for error response from conversations.invite method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - channel_not_found
        - user_not_found
        - cant_invite_self
        - not_in_channel
        - already_in_channel
        - is_archived
        - cant_invite
        - too_many_users
        - ura_max_channels
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
      errors:
        minItems: 1
        uniqueItems: true
        items:
          required:
          - ok
          - error
          additionalProperties: true
          type: object
          properties:
            ok:
              $ref: '#/definitions/defs_ok_false'
              description: ok
            error:
              type: string
              enum:
              - method_not_supported_for_channel_type
              - missing_scope
              - channel_not_found
              - user_not_found
              - cant_invite_self
              - not_in_channel
              - already_in_channel
              - is_archived
              - cant_invite
              - too_many_users
              - ura_max_channels
              - not_authed
              - invalid_auth
              - account_inactive
              - user_is_bot
              - user_is_restricted
              - user_is_ultra_restricted
              - invalid_arg_name
              - invalid_array_arg
              - invalid_charset
              - invalid_form_data
              - invalid_post_type
              - missing_post_type
              - invalid_json
              - json_not_object
              - request_timeout
              - upgrade_required
              - team_added_to_org
              - missing_charset
              - superfluous_charset
              description: error
            user:
              $ref: '#/definitions/defs_user_id'
              description: user
          description: item
        title: errors is returned when an error associates an user
        type: array
        description: errors
  conversationsInvite200:
    required:
    - ok
    - channel
    additionalProperties: true
    title: conversations.invite error schema
    type: object
    description: Schema for successful response from conversations.invite method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      channel:
        $ref: '#/definitions/objs_conversation'
        description: channel
  conversationsInviteBody:
    type: object
    properties:
      users:
        type: string
        description: A comma separated list of user IDs. Up to 30 users may be listed.
      channel:
        type: string
        description: The ID of the public or private channel to invite user(s) to.
    description: conversationsInvite body
  mpimClosedefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimClose200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  mpimCloseBody:
    type: object
    properties:
      channel:
        type: string
        description: MPIM to close.
    description: mpimClose body
  migrationExchangedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: migration.exchange error schema
    type: object
    description: Schema for error response from migration.exchange method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - not_enterprise_team
        - too_many_users
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  migrationExchange200:
    required:
    - ok
    - team_id
    - enterprise_id
    additionalProperties: true
    title: migration.exchange success schema
    type: object
    description: Schema for successful response from migration.exchange method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      team_id:
        $ref: '#/definitions/defs_team'
        description: team_id
      enterprise_id:
        title: The enterprise grid organization ID containing the workspace/team.
        type: string
        description: enterprise_id
      user_id_map:
        additionalProperties: true
        title: A mapping of provided user IDs with mapped user IDs
        type: object
        description: user_id_map
      invalid_user_ids:
        items:
          type: string
          description: item
        title: A list of User IDs that cannot be mapped or found
        type: array
        description: invalid_user_ids
  filesListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: files.list error schema
    type: object
    description: Schema for error response from files.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - user_not_found
        - unknown_type
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  filesList200:
    required:
    - ok
    - files
    - paging
    additionalProperties: true
    title: files.list schema
    type: object
    description: Schema for successful response from files.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      paging:
        $ref: '#/definitions/objs_paging'
        description: paging
      files:
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/objs_file'
        type: array
        description: files
  usergroupsListdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  usergroupsList200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  dndEndDnddefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  dndEndDnd200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  conversationsUnarchivedefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: conversations.unarchive error schema
    type: object
    description: Schema for error response from conversations.unarchive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - method_not_supported_for_channel_type
        - missing_scope
        - channel_not_found
        - not_archived
        - not_authed
        - invalid_auth
        - account_inactive
        - user_is_bot
        - user_is_restricted
        - user_is_ultra_restricted
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - team_added_to_org
        - missing_charset
        - superfluous_charset
        description: error
      needed:
        type: string
        description: needed
      provided:
        type: string
        description: provided
  conversationsUnarchive200:
    required:
    - ok
    additionalProperties: true
    title: conversations.unarchive success schema
    type: object
    description: Schema for successful response from conversations.unarchive method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  conversationsUnarchiveBody:
    type: object
    properties:
      channel:
        type: string
        description: ID of conversation to unarchive
    description: conversationsUnarchive body
  searchAlldefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  searchAll200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  filesCommentsEditdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: files.comments.edit error schema
    type: object
    description: Schema for error response files.comments.edit method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - cant_edit
        - comment_not_found
        - not_authed
        - invalid_auth
        - account_inactive
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        description: error
  filesCommentsEdit200:
    required:
    - ok
    - comment
    additionalProperties: true
    title: files.comments.edit schema
    type: object
    description: Schema for successful response files.comments.edit method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      comment:
        $ref: '#/definitions/objs_comment'
        description: comment
  filesCommentsEditBody:
    type: object
    properties:
      comment:
        type: string
        description: Text of the comment to edit.
      id:
        type: string
        description: The comment to edit.
      file:
        type: string
        description: File containing the comment to edit.
    description: filesCommentsEdit body
  imRepliesdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  imReplies200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  chatUnfurldefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: chat.unfurl error schema
    type: object
    description: Schema for error response from chat.unfurl method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - cannot_unfurl_url
        - cannot_find_service
        - missing_unfurls
        - cannot_prompt
        - not_authed
        - invalid_auth
        - account_inactive
        - token_revoked
        - no_permission
        - org_login_required
        - user_is_bot
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  chatUnfurl200:
    required:
    - ok
    additionalProperties: true
    title: chat.unfurl success schema
    type: object
    description: Schema for successful response from chat.unfurl method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  chatUnfurlBody:
    type: object
    properties:
      user_auth_message:
        type: string
        description: Provide a simply-formatted string to send as an ephemeral message
          to the user as invitation to authenticate further and enable full unfurling
          behavior
      user_auth_required:
        type: boolean
        description: Set to `true` or `1` to indicate the user must install your Slack
          app to trigger unfurls for this domain
      unfurls:
        type: string
        description: URL-encoded JSON map with keys set to URLs featured in the the
          message, pointing to their unfurl message attachments.
      ts:
        type: string
        description: Timestamp of the message to add unfurl behavior to.
      user_auth_url:
        type: string
        description: Send users to this custom URL where they will complete authentication
          in your app to fully trigger unfurling. Value should be properly URL-encoded.
      channel:
        type: string
        description: Channel ID of the message
    description: chatUnfurl body
  groupsRepliesdefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  groupsReplies200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  dndInfodefault:
    required:
    - ok
    additionalProperties: true
    title: Default error template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  dndInfo200:
    required:
    - ok
    additionalProperties: true
    title: Default success template
    type: object
    description: Verbose schema not yet ready for this method.
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
  reactionsListdefault:
    required:
    - ok
    - error
    additionalProperties: true
    title: reactions.list error schema
    type: object
    description: Schema for error response from reactions.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_false'
        description: ok
      error:
        type: string
        enum:
        - user_not_found
        - not_authed
        - invalid_auth
        - account_inactiv
        - no_permission
        - invalid_arg_name
        - invalid_array_arg
        - invalid_charset
        - invalid_form_data
        - invalid_post_type
        - missing_post_type
        - team_added_to_org
        - invalid_json
        - json_not_object
        - request_timeout
        - upgrade_required
        - fatal_error
        description: error
  reactionsList200:
    required:
    - ok
    - items
    additionalProperties: true
    title: reactions.list schema
    type: object
    description: Schema for successful response from reactions.list method
    properties:
      ok:
        $ref: '#/definitions/defs_ok_true'
        description: ok
      items:
        items:
          items:
          - required:
            - type
            - channel
            - message
            additionalProperties: true
            type: object
            properties:
              channel:
                $ref: '#/definitions/defs_channel'
                description: channel
              type:
                type: string
                enum:
                - message
                description: type
              message:
                $ref: '#/definitions/objs_message'
                description: message
            description: item
          - required:
            - type
            - file
            additionalProperties: true
            type: object
            properties:
              type:
                type: string
                enum:
                - file
                description: type
              file:
                $ref: '#/definitions/objs_file'
                description: file
            description: item
          - required:
            - type
            - file
            - comment
            additionalProperties: true
            type: object
            properties:
              type:
                type: string
                enum:
                - file_comment
                description: type
              comment:
                $ref: '#/definitions/objs_comment'
                description: comment
              file:
                $ref: '#/definitions/objs_file'
                description: file
            description: item
          description: item
        type: array
        description: items
      paging:
        $ref: '#/definitions/objs_paging'
        description: paging
paths:
  /users.profile.set:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usersProfileSetdefault'
            description: Schema for error response from users.profile.set method
          examples:
            application/json:
              ok: false
              error: invalid_profile
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersProfileSet200'
            description: Schema for successful response from users.profile.set method
          examples:
            application/json:
              ok: true
              profile:
                email: spengler@ghostbusters.example.com
                display_name_normalized: spengler
                image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                status_emoji: ':books:'
                display_name: spengler
                image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                status_text: Print is dead
                real_name_normalized: Egon Spengler
                avatar_hash: ge3b51ca72de
                image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                real_name: Egon Spengler
                team: T012AB3C4
                image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/users.profile.set
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/usersProfileSetBody'
        in: body
        name: body
        description: usersProfileSet body
      operationId: usersProfileSet
      security:
      - Bearer: []
      description: Set the profile information for a user.
      tags:
      - users.profile
      - users
  /dnd.teamInfo:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/dndTeamInfodefault'
            description: Schema for error response from dnd.teamInfo method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/dndTeamInfo200'
            description: Schema for successful response from dnd.teamInfo method
          examples:
            application/json:
              ok: true
              users:
                W058CJVAA:
                  next_dnd_end_ts: 1
                  dnd_enabled: false
                  next_dnd_start_ts: 1
                U023BECGF:
                  next_dnd_end_ts: 1450423800
                  dnd_enabled: true
                  next_dnd_start_ts: 1450387800
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/dnd.teamInfo
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: users
        type: string
        description: Comma-separated list of users to fetch Do Not Disturb status
          for
      operationId: dndTeamInfo
      security:
      - Bearer: []
      description: Retrieves the Do Not Disturb status for users on a team.
      tags:
      - dnd
  /chat.postMessage:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/chatPostMessagedefault'
            description: Schema for error response chat.postMessage method
          examples:
            application/json:
              ok: false
              error: too_many_attachments
          description: Typical error response if too many attachments are included
        200:
          schema:
            $ref: '#/definitions/chatPostMessage200'
            description: Schema for successful response of chat.postMessage method
          examples:
            application/json:
              ok: true
              ts: "1503435956.000247"
              channel: C1H9RESGL
              message:
                ts: "1503435956.000247"
                attachments:
                - text: This is an attachment
                  fallback: This is an attachment's fallback
                  id: 1
                text: Here's a message for you
                username: ecto1
                subtype: bot_message
                type: message
                bot_id: B19LU7CSY
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/chat.postMessage
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/chatPostMessageBody'
        in: body
        name: body
        description: chatPostMessage body
      operationId: chatPostMessage
      security:
      - Bearer: []
      description: Sends a message to a channel.
      tags:
      - chat
  /conversations.setTopic:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsSetTopicdefault'
            description: Schema for error response from conversations.setTopic method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsSetTopic200'
            description: Schema for successful response from conversations.setTopic
              method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.setTopic
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsSetTopicBody'
        in: body
        name: body
        description: conversationsSetTopic body
      operationId: conversationsSetTopic
      security:
      - Bearer: []
      description: Sets the topic for a conversation.
      tags:
      - conversations
  /mpim.open:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/mpimOpendefault'
            description: Schema for error response from mpim.open method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/mpimOpen200'
            description: Schema for successful response from mpim.open method
          examples:
            application/json:
              ok: true
              channel:
                id: D024BFF1M
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/mpim.open
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/mpimOpenBody'
        in: body
        name: body
        description: mpimOpen body
      operationId: mpimOpen
      security:
      - Bearer: []
      description: This method opens a multiparty direct message.
      tags:
      - mpim
  /users.getPresence:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usersGetPresencedefault'
            description: Schema for error response users.getPresence method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersGetPresence200'
            description: Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
          examples:
            application/json:
              ok: true
              presence: active
          description: When requesting information for a different user, this method
            just returns the current presence (either `active` or `away`).
      externalDocs:
        url: https://api.slack.com/methods/users.getPresence
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: user
        type: string
        description: User to get presence info on. Defaults to the authed user.
      operationId: usersGetPresence
      security:
      - Bearer: []
      description: Gets user presence information.
      tags:
      - users
  /chat.meMessage:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/chatMeMessagedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/chatMeMessage200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              ts: "1417671948.000006"
              channel: C024BE7LR
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/chat.meMessage
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/chatMeMessageBody'
        in: body
        name: body
        description: chatMeMessage body
      operationId: chatMeMessage
      security:
      - Bearer: []
      description: Share a me message into a channel.
      tags:
      - chat
  /conversations.leave:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsLeavedefault'
            description: Schema for error response from conversations.leave method
          examples:
            application/json:
              ok: false
              error: cant_leave_general
          description: Typical error response when attempting to leave a workspace's
            "general" channel
        200:
          schema:
            $ref: '#/definitions/conversationsLeave200'
            description: Schema for successful response from conversations.leave method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.leave
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsLeaveBody'
        in: body
        name: body
        description: conversationsLeave body
      operationId: conversationsLeave
      security:
      - Bearer: []
      description: Leaves a conversation.
      tags:
      - conversations
  /rtm.connect:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/rtmConnectdefault'
            description: Schema for error response from rtm.connect method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/rtmConnect200'
            description: Schema for successful response from rtm.connect method
          examples:
            application/json:
              ok: true
              url: wss://...
              self:
                name: robotoverlord
                id: U4X318ZMZ
              team:
                domain: slackdemo
                name: SlackDemo
                id: T2U81E2FP
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/rtm.connect
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: presence_sub
        type: boolean
        description: Only deliver presence events when requested by subscription.
          See [presence subscriptions](/docs/presence-and-status#subscriptions).
      - in: query
        name: batch_presence_aware
        type: boolean
        description: Batch presence deliveries via subscription. Enabling changes
          the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).
      operationId: rtmConnect
      security:
      - Bearer: []
      description: Starts a Real Time Messaging session.
      tags:
      - rtm
  /mpim.replies:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/mpimRepliesdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/mpimReplies200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              messages:
              - ts: "1358546515.000008"
                text: Hello
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                is_starred: true
                text: World
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                type: something_else
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/mpim.replies
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message.
      - in: query
        name: channel
        type: string
        description: Multiparty direct message channel to fetch thread from.
      operationId: mpimReplies
      security:
      - Bearer: []
      description: Retrieve a thread of messages posted to a direct message conversation
        from a multiparty direct message.
      tags:
      - mpim
  /team.accessLogs:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/teamAccessLogsdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/teamAccessLogs200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/team.accessLogs
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: page
        type: string
        description: page
      - in: query
        name: before
        type: integer
        description: End of time range of logs to include in results (inclusive).
      operationId: teamAccessLogs
      security:
      - Bearer: []
      description: Gets the access logs for the current team.
      tags:
      - team
  /auth.test:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/authTestdefault'
            description: Schema for error response auth.test method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Standard failure response when used with an invalid token
        200:
          schema:
            $ref: '#/definitions/authTest200'
            description: Schema for successful response auth.test method
          examples:
            application/json:
              ok: true
              team_id: T12345678
              url: https://subarachnoid.slack.com/
              user: grace
              team: Subarachnoid Workspace
              user_id: W12345678
          description: Standard success response when used with a user token
      externalDocs:
        url: https://api.slack.com/methods/auth.test
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: authTest
      security:
      - Bearer: []
      description: Checks authentication & identity.
      tags:
      - auth
  /im.history:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/imHistorydefault'
            description: Schema for error response from im.history method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/imHistory200'
            description: Schema for successful response from im.history method
          examples:
            application/json:
              ok: true
              has_more: false
              messages:
              - ts: "1358546515.000008"
                text: Hello
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                is_starred: true
                text: World
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                type: something_else
              latest: "1358547726.000003"
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/im.history
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
      - in: query
        name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
      - in: query
        name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
      - in: query
        name: oldest
        type: number
        description: Start of time range of messages to include in results.
      - in: query
        name: channel
        type: string
        description: Direct message channel to fetch history for.
      - in: query
        name: latest
        type: number
        description: End of time range of messages to include in results.
      operationId: imHistory
      security:
      - Bearer: []
      description: Fetches history of messages and events from direct message channel.
      tags:
      - im
  /groups.history:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsHistorydefault'
            description: Schema for error response groups.history method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsHistory200'
            description: Schema for successful response groups.history method
          examples:
            application/json:
              ok: true
              has_more: false
              messages:
              - ts: "1358546515.000008"
                text: Hello
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                is_starred: true
                text: World
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                type: something_else
              latest: "1358547726.000003"
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.history
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
      - in: query
        name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
      - in: query
        name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
      - in: query
        name: oldest
        type: number
        description: Start of time range of messages to include in results.
      - in: query
        name: channel
        type: string
        description: Private channel to fetch history for.
      - in: query
        name: latest
        type: number
        description: End of time range of messages to include in results.
      operationId: groupsHistory
      security:
      - Bearer: []
      description: Fetches history of messages and events from a private channel.
      tags:
      - groups
  /pins.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/pinsListdefault'
            description: Schema for error response from pins.list method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/pinsList200'
            description: Schema for successful response from pins.list method
          examples:
            application/json:
              ok: true
              items:
              - created: 1508881078
                channel: C2U86NC6H
                created_by: U2U85N1RZ
                type: message
                message:
                  ts: "1508197641.000151"
                  text: What is the meaning of life?
                  permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151
                  user: U2U85N1RZ
                  pinned_to:
                  - C2U86NC6H
                  type: message
              - created: 1508880991
                channel: C2U86NC6H
                created_by: U2U85N1RZ
                type: message
                message:
                  ts: "1503289197.000015"
                  text: The meaning of life, the universe, and everything is 42.
                  permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015
                  user: U2U85N1RZ
                  pinned_to:
                  - C2U86NC6H
                  type: message
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/pins.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: channel
        type: string
        description: Channel to get pinned items for.
      operationId: pinsList
      security:
      - Bearer: []
      description: Lists items pinned to a channel.
      tags:
      - pins
  /search.messages:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/searchMessagesdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: No query passed
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/searchMessages200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              query: The meaning of life the universe and everything
              messages:
                pagination:
                  page_count: 1
                  first: 1
                  page: 1
                  total_count: 2
                  last: 2
                  per_page: 20
                matches:
                - iid: cb64bdaa-c1e8-4631-8a91-0f78080113e9
                  ts: "1508284197.000015"
                  text: The meaning of life the universe and everything is 42.
                  channel:
                    is_shared: false
                    pending_shared: []
                    is_mpim: false
                    name: general
                    is_pending_ext_shared: false
                    is_ext_shared: false
                    id: C12345678
                    is_private: false
                    is_org_shared: false
                  permalink: https://hitchhikers.slack.com/archives/C12345678/p1508284197000015
                  username: roach
                  user: U2U85N1RV
                  team: T12345678
                  type: message
                - iid: 9a00d3c9-bd2d-45b0-988b-6cff99ae2a90
                  ts: "1508795665.000236"
                  text: The meaning of life the universe and everything is 101010
                  channel:
                    is_shared: false
                    pending_shared: []
                    is_mpim: false
                    name: random
                    is_pending_ext_shared: false
                    is_ext_shared: false
                    id: C12345678
                    is_private: false
                    is_org_shared: false
                  permalink: https://hitchhikers.slack.com/archives/C12345678/p1508795665000236
                  username: robot overlord
                  user: ""
                  team: T12345678
                  type: message
                paging:
                  pages: 1
                  count: 20
                  page: 1
                  total: 2
                total: 2
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/search.messages
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: sort_dir
        type: string
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
      - in: query
        name: query
        type: string
        description: Search query.
      - in: query
        name: sort
        type: string
        description: Return matches sorted by either `score` or `timestamp`.
      - in: query
        name: count
        type: string
        description: Pass the number of results you want per "page". Maximum of `100`.
      - in: query
        name: highlight
        type: boolean
        description: Pass a value of `true` to enable query highlight markers (see
          below).
      - in: query
        name: page
        type: string
        description: page
      operationId: searchMessages
      security:
      - Bearer: []
      description: Searches for messages matching a query.
      tags:
      - search
  /api.test:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/apiTestdefault'
            description: Schema for error response api.test method
          examples:
            application/json:
              ok: false
              args:
                error: my_error
              error: my_error
          description: Artificial error response
        200:
          schema:
            $ref: '#/definitions/apiTest200'
            description: Schema for successful response api.test method
          examples:
            application/json:
              ok: true
          description: Standard success response
      externalDocs:
        url: https://api.slack.com/methods/api.test
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: foo
        type: string
        description: example property to return
      - in: query
        name: error
        type: string
        description: Error response to return
      operationId: apiTest
      security:
      - Bearer: []
      description: Checks API calling code.
      tags:
      - api
  /emoji.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/emojiListdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/emojiList200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/emoji.list
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: emojiList
      security:
      - Bearer: []
      description: Lists custom emoji for a team.
      tags:
      - emoji
  /oauth.access:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/oauthAccessdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_client_id
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/oauthAccess200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              team_id: TXXXXXXXXX
              team_name: Wyld Stallyns LLC
              access_token: xoxp-XXXXXXXX-XXXXXXXX-XXXXX
              scope: groups:write
          description: Successful user token negotiation for a single scope
      externalDocs:
        url: https://api.slack.com/methods/oauth.access
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: client_secret
        type: string
        description: Issued when you created your application.
      - in: query
        name: code
        type: string
        description: The `code` param returned via the OAuth callback.
      - in: query
        name: single_channel
        type: boolean
        description: Request the user to add your app only to a single channel.
      - in: query
        name: client_id
        type: string
        description: Issued when you created your application.
      - in: query
        name: redirect_uri
        type: string
        description: This must match the originally submitted URI (if one was sent).
      operationId: oauthAccess
      security:
      - Bearer: []
      description: Exchanges a temporary OAuth verifier code for an access token.
      tags:
      - oauth
  /reactions.add:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/reactionsAdddefault'
            description: Schema for error response from reactions.add method
          examples:
            application/json:
              ok: false
              error: already_reacted
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/reactionsAdd200'
            description: Schema for successful response from reactions.add method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reactions.add
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/reactionsAddBody'
        in: body
        name: body
        description: reactionsAdd body
      operationId: reactionsAdd
      security:
      - Bearer: []
      description: Adds a reaction to an item.
      tags:
      - reactions
  /dnd.endSnooze:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/dndEndSnoozedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/dndEndSnooze200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/dnd.endSnooze
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: dndEndSnooze
      security:
      - Bearer: []
      description: Ends the current user's snooze mode immediately.
      tags:
      - dnd
  /files.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/filesInfodefault'
            description: Schema for error response from files.info method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/filesInfo200'
            description: Schema for successful response from files.info method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/files.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: file
        type: string
        description: Specify a file by providing its ID.
      - in: query
        name: page
        type: string
        description: page
      operationId: filesInfo
      security:
      - Bearer: []
      description: Gets information about a team file.
      tags:
      - files
  /groups.rename:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsRenamedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsRename200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.rename
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsRenameBody'
        in: body
        name: body
        description: groupsRename body
      operationId: groupsRename
      security:
      - Bearer: []
      description: Renames a private channel.
      tags:
      - groups
  /conversations.archive:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsArchivedefault'
            description: Schema for error response from conversations.archive method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsArchive200'
            description: Schema for successful response conversations.archive method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.archive
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsArchiveBody'
        in: body
        name: body
        description: conversationsArchive body
      operationId: conversationsArchive
      security:
      - Bearer: []
      description: Archives a conversation.
      tags:
      - conversations
  /reactions.remove:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/reactionsRemovedefault'
            description: Schema for error response from reactions.remove method
          examples:
            application/json:
              ok: false
              error: no_reaction
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/reactionsRemove200'
            description: Schema for successful response from reactions.remove method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reactions.remove
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/reactionsRemoveBody'
        in: body
        name: body
        description: reactionsRemove body
      operationId: reactionsRemove
      security:
      - Bearer: []
      description: Removes a reaction from an item.
      tags:
      - reactions
  /oauth.token:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/oauthTokendefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_client_id
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/oauthToken200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              team_id: T061EG9Z9
              installer_user_id: U061F7AUR
              authorizing_user_id: U0HTT3Q0G
              team_name: Subarachnoid Workspace
              access_token: xoxa-access-token-string
              single_channel_id: C061EG9T2
              token_type: app
              app_user_id: U0AB12ABC
              permissions:
              - scopes:
                - channels:read
                - chat:write:user
                resource_type: channel
                resource_id: 0
              app_id: A012345678
          description: Success example using a workspace app produces a very different
            kind of response
      externalDocs:
        url: https://api.slack.com/methods/oauth.token
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: client_secret
        type: string
        description: Issued when you created your application.
      - in: query
        name: code
        type: string
        description: The `code` param returned via the OAuth callback.
      - in: query
        name: single_channel
        type: boolean
        description: Request the user to add your app only to a single channel.
      - in: query
        name: client_id
        type: string
        description: Issued when you created your application.
      - in: query
        name: redirect_uri
        type: string
        description: This must match the originally submitted URI (if one was sent).
      operationId: oauthToken
      security:
      - Bearer: []
      description: Exchanges a temporary OAuth verifier code for a workspace token.
      tags:
      - oauth
  /conversations.kick:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsKickdefault'
            description: Schema for error response conversations.kick method
          examples:
            application/json:
              ok: false
              error: cant_kick_self
          description: Typical error response when you attempt to kick yourself from
            a channel
        200:
          schema:
            $ref: '#/definitions/conversationsKick200'
            description: Schema for successful response conversations.kick method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.kick
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsKickBody'
        in: body
        name: body
        description: conversationsKick body
      operationId: conversationsKick
      security:
      - Bearer: []
      description: Removes a user from a conversation.
      tags:
      - conversations
  /users.identity:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usersIdentitydefault'
            description: Schema for error response from users.identity method
          examples:
            application/json:
              ok: false
              error: account_inactive
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersIdentity200'
            description: Schema for successful response from users.identity method
          examples:
            application/json:
              ok: true
              user:
                name: Sonny Whether
                id: U0G9QF9C6
              team:
                id: T0G9PQBBK
          description: 'You will receive at a minimum the following information:'
      externalDocs:
        url: https://api.slack.com/methods/users.identity
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: usersIdentity
      security:
      - Bearer: []
      description: Get a user's identity.
      tags:
      - users
  /channels.setPurpose:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsSetPurposedefault'
            description: Schema for error response from channels.setPurpose method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsSetPurpose200'
            description: Schema for successful response from channels.setPurpose method
          examples:
            application/json:
              ok: true
              purpose: My special purpose
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.setPurpose
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsSetPurposeBody'
        in: body
        name: body
        description: channelsSetPurpose body
      operationId: channelsSetPurpose
      security:
      - Bearer: []
      description: Sets the purpose for a channel.
      tags:
      - channels
  /users.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usersInfodefault'
            description: Schema for error response from users.info method
          examples:
            application/json:
              ok: false
              error: user_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersInfo200'
            description: Schema for successful response from users.info method
          examples:
            application/json:
              ok: true
              user:
                tz_offset: -25200
                team_id: T012AB3C4
                is_primary_owner: false
                is_app_user: false
                color: 9f69e7
                has_2fa: false
                profile:
                  email: spengler@ghostbusters.example.com
                  display_name_normalized: spengler
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_emoji: ':books:'
                  display_name: spengler
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_text: Print is dead
                  real_name_normalized: Egon Spengler
                  avatar_hash: ge3b51ca72de
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  real_name: Egon Spengler
                  team: T012AB3C4
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                tz: America/Los_Angeles
                is_owner: false
                is_bot: false
                name: spengler
                tz_label: Pacific Daylight Time
                real_name: Egon Spengler
                is_admin: true
                id: W012A3CDE
                deleted: false
                updated: 1502138686
                is_restricted: false
                is_ultra_restricted: false
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/users.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this user. Defaults
          to `false`
      - in: query
        name: user
        type: string
        description: User to get info on
      operationId: usersInfo
      security:
      - Bearer: []
      description: Gets information about a user.
      tags:
      - users
  /conversations.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsListdefault'
            description: Schema for error response from conversations.list method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsList200'
            description: Schema for successful response from conversations.list method
          examples:
            application/json:
              ok: true
              channels:
              - is_shared: false
                creator: U012A3CDE
                previous_names: []
                unlinked: 0
                created: 1449252889
                is_general: true
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: This channel is for team-wide communication and announcements.
                    All team members are in this channel.
                  last_set: 0
                is_im: false
                topic:
                  creator: ""
                  value: Company-wide announcements and work-based matters
                  last_set: 0
                pending_shared: []
                name_normalized: general
                is_mpim: false
                name: general
                is_pending_ext_shared: false
                num_members: 4
                is_group: false
                is_ext_shared: false
                id: C012AB3CD
                is_member: true
                is_private: false
                is_org_shared: false
              - is_shared: false
                creator: U061F7AUR
                previous_names: []
                unlinked: 0
                created: 1449252889
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: A place for non-work-related flimflam, faffing, hodge-podge
                    or jibber-jabber you'd prefer to keep out of more focused work-related
                    channels.
                  last_set: 0
                is_im: false
                topic:
                  creator: ""
                  value: Non-work banter and water cooler conversation
                  last_set: 0
                pending_shared: []
                name_normalized: random
                is_mpim: false
                name: random
                is_pending_ext_shared: false
                num_members: 4
                is_group: false
                is_ext_shared: false
                id: C061EG9T2
                is_member: true
                is_private: false
                is_org_shared: false
              response_metadata:
                next_cursor: dGVhbTpDMDYxRkE1UEI=
          description: Typical success response with only public channels
      externalDocs:
        url: https://api.slack.com/methods/conversations.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
      - in: query
        name: exclude_archived
        type: boolean
        description: Set to `true` to exclude archived channels from the list
      - in: query
        name: types
        type: string
        description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
      operationId: conversationsList
      security:
      - Bearer: []
      description: Lists all channels in a Slack team.
      tags:
      - conversations
  /channels.create:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsCreatedefault'
            description: Schema for error response channels.create method
          examples:
            application/json:
              ok: false
              error: invalid_name_specials
              detail: Value passed for `name` contained unallowed special characters.
          description: Example error response when an invalid name is provided
        200:
          schema:
            $ref: '#/definitions/channelsCreate200'
            description: Schema for successful response channels.create method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: U061F7AUR
                last_read: 0000000000.000000
                previous_names: []
                created: 1502833204
                members:
                - U061F7AUR
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: ""
                  last_set: 0
                topic:
                  creator: ""
                  value: ""
                  last_set: 0
                name_normalized: endeavor
                is_mpim: false
                name: endeavor
                unread_count: 0
                id: C0DEL09A5
                is_member: true
                is_private: false
                unread_count_display: 0
                latest: ~
                is_org_shared: false
          description: Typical success response resulting in a new channel
      externalDocs:
        url: https://api.slack.com/methods/channels.create
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsCreateBody'
        in: body
        name: body
        description: channelsCreate body
      operationId: channelsCreate
      security:
      - Bearer: []
      description: Creates a channel.
      tags:
      - channels
  /conversations.join:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsJoindefault'
            description: Schema for error response from conversations.join method
          examples:
            application/json:
              ok: false
              error: is_archived
          description: Typical error response if the conversation is archived and
            cannot be joined
        200:
          schema:
            $ref: '#/definitions/conversationsJoin200'
            description: Schema for successful response from conversations.join method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: U061F7AUR
                previous_names: []
                unlinked: 0
                created: 1449252889
                is_general: true
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: For widget discussion
                  last_set: 0
                is_im: false
                topic:
                  creator: ""
                  value: Which widget do you worry about?
                  last_set: 0
                pending_shared: []
                name_normalized: general
                is_mpim: false
                name: general
                is_pending_ext_shared: false
                is_group: false
                is_ext_shared: false
                id: C061EG9SL
                is_member: true
                is_private: false
                is_org_shared: false
              warning: already_in_channel
              response_metadata:
                warnings:
                - already_in_channel
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.join
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsJoinBody'
        in: body
        name: body
        description: conversationsJoin body
      operationId: conversationsJoin
      security:
      - Bearer: []
      description: Joins an existing conversation.
      tags:
      - conversations
  /usergroups.enable:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usergroupsEnabledefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usergroupsEnable200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/usergroups.enable
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/usergroupsEnableBody'
        in: body
        name: body
        description: usergroupsEnable body
      operationId: usergroupsEnable
      security:
      - Bearer: []
      description: Enable a User Group
      tags:
      - usergroups
  /users.setActive:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usersSetActivedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersSetActive200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/users.setActive
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: usersSetActive
      security:
      - Bearer: []
      description: Marked a user as active. Deprecated and non-functional.
      tags:
      - users
  /reminders.delete:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/remindersDeletedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/remindersDelete200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reminders.delete
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/remindersDeleteBody'
        in: body
        name: body
        description: remindersDelete body
      operationId: remindersDelete
      security:
      - Bearer: []
      description: Deletes a reminder.
      tags:
      - reminders
  /reminders.complete:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/remindersCompletedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/remindersComplete200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reminders.complete
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/remindersCompleteBody'
        in: body
        name: body
        description: remindersComplete body
      operationId: remindersComplete
      security:
      - Bearer: []
      description: Marks a reminder as complete.
      tags:
      - reminders
  /apps.permissions.scopes.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/appsPermissionsScopesListdefault'
            description: Schema for error response from apps.permissions.scopes.list
              method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/appsPermissionsScopesList200'
            description: Schema for successful response api.permissions.scopes.list
              method
          examples:
            application/json:
              ok: true
              scopes:
                im:
                - chat:write
                group:
                - chat:write
                channel:
                - channels:history
                - chat:write
                app_home:
                - chat:write
                - im:history
                - im:read
                user: []
                team:
                - users:read
                mpim:
                - chat:write
          description: Typical successful paginated response
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.scopes.list
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: appsPermissionsScopesList
      security:
      - Bearer: []
      description: Returns list of scopes this app has on a team.
      tags:
      - apps.permissions.scopes
      - apps
  /stars.remove:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/starsRemovedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/starsRemove200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/stars.remove
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/starsRemoveBody'
        in: body
        name: body
        description: starsRemove body
      operationId: starsRemove
      security:
      - Bearer: []
      description: Removes a star from an item.
      tags:
      - stars
  /channels.history:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsHistorydefault'
            description: Schema for error response channels.history method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Error response when the specified channel cannot be found
        200:
          schema:
            $ref: '#/definitions/channelsHistory200'
            description: Schema for successful response channels.history method
          examples:
            application/json:
              ok: true
              has_more: false
              messages:
              - ts: "1358546515.000008"
                text: Hello
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                is_starred: true
                text: World
                user: U2147483896
                reactions:
                - users:
                  - U1
                  - U2
                  - U3
                  count: 3
                  name: space_invader
                - users:
                  - U1
                  - U2
                  - U3
                  - U4
                  - U5
                  count: 5
                  name: sweet_potato
                type: message
              - ts: "1358546515.000007"
                type: something_else
              - ts: "1503435956.000247"
                attachments:
                - text: Don't get too attached
                  fallback: This is an attachment fallback
                  id: 1
                text: Containment unit is 98% full
                username: ecto1138
                subtype: bot_message
                type: message
                bot_id: B19LU7CSY
              latest: "1358547726.000003"
          description: Typical success response containing the channel's history
      externalDocs:
        url: https://api.slack.com/methods/channels.history
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
      - in: query
        name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
      - in: query
        name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
      - in: query
        name: oldest
        type: number
        description: Start of time range of messages to include in results.
      - in: query
        name: channel
        type: string
        description: Channel to fetch history for.
      - in: query
        name: latest
        type: number
        description: End of time range of messages to include in results.
      operationId: channelsHistory
      security:
      - Bearer: []
      description: Fetches history of messages and events from a channel.
      tags:
      - channels
  /team.billableInfo:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/teamBillableInfodefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/teamBillableInfo200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/team.billableInfo
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: user
        type: string
        description: A user to retrieve the billable information for. Defaults to
          all users.
      operationId: teamBillableInfo
      security:
      - Bearer: []
      description: Gets billable users information for the current team.
      tags:
      - team
  /conversations.replies:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsRepliesdefault'
            description: Schema for error response from conversations.replies method
          examples:
            application/json:
              ok: false
              error: thread_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsReplies200'
            description: Schema for successful response from conversations.replies
              method
          examples:
            application/json:
              ok: true
              has_more: true
              messages:
              - subscribed: true
                ts: "1482960137.003543"
                last_read: "1484678597.521003"
                text: island
                thread_ts: "1482960137.003543"
                user: U061F7AUR
                replies:
                - ts: "1483037603.017503"
                  user: U061F7AUR
                - ts: "1483051909.018632"
                  user: U061F7AUR
                - ts: "1483125339.020269"
                  user: U061F7AUR
                unread_count: 0
                type: message
                reply_count: 3
              - ts: "1483037603.017503"
                text: one island
                thread_ts: "1482960137.003543"
                user: U061F7AUR
                parent_user_id: U061F7AUR
                type: message
              - ts: "1483051909.018632"
                text: two island
                thread_ts: "1482960137.003543"
                user: U061F7AUR
                parent_user_id: U061F7AUR
                type: message
              - ts: "1483125339.020269"
                text: three for the land
                thread_ts: "1482960137.003543"
                user: U061F7AUR
                parent_user_id: U061F7AUR
                type: message
              response_metadata:
                next_cursor: bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.replies
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
      - in: query
        name: ts
        type: number
        description: Unique identifier of a thread's parent message.
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
      - in: query
        name: oldest
        type: number
        description: Start of time range of messages to include in results.
      - in: query
        name: channel
        type: string
        description: Conversation ID to fetch thread from.
      - in: query
        name: latest
        type: number
        description: End of time range of messages to include in results.
      operationId: conversationsReplies
      security:
      - Bearer: []
      description: Retrieve a thread of messages posted to a conversation
      tags:
      - conversations
  /files.comments.add:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/filesCommentsAdddefault'
            description: Schema for error response from files.comments.add method
          examples:
            application/json:
              ok: false
              error: file_not_found
          description: Artificial error response
        200:
          schema:
            $ref: '#/definitions/filesCommentsAdd200'
            description: Schema for successful response files.comments.add method
          examples:
            application/json:
              ok: true
              comment:
                created: 1356032811
                channel: C1234467890
                user: U1234567890
                id: Fc1234567890
                comment: Everyone should take a moment to read this file.
                timestamp: 1356032811
          description: Standard success response
      externalDocs:
        url: https://api.slack.com/methods/files.comments.add
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/filesCommentsAddBody'
        in: body
        name: body
        description: filesCommentsAdd body
      operationId: filesCommentsAdd
      security:
      - Bearer: []
      description: Add a comment to an existing file.
      tags:
      - files.comments
      - files
  /chat.update:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/chatUpdatedefault'
            description: Schema for error response chat.update method
          examples:
            application/json:
              ok: false
              error: cant_update_message
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/chatUpdate200'
            description: Schema for successful response of chat.update method
          examples:
            application/json:
              ok: true
              ts: "1401383885.000061"
              text: Updated text you carefully authored
              channel: C024BE91L
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/chat.update
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/chatUpdateBody'
        in: body
        name: body
        description: chatUpdate body
      operationId: chatUpdate
      security:
      - Bearer: []
      description: Updates a message.
      tags:
      - chat
  /chat.delete:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/chatDeletedefault'
            description: Schema for error response from chat.delete method
          examples:
            application/json:
              ok: false
              error: message_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/chatDelete200'
            description: Schema for successful response of chat.delete method
          examples:
            application/json:
              ok: true
              ts: "1401383885.000061"
              channel: C024BE91L
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/chat.delete
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/chatDeleteBody'
        in: body
        name: body
        description: chatDelete body
      operationId: chatDelete
      security:
      - Bearer: []
      description: Deletes a message.
      tags:
      - chat
  /groups.setTopic:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsSetTopicdefault'
            description: Schema for error response from groups.setTopic method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsSetTopic200'
            description: Schema for successful response from groups.setTopic method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.setTopic
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsSetTopicBody'
        in: body
        name: body
        description: groupsSetTopic body
      operationId: groupsSetTopic
      security:
      - Bearer: []
      description: Sets the topic for a private channel.
      tags:
      - groups
  /reminders.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/remindersListdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/remindersList200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reminders.list
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: remindersList
      security:
      - Bearer: []
      description: Lists all reminders created by or for a given user.
      tags:
      - reminders
  /groups.leave:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsLeavedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsLeave200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.leave
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsLeaveBody'
        in: body
        name: body
        description: groupsLeave body
      operationId: groupsLeave
      security:
      - Bearer: []
      description: Leaves a private channel.
      tags:
      - groups
  /users.lookupByEmail:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usersLookupByEmaildefault'
            description: Schema for error response from users.lookupByEmail method
          examples:
            application/json:
              ok: false
              error: users_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersLookupByEmail200'
            description: Schema for successful response from users.lookupByEmail method
          examples:
            application/json:
              ok: true
              user:
                tz_offset: -25200
                team_id: T012AB3C4
                is_primary_owner: false
                is_app_user: false
                color: 9f69e7
                has_2fa: false
                profile:
                  email: spengler@ghostbusters.example.com
                  display_name_normalized: spengler
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_emoji: ':books:'
                  display_name: spengler
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_text: Print is dead
                  real_name_normalized: Egon Spengler
                  avatar_hash: ge3b51ca72de
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  real_name: Egon Spengler
                  team: T012AB3C4
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                tz: America/Los_Angeles
                is_owner: false
                is_bot: false
                name: spengler
                tz_label: Pacific Daylight Time
                real_name: Egon Spengler
                is_admin: true
                id: W012A3CDE
                deleted: false
                updated: 1502138686
                is_restricted: false
                is_ultra_restricted: false
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/users.lookupByEmail
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: email
        type: string
        description: An email address belonging to a user in the workspace
      operationId: usersLookupByEmail
      security:
      - Bearer: []
      description: Find a user with an email address.
      tags:
      - users
  /files.revokePublicURL:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/filesRevokePublicURLdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/filesRevokePublicURL200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/files.revokePublicURL
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/filesRevokePublicURLBody'
        in: body
        name: body
        description: filesRevokePublicURL body
      operationId: filesRevokePublicURL
      security:
      - Bearer: []
      description: Revokes public/external sharing access for a file
      tags:
      - files
  /im.open:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/imOpendefault'
            description: Schema for error response from im.open method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/imOpen200'
            description: Schema for successful response from im.open method
          examples:
            application/json:
              ok: true
              channel:
                id: D947RLWRX
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/im.open
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/imOpenBody'
        in: body
        name: body
        description: imOpen body
      operationId: imOpen
      security:
      - Bearer: []
      description: Opens a direct message channel.
      tags:
      - im
  /channels.rename:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsRenamedefault'
            description: Schema for error response from channels.rename method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsRename200'
            description: Schema for successful response from channels.rename method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: U2U85N1RZ
                previous_names:
                - humans
                unlinked: 0
                created: 1477445146
                members: []
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: U2U85N1RZ
                  value: the purpose of this channel is to bring people and robots
                    together in harmony
                  last_set: 1509475801
                topic:
                  creator: U2U85N1RZ
                  value: here be robots
                  last_set: 1509475775
                name_normalized: humans-and-bots
                is_mpim: false
                name: humans-and-bots
                id: C2U875RJN
                is_member: false
                is_private: false
                is_org_shared: false
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.rename
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsRenameBody'
        in: body
        name: body
        description: channelsRename body
      operationId: channelsRename
      security:
      - Bearer: []
      description: Renames a channel.
      tags:
      - channels
  /conversations.close:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsClosedefault'
            description: Schema for error response from conversations.close method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsClose200'
            description: Schema for successful response conversations.close method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.close
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsCloseBody'
        in: body
        name: body
        description: conversationsClose body
      operationId: conversationsClose
      security:
      - Bearer: []
      description: Closes a direct message or multi-person direct message.
      tags:
      - conversations
  /usergroups.users.update:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usergroupsUsersUpdatedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usergroupsUsersUpdate200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              usergroup:
                team_id: T060R4BHN
                users:
                - U060R4BJ4
                - U060RNRCZ
                handle: marketing-team
                user_count: 1
                is_external: false
                is_usergroup: true
                created_by: U060R4BJ4
                name: Marketing Team
                date_create: 1447096577
                date_update: 1447102109
                prefs:
                  groups: []
                  channels: []
                date_delete: 0
                id: S0616NG6M
                auto_type: ~
                description: Marketing gurus, PR experts and product advocates.
                updated_by: U060R4BJ4
                deleted_by: ~
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/usergroups.users.update
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/usergroupsUsersUpdateBody'
        in: body
        name: body
        description: usergroupsUsersUpdate body
      operationId: usergroupsUsersUpdate
      security:
      - Bearer: []
      description: Update the list of users for a User Group
      tags:
      - usergroups.users
      - usergroups
  /users.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usersListdefault'
            description: Schema for error response from users.list method
          examples:
            application/json:
              ok: false
              error: invalid_cursor
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersList200'
            description: Schema for successful response from users.list method
          examples:
            application/json:
              ok: true
              cache_ts: 1498777272
              members:
              - tz_offset: -25200
                team_id: T012AB3C4
                is_primary_owner: false
                is_app_user: false
                color: 9f69e7
                has_2fa: false
                profile:
                  email: spengler@ghostbusters.example.com
                  display_name_normalized: spengler
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_emoji: ':books:'
                  display_name: spengler
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  status_text: Print is dead
                  real_name_normalized: Egon Spengler
                  avatar_hash: ge3b51ca72de
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  real_name: Egon Spengler
                  team: T012AB3C4
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                tz: America/Los_Angeles
                is_owner: false
                is_bot: false
                name: spengler
                tz_label: Pacific Daylight Time
                real_name: spengler
                is_admin: true
                id: W012A3CDE
                deleted: false
                updated: 1502138686
                is_restricted: false
                is_ultra_restricted: false
              - tz_offset: -25200
                team_id: T0G9PQBBK
                is_primary_owner: false
                color: 9f69e7
                has_2fa: false
                profile:
                  email: glenda@south.oz.coven
                  display_name_normalized: Glinda the Fairly Good
                  image_48: https://a.slack-edge.com...png
                  phone: ""
                  skype: ""
                  display_name: Glinda the Fairly Good
                  first_name: Glinda
                  image_72: https://a.slack-edge.com...png
                  image_512: https://a.slack-edge.com...png
                  real_name_normalized: Glinda Southgood
                  avatar_hash: 8fbdd10b41c6
                  image_1024: https://a.slack-edge.com...png
                  image_192: https://a.slack-edge.com...png
                  real_name: Glinda Southgood
                  last_name: Southgood
                  title: Glinda the Good
                  image_24: https://a.slack-edge.com...png
                  image_32: https://a.slack-edge.com...png
                  image_original: https://a.slack-edge.com...png
                tz: America/Los_Angeles
                is_owner: false
                is_bot: false
                name: glinda
                tz_label: Pacific Daylight Time
                real_name: Glinda Southgood
                is_admin: true
                id: W07QCRPA4
                deleted: false
                updated: 1480527098
                is_restricted: false
                is_ultra_restricted: false
              response_metadata:
                next_cursor: dXNlcjpVMEc5V0ZYTlo=
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/users.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: presence
        type: boolean
        description: Deprecated. Whether to include presence data in the output. Defaults
          to `false`. Setting this to `true` reduces performance, especially with
          large teams.
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
      - in: query
        name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for users. Defaults
          to `false`
      operationId: usersList
      security:
      - Bearer: []
      description: Lists all users in a Slack team.
      tags:
      - users
  /groups.create:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsCreatedefault'
            description: Schema for error response groups.create method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsCreate200'
            description: Schema for successful response groups.create method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.create
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsCreateBody'
        in: body
        name: body
        description: groupsCreate body
      operationId: groupsCreate
      security:
      - Bearer: []
      description: Creates a private channel.
      tags:
      - groups
  /groups.setPurpose:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsSetPurposedefault'
            description: Schema for error response from groups.setPurpose method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsSetPurpose200'
            description: Schema for successful response from groups.setPurpose method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.setPurpose
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsSetPurposeBody'
        in: body
        name: body
        description: groupsSetPurpose body
      operationId: groupsSetPurpose
      security:
      - Bearer: []
      description: Sets the purpose for a private channel.
      tags:
      - groups
  /groups.open:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsOpendefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsOpen200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.open
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsOpenBody'
        in: body
        name: body
        description: groupsOpen body
      operationId: groupsOpen
      security:
      - Bearer: []
      description: Opens a private channel.
      tags:
      - groups
  /auth.revoke:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/authRevokedefault'
            description: Schema for error response from auth.revoke method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/authRevoke200'
            description: Schema for successful response from auth.revoke method
          examples:
            application/json:
              revoked: true
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/auth.revoke
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: test
        type: boolean
        description: Setting this parameter to `1` triggers a _testing mode_ where
          the specified token will not actually be revoked.
      operationId: authRevoke
      security:
      - Bearer: []
      description: Revokes a token.
      tags:
      - auth
  /conversations.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsInfodefault'
            description: Schema for error response from conversations.info method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response when a channel cannot be found
        200:
          schema:
            $ref: '#/definitions/conversationsInfo200'
            description: Schema for successful response conversations.info
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: W012A3BCD
                is_read_only: false
                last_read: "1502126650.228446"
                previous_names:
                - specifics
                - abstractions
                - etc
                unlinked: 0
                created: 1449252889
                locale: en-US
                is_general: true
                is_archived: false
                is_channel: true
                purpose:
                  creator: W012A3BCD
                  value: This part of the workspace is for fun. Make fun here.
                  last_set: 1449709364
                is_im: false
                topic:
                  creator: W012A3BCD
                  value: For public discussion of generalities
                  last_set: 1449709364
                pending_shared: []
                name_normalized: general
                is_mpim: false
                name: general
                is_pending_ext_shared: false
                num_members: 23
                is_group: false
                is_ext_shared: false
                id: C012AB3CD
                is_member: true
                is_private: false
                is_org_shared: false
          description: Typical success response for a public channel. (Also, a response
            from a private channel and a multi-party IM is very similar to this example.)
      externalDocs:
        url: https://api.slack.com/methods/conversations.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: channel
        type: string
        description: Conversation ID to learn more about
      - in: query
        name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this conversation.
          Defaults to `false`
      operationId: conversationsInfo
      security:
      - Bearer: []
      description: Retrieve information about a conversation.
      tags:
      - conversations
  /groups.invite:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsInvitedefault'
            description: Schema for error response groups.invite method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsInvite200'
            description: Schema for successful response groups.invite method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.invite
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsInviteBody'
        in: body
        name: body
        description: groupsInvite body
      operationId: groupsInvite
      security:
      - Bearer: []
      description: Invites a user to a private channel.
      tags:
      - groups
  /stars.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/starsListdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/starsList200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/stars.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: page
        type: string
        description: page
      operationId: starsList
      security:
      - Bearer: []
      description: Lists stars for a user.
      tags:
      - stars
  /apps.permissions.request:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/appsPermissionsRequestdefault'
            description: Schema for error response from apps.permissions.request method
          examples:
            application/json:
              ok: false
              error: invalid_trigger_id
          description: Standard failure response when trigger_id is invalid
        200:
          schema:
            $ref: '#/definitions/appsPermissionsRequest200'
            description: Schema for successful response from apps.permissions.request
              method
          examples:
            application/json:
              ok: true
          description: Standard success response when used with a user token
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.request
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: scopes
        type: string
        description: A comma separated list of scopes to request for
      - in: query
        name: trigger_id
        type: string
        description: Token used to trigger the permissions API
      operationId: appsPermissionsRequest
      security:
      - Bearer: []
      description: Allows an app to request additional scopes
      tags:
      - apps.permissions
      - apps
  /pins.add:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/pinsAdddefault'
            description: Schema for error response from pins.add method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/pinsAdd200'
            description: Schema for successful response from pins.add method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/pins.add
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/pinsAddBody'
        in: body
        name: body
        description: pinsAdd body
      operationId: pinsAdd
      security:
      - Bearer: []
      description: Pins an item to a channel.
      tags:
      - pins
  /channels.mark:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsMarkdefault'
            description: Schema for error response channels.mark method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsMark200'
            description: Schema for successful response channels.mark method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.mark
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsMarkBody'
        in: body
        name: body
        description: channelsMark body
      operationId: channelsMark
      security:
      - Bearer: []
      description: Sets the read cursor in a channel.
      tags:
      - channels
  /groups.unarchive:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsUnarchivedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsUnarchive200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.unarchive
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsUnarchiveBody'
        in: body
        name: body
        description: groupsUnarchive body
      operationId: groupsUnarchive
      security:
      - Bearer: []
      description: Unarchives a private channel.
      tags:
      - groups
  /conversations.members:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsMembersdefault'
            description: Schema for error response conversations.members method
          examples:
            application/json:
              ok: false
              error: invalid_cursor
          description: Typical error response when an invalid cursor is provided
        200:
          schema:
            $ref: '#/definitions/conversationsMembers200'
            description: Schema for successful response conversations.members method
          examples:
            application/json:
              ok: true
              members:
              - U023BECGF
              - U061F7AUR
              - W012A3CDE
              response_metadata:
                next_cursor: e3VzZXJfaWQ6IFcxMjM0NTY3fQ==
          description: Typical paginated success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.members
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
      - in: query
        name: channel
        type: string
        description: ID of the conversation to retrieve members for
      operationId: conversationsMembers
      security:
      - Bearer: []
      description: Retrieve members of a conversation.
      tags:
      - conversations
  /stars.add:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/starsAdddefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/starsAdd200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/stars.add
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/starsAddBody'
        in: body
        name: body
        description: starsAdd body
      operationId: starsAdd
      security:
      - Bearer: []
      description: Adds a star to an item.
      tags:
      - stars
  /groups.kick:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsKickdefault'
            description: Schema for error response from groups.kick method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsKick200'
            description: Schema for successful response from groups.kick method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.kick
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsKickBody'
        in: body
        name: body
        description: groupsKick body
      operationId: groupsKick
      security:
      - Bearer: []
      description: Removes a user from a private channel.
      tags:
      - groups
  /channels.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsInfodefault'
            description: Schema for error response channels.info method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Error response when the specified channel cannot be found
        200:
          schema:
            $ref: '#/definitions/channelsInfo200'
            description: Schema for successful response channels.info method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: U0G9QF9C6
                last_read: "1503435939.000101"
                previous_names:
                - dusting
                created: 1466025154
                members:
                - U0G9QF9C6
                - U1QNSQB9U
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: U0G9QF9C6
                  value: Discuss busting ghosts
                  last_set: 1503435128
                topic:
                  creator: U0G9QF9C6
                  value: Spiritual containment strategies
                  last_set: 1503435128
                name_normalized: busting
                is_mpim: false
                name: busting
                unread_count: 1
                id: C1H9RESGL
                is_member: true
                is_private: false
                unread_count_display: 1
                latest:
                  ts: "1503435956.000247"
                  attachments:
                  - text: Don't get too attached
                    fallback: This is an attachment fallback
                    id: 1
                  text: Containment unit is 98% full
                  username: ecto1138
                  subtype: bot_message
                  type: message
                  bot_id: B19LU7CSY
                is_org_shared: false
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this channel. Defaults
          to `false`
      - in: query
        name: channel
        type: string
        description: Channel to get info on
      operationId: channelsInfo
      security:
      - Bearer: []
      description: Gets information about a channel.
      tags:
      - channels
  /team.profile.get:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/teamProfileGetdefault'
            description: Schema for error response from team.profile.get method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/teamProfileGet200'
            description: Schema for successful response from team.profile.get method
          examples:
            application/json:
              ok: true
              profile:
                fields:
                - possible_values: ~
                  hint: Enter the extension to reach your desk
                  is_hidden: 1
                  id: Xf06054AAA
                  options: ~
                  type: text
                  ordering: 0
                  label: Phone extension
                - possible_values: ~
                  hint: When you were born
                  id: Xf06054BBB
                  options: ~
                  type: date
                  ordering: 1
                  label: Date of birth
                - possible_values: ~
                  hint: Enter a link to your Facebook profile
                  id: Xf06054CCC
                  options: ~
                  type: link
                  ordering: 2
                  label: Facebook
                - possible_values:
                  - Gryffindor
                  - Hufflepuff
                  - Ravenclaw
                  - Slytherin
                  hint: Hogwarts, obviously
                  id: Xf06054DDD
                  options: ~
                  type: options_list
                  ordering: 3
                  label: House
                - possible_values: ~
                  hint: Office location (LDAP)
                  id: Xf06054EEE
                  options:
                    is_protected: 1
                  type: text
                  ordering: 4
                  label: Location
                - possible_values: ~
                  hint: The boss
                  id: Xf06054FFF
                  options: ~
                  type: user
                  ordering: 5
                  label: Manager
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/team.profile.get
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: visibility
        type: string
        description: Filter by visibility.
      operationId: teamProfileGet
      security:
      - Bearer: []
      description: Retrieve a team's profile.
      tags:
      - team.profile
      - team
  /conversations.rename:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsRenamedefault'
            description: Schema for error response from conversations.rename method
          examples:
            application/json:
              ok: false
              error: not_in_channel
          description: Typical error response when the calling user is not a member
            of the conversation
        200:
          schema:
            $ref: '#/definitions/conversationsRename200'
            description: Schema for successful response from conversations.rename
              method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: W012A3BCD
                is_read_only: false
                last_read: "1502126650.228446"
                previous_names:
                - specifics
                - abstractions
                - etc
                unlinked: 0
                created: 1449252889
                locale: en-US
                is_general: true
                is_archived: false
                is_channel: true
                purpose:
                  creator: W012A3BCD
                  value: This part of the workspace is for fun. Make fun here.
                  last_set: 1449709364
                is_im: false
                topic:
                  creator: W012A3BCD
                  value: For public discussion of generalities
                  last_set: 1449709364
                pending_shared: []
                name_normalized: general
                is_mpim: false
                name: general
                is_pending_ext_shared: false
                num_members: 23
                is_group: false
                is_ext_shared: false
                id: C012AB3CD
                is_member: true
                is_private: false
                is_org_shared: false
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.rename
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsRenameBody'
        in: body
        name: body
        description: conversationsRename body
      operationId: conversationsRename
      security:
      - Bearer: []
      description: Renames a conversation.
      tags:
      - conversations
  /groups.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsListdefault'
            description: Schema for error response groups.list method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsList200'
            description: Schema for successful response groups.list method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: exclude_members
        type: boolean
        description: Exclude the `members` from each `group`
      - in: query
        name: exclude_archived
        type: boolean
        description: Don't return archived private channels.
      operationId: groupsList
      security:
      - Bearer: []
      description: Lists private channels that the calling user has access to.
      tags:
      - groups
  /groups.archive:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsArchivedefault'
            description: Schema for error response from groups.archive method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsArchive200'
            description: Schema for successful response from groups.archive method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.archive
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsArchiveBody'
        in: body
        name: body
        description: groupsArchive body
      operationId: groupsArchive
      security:
      - Bearer: []
      description: Archives a private channel.
      tags:
      - groups
  /files.sharedPublicURL:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/filesSharedPublicURLdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/filesSharedPublicURL200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/files.sharedPublicURL
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/filesSharedPublicURLBody'
        in: body
        name: body
        description: filesSharedPublicURL body
      operationId: filesSharedPublicURL
      security:
      - Bearer: []
      description: Enables a file for public/external sharing.
      tags:
      - files
  /im.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/imListdefault'
            description: Schema for error response from im.list method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/imList200'
            description: Schema for successful response im.list method
          examples:
            application/json:
              ok: true
              ims:
              - created: 1449709280
                is_user_deleted: false
                is_im: true
                user: USLACKBOT
                id: D0G9QPY56
                is_org_shared: false
              - created: 1466692204
                is_user_deleted: false
                is_im: true
                user: U0G9QF9C6
                id: D1KL59A72
                is_org_shared: false
              - created: 1449722883
                is_user_deleted: false
                is_im: true
                user: U0G9WFXNZ
                id: D0G9XPFH9
                is_org_shared: false
              - created: 1452098023
                is_user_deleted: false
                is_im: true
                user: W0HRJL7CK
                id: D0HRHJSF7
                is_org_shared: false
              - created: 1465834222
                is_user_deleted: true
                is_im: true
                user: U1GDBDGR3
                id: D1GD7CHC0
                is_org_shared: false
              - created: 1468274703
                is_user_deleted: false
                is_im: true
                user: U1QNSQB9U
                id: D1QMF76M9
                is_org_shared: false
              - created: 1502210225
                is_user_deleted: false
                is_im: true
                user: U6KR7BVFW
                id: D6K48KKRN
                is_org_shared: false
              response_metadata:
                next_cursor: aW1faWQ6RDBCSDk1RExI=
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/im.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
      operationId: imList
      security:
      - Bearer: []
      description: Lists direct message channels for the calling user.
      tags:
      - im
  /chat.getPermalink:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/chatGetPermalinkdefault'
            description: Schema for error response from chat.getPermalink method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Error response when channel cannot be found
        200:
          schema:
            $ref: '#/definitions/chatGetPermalink200'
            description: Schema for successful response chat.getPermalink
          examples:
            application/json:
              ok: true
              channel: C1H9RESGA
              permalink: https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008
          description: Standard success response
      externalDocs:
        url: https://api.slack.com/methods/chat.getPermalink
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: message_ts
        type: number
        description: A message's `ts` value, uniquely identifying it within a channel
      - in: query
        name: channel
        type: string
        description: The ID of the conversation or channel containing the message
      operationId: chatGetPermalink
      security:
      - Bearer: []
      description: Retrieve a permalink URL for a specific extant message
      tags:
      - chat
  /usergroups.users.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usergroupsUsersListdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Standard failure response when used with an invalid token
        200:
          schema:
            $ref: '#/definitions/usergroupsUsersList200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              users:
              - U060R4BJ4
              - W123A4BC5
          description: Standard success response when used with a user token
      externalDocs:
        url: https://api.slack.com/methods/usergroups.users.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: include_disabled
        type: boolean
        description: Allow results that involve disabled User Groups.
      - in: query
        name: usergroup
        type: string
        description: The encoded ID of the User Group to update.
      operationId: usergroupsUsersList
      security:
      - Bearer: []
      description: List all users in a User Group
      tags:
      - usergroups.users
      - usergroups
  /mpim.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/mpimListdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/mpimList200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/mpim.list
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: mpimList
      security:
      - Bearer: []
      description: Lists multiparty direct message channels for the calling user.
      tags:
      - mpim
  /mpim.history:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/mpimHistorydefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/mpimHistory200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              has_more: false
              messages:
              - ts: "1358546515.000008"
                text: Hello
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                is_starred: true
                text: World
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                type: something_else
              latest: "1358547726.000003"
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/mpim.history
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: integer
        description: Number of messages to return, between 1 and 1000.
      - in: query
        name: unreads
        type: boolean
        description: Include `unread_count_display` in the output?
      - in: query
        name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results.
      - in: query
        name: oldest
        type: number
        description: Start of time range of messages to include in results.
      - in: query
        name: channel
        type: string
        description: Multiparty direct message to fetch history for.
      - in: query
        name: latest
        type: number
        description: End of time range of messages to include in results.
      operationId: mpimHistory
      security:
      - Bearer: []
      description: Fetches history of messages and events from a multiparty direct
        message.
      tags:
      - mpim
  /channels.setTopic:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsSetTopicdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsSetTopic200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              topic: To picture topicality
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.setTopic
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsSetTopicBody'
        in: body
        name: body
        description: channelsSetTopic body
      operationId: channelsSetTopic
      security:
      - Bearer: []
      description: Sets the topic for a channel.
      tags:
      - channels
  /reminders.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/remindersInfodefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/remindersInfo200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reminders.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: reminder
        type: string
        description: The ID of the reminder
      operationId: remindersInfo
      security:
      - Bearer: []
      description: Gets information about a reminder.
      tags:
      - reminders
  /channels.leave:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsLeavedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsLeave200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.leave
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsLeaveBody'
        in: body
        name: body
        description: channelsLeave body
      operationId: channelsLeave
      security:
      - Bearer: []
      description: Leaves a channel.
      tags:
      - channels
  /rtm.start:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/rtmStartdefault'
            description: Schema for error response from rtm.start method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/rtmStart200'
            description: Schema for successful response from rtm.start method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/rtm.start
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: no_latest
        type: boolean
        description: Exclude latest timestamps for channels, groups, mpims, and ims.
          Automatically sets `no_unreads` to `1`
      - in: query
        name: simple_latest
        type: boolean
        description: Return timestamp only for latest message object of each channel
          (improves performance).
      - in: query
        name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for users and channels.
          Defaults to `false`
      - in: query
        name: presence_sub
        type: boolean
        description: Only deliver presence events when requested by subscription.
          See [presence subscriptions](/docs/presence-and-status#subscriptions).
      - in: query
        name: no_unreads
        type: boolean
        description: Skip unread counts for each channel (improves performance).
      - in: query
        name: batch_presence_aware
        type: boolean
        description: Batch presence deliveries via subscription. Enabling changes
          the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).
      - in: query
        name: mpim_aware
        type: boolean
        description: Returns MPIMs to the client in the API response.
      operationId: rtmStart
      security:
      - Bearer: []
      description: Starts a Real Time Messaging session.
      tags:
      - rtm
  /search.files:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/searchFilesdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: No query passed
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/searchFiles200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              query: computer.gif
              files:
                pagination:
                  page_count: 1
                  first: 1
                  page: 1
                  total_count: 3
                  last: 3
                  per_page: 20
                matches:
                - thumb_360: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.png
                  groups: []
                  thumb_360_w: 360
                  thumb_480_h: 300
                  deanimate_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_deanimate_gif.png
                  size: 1639034
                  score: "0.38899223746309"
                  created: 1507850315
                  channels: []
                  is_external: false
                  thumb_360_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.gif
                  mode: hosted
                  permalink: https://eventsdemo.slack.com/files/U2U85N1RZ/F7H0D7ZBB/computer.gif
                  filetype: gif
                  username: ""
                  thumb_160: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_160.png
                  editable: false
                  url_private: https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/computer.gif
                  image_exif_rotation: 1
                  pretty_type: GIF
                  user: U2U85N1RZ
                  mimetype: image/gif
                  comments_count: 1
                  is_public: true
                  name: computer.gif
                  ims: []
                  thumb_480_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.gif
                  external_type: ""
                  reactions:
                  - users:
                    - U2U85N1RZ
                    count: 1
                    name: stuck_out_tongue_winking_eye
                  top_file: false
                  url_private_download: https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/download/computer.gif
                  preview: ~
                  thumb_480_w: 480
                  id: F7H0D7ZBB
                  thumb_480: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.png
                  permalink_public: https://slack-files.com/T2U81E2BB-F7H0D7ZBB-85b7f5557e
                  title: computer.gif
                  public_url_shared: false
                  thumb_360_h: 225
                  thumb_64: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_64.png
                  timestamp: 1507850315
                  original_h: 313
                  original_w: 500
                  display_as_bot: false
                  thumb_80: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_80.png
                paging:
                  pages: 1
                  count: 20
                  page: 1
                  total: 3
                total: 3
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/search.files
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: sort_dir
        type: string
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
      - in: query
        name: query
        type: string
        description: Search query.
      - in: query
        name: sort
        type: string
        description: Return matches sorted by either `score` or `timestamp`.
      - in: query
        name: highlight
        type: boolean
        description: Pass a value of `true` to enable query highlight markers (see
          below).
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: page
        type: string
        description: page
      operationId: searchFiles
      security:
      - Bearer: []
      description: Searches for files matching a query.
      tags:
      - search
  /team.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/teamInfodefault'
            description: Schema for error response from team.info method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/teamInfo200'
            description: Schema for successful response from team.info method
          examples:
            application/json:
              ok: true
              team:
                enterprise_id: E1234A12AB
                enterprise_name: Umbrella Corporation
                domain: example
                icon:
                  image_44: https://...
                  image_88: https://...
                  image_default: true
                  image_68: https://...
                  image_34: https://...
                  image_132: https://...
                  image_102: https://...
                name: My Team
                id: T12345
                email_domain: example.com
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/team.info
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: teamInfo
      security:
      - Bearer: []
      description: Gets information about the current team.
      tags:
      - team
  /mpim.mark:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/mpimMarkdefault'
            description: Schema for error response from mpim.mark method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/mpimMark200'
            description: Schema for successful response from mpim.mark method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/mpim.mark
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/mpimMarkBody'
        in: body
        name: body
        description: mpimMark body
      operationId: mpimMark
      security:
      - Bearer: []
      description: Sets the read cursor in a multiparty direct message channel.
      tags:
      - mpim
  /files.delete:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/filesDeletedefault'
            description: Schema for error response files.delete method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/filesDelete200'
            description: Schema for successful response files.delete method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/files.delete
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/filesDeleteBody'
        in: body
        name: body
        description: filesDelete body
      operationId: filesDelete
      security:
      - Bearer: []
      description: Deletes a file.
      tags:
      - files
  /dialog.open:
    get:
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/dialogOpendefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: missing_trigger
          description: Typical error response, before getting to any possible validation
            errors.
        200:
          schema:
            $ref: '#/definitions/dialogOpen200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response is quite minimal.
      externalDocs:
        url: https://api.slack.com/methods/dialog.open
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: dialog
        type: string
        description: The dialog definition. This must be a JSON-encoded string.
      - in: query
        name: trigger_id
        type: string
        description: Exchange a trigger to post to the user.
      operationId: dialogOpen
      security:
      - Bearer: []
      description: Open a dialog with a user
      tags:
      - dialog
  /reminders.add:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/remindersAdddefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/remindersAdd200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reminders.add
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/remindersAddBody'
        in: body
        name: body
        description: remindersAdd body
      operationId: remindersAdd
      security:
      - Bearer: []
      description: Creates a reminder.
      tags:
      - reminders
  /bots.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/botsInfodefault'
            description: Schema for error response from bots.info method
          examples:
            application/json:
              ok: false
              error: bot_not_found
          description: When no bot can be found, it returns an error.
        200:
          schema:
            $ref: '#/definitions/botsInfo200'
            description: Schema for successful response from bots.info method
          examples:
            application/json:
              ok: true
              bot:
                icons:
                  image_48: https://...
                  image_36: https://...
                  image_72: https://...
                name: commandeer
                id: B061F7JQ1
                deleted: false
                updated: 1449272004
                app_id: A061BLERW
          description: When successful, returns bot info by bot ID.
      externalDocs:
        url: https://api.slack.com/methods/bots.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: bot
        type: string
        description: Bot user to get info on
      operationId: botsInfo
      security:
      - Bearer: []
      description: Gets information about a bot user.
      tags:
      - bots
  /team.integrationLogs:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/teamIntegrationLogsdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/teamIntegrationLogs200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/team.integrationLogs
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: change_type
        type: string
        description: Filter logs with this change type. Defaults to all logs.
      - in: query
        name: app_id
        type: integer
        description: Filter logs to this Slack app. Defaults to all logs.
      - in: query
        name: user
        type: string
        description: "Filter logs generated by this user\u2019s actions. Defaults
          to all logs."
      - in: query
        name: service_id
        type: integer
        description: Filter logs to this service. Defaults to all logs.
      - in: query
        name: page
        type: string
        description: page
      operationId: teamIntegrationLogs
      security:
      - Bearer: []
      description: Gets the integration logs for the current team.
      tags:
      - team
  /users.conversations:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usersConversationsdefault'
            description: Schema for error response from users.conversations method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersConversations200'
            description: Schema for successful response from users.conversations method.
              Returned conversation objects do not include `num_members` or `is_member`
          examples:
            application/json:
              ok: true
              channels:
              - is_shared: false
                creator: U012A3CDE
                previous_names: []
                unlinked: 0
                created: 1449252889
                is_general: true
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: This channel is for team-wide communication and announcements.
                    All team members are in this channel.
                  last_set: 0
                is_im: false
                topic:
                  creator: ""
                  value: Company-wide announcements and work-based matters
                  last_set: 0
                pending_shared: []
                name_normalized: general
                is_mpim: false
                name: general
                is_pending_ext_shared: false
                is_group: false
                is_ext_shared: false
                id: C012AB3CD
                is_private: false
                is_org_shared: false
              - is_shared: false
                creator: U061F7AUR
                previous_names: []
                unlinked: 0
                created: 1449252889
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: A place for non-work-related flimflam, faffing, hodge-podge
                    or jibber-jabber you'd prefer to keep out of more focused work-related
                    channels.
                  last_set: 0
                is_im: false
                topic:
                  creator: ""
                  value: Non-work banter and water cooler conversation
                  last_set: 0
                pending_shared: []
                name_normalized: random
                is_mpim: false
                name: random
                is_pending_ext_shared: false
                is_group: false
                is_ext_shared: false
                id: C061EG9T2
                is_private: false
                is_org_shared: false
              response_metadata:
                next_cursor: dGVhbTpDMDYxRkE1UEI=
          description: Typical success response with only public channels. Note how
            `num_members` and `is_member` are not returned like typical `conversations`
            objects.
      externalDocs:
        url: https://api.slack.com/methods/users.conversations
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
      - in: query
        name: user
        type: string
        description: Browse conversations by a specific user ID's membership. Non-public
          channels are restricted to those where the calling user shares membership.
      - in: query
        name: exclude_archived
        type: boolean
        description: Set to `true` to exclude archived channels from the list
      - in: query
        name: types
        type: string
        description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
      operationId: usersConversations
      security:
      - Bearer: []
      description: List conversations the calling user may access.
      tags:
      - users
  /usergroups.update:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usergroupsUpdatedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usergroupsUpdate200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              usergroup:
                team_id: T060R4BHN
                users:
                - U060R4BJ4
                - U060RNRCZ
                handle: marketing-team
                user_count: 1
                is_external: false
                is_usergroup: true
                created_by: U060R4BJ4
                name: Marketing Team
                date_create: 1447096577
                date_update: 1447102109
                prefs:
                  groups: []
                  channels: []
                date_delete: 0
                id: S0616NG6M
                auto_type: ~
                description: Marketing gurus, PR experts and product advocates.
                updated_by: U060R4BJ4
                deleted_by: ~
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/usergroups.update
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/usergroupsUpdateBody'
        in: body
        name: body
        description: usergroupsUpdate body
      operationId: usergroupsUpdate
      security:
      - Bearer: []
      description: Update an existing User Group
      tags:
      - usergroups
  /conversations.history:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsHistorydefault'
            description: Schema for error response from conversations.history method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsHistory200'
            description: Schema for successful response from conversations.history
              method
          examples:
            application/json:
              ok: true
              has_more: true
              messages:
              - ts: "1512085950.000216"
                text: I find you punny and would like to smell your nose letter
                user: U012AB3CDE
                type: message
              - ts: "1512104434.000490"
                text: What, you want to smell my shoes better?
                user: U061F7AUR
                type: message
              pin_count: 0
              response_metadata:
                next_cursor: bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz
          description: Typical success response containing a channel's messages
      externalDocs:
        url: https://api.slack.com/methods/conversations.history
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: inclusive
        type: boolean
        description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
      - in: query
        name: oldest
        type: number
        description: Start of time range of messages to include in results.
      - in: query
        name: channel
        type: string
        description: Conversation ID to fetch history for.
      - in: query
        name: latest
        type: number
        description: End of time range of messages to include in results.
      operationId: conversationsHistory
      security:
      - Bearer: []
      description: Fetches a conversation's history of messages and events.
      tags:
      - conversations
  /channels.replies:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsRepliesdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: thread_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsReplies200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              has_more: false
              messages:
              - subscribed: true
                ts: "1485913694.000025"
                last_read: "1509484885.000082"
                text: This is a channel message
                thread_ts: "1485913694.000025"
                user: U2X9P5FEL
                replies:
                - ts: "1509484424.000601"
                  user: U2U85N1RZ
                - ts: "1509484885.000082"
                  user: U2U85N1RZ
                unread_count: 0
                type: message
                reply_count: 2
              - ts: "1509484424.000601"
                text: This is a thread reply
                thread_ts: "1485913694.000025"
                user: U2U85N1RZ
                parent_user_id: U2X9P5FEL
                type: message
              - ts: "1509484885.000082"
                text: This is another thread reply
                thread_ts: "1485913694.000025"
                user: U2U85N1RZ
                parent_user_id: U2X9P5FEL
                type: message
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.replies
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message
      - in: query
        name: channel
        type: string
        description: Channel to fetch thread from
      operationId: channelsReplies
      security:
      - Bearer: []
      description: Retrieve a thread of messages posted to a channel
      tags:
      - channels
  /reactions.get:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/reactionsGetdefault'
            description: Schema for error response from reactions.get method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/reactionsGet200'
            description: Schema for successful response from reactions.get method
          examples:
            application/json:
              ok: true
              type: file
              file:
                groups: []
                created: 1507850315
                channels:
                - C2U7V2YA2
                user: U2U85N1RV
                comments_count: 1
                name: computer.gif
                ims: []
                reactions:
                - users:
                  - U2U85N1RV
                  count: 1
                  name: stuck_out_tongue_winking_eye
                id: F7H0D7ZA4
                title: computer.gif
                timestamp: 1507850315
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reactions.get
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: full
        type: boolean
        description: If true always return the complete reaction list.
      - in: query
        name: file_comment
        type: string
        description: File comment to get reactions for.
      - in: query
        name: timestamp
        type: number
        description: Timestamp of the message to get reactions for.
      - in: query
        name: file
        type: string
        description: File to get reactions for.
      - in: query
        name: channel
        type: string
        description: Channel where the message to get reactions for was posted.
      operationId: reactionsGet
      security:
      - Bearer: []
      description: Gets reactions for an item.
      tags:
      - reactions
  /channels.unarchive:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsUnarchivedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsUnarchive200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.unarchive
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsUnarchiveBody'
        in: body
        name: body
        description: channelsUnarchive body
      operationId: channelsUnarchive
      security:
      - Bearer: []
      description: Unarchives a channel.
      tags:
      - channels
  /usergroups.create:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usergroupsCreatedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usergroupsCreate200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/usergroups.create
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/usergroupsCreateBody'
        in: body
        name: body
        description: usergroupsCreate body
      operationId: usergroupsCreate
      security:
      - Bearer: []
      description: Create a User Group
      tags:
      - usergroups
  /groups.mark:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsMarkdefault'
            description: Schema for error response from groups.mark method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsMark200'
            description: Schema for successful response from groups.mark method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.mark
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/groupsMarkBody'
        in: body
        name: body
        description: groupsMark body
      operationId: groupsMark
      security:
      - Bearer: []
      description: Sets the read cursor in a private channel.
      tags:
      - groups
  /channels.invite:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsInvitedefault'
            description: Schema for error response channels.invite method
          examples:
            application/json:
              ok: false
              error: cant_invite
          description: A somewhat typical error response
        200:
          schema:
            $ref: '#/definitions/channelsInvite200'
            description: Schema for successful response channels.invite method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: U0G9QF9C6
                last_read: "1503435963.000307"
                previous_names: []
                created: 1466025154
                members:
                - U0G9QF9C6
                - U1QNSQB9U
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: U0G9QF9C6
                  value: My Purpose
                  last_set: 1503435128
                topic:
                  creator: U0G9QF9C6
                  value: My Topic
                  last_set: 1503435128
                name_normalized: busting
                is_mpim: false
                name: busting
                unread_count: 0
                id: C1H9RESGL
                is_member: true
                is_private: false
                unread_count_display: 0
                latest:
                  ts: "1503435963.000307"
                  text: <@U1QNSQB9U|protobot> has left the channel
                  user: U1QNSQB9U
                  subtype: channel_leave
                  type: message
                is_org_shared: false
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.invite
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsInviteBody'
        in: body
        name: body
        description: channelsInvite body
      operationId: channelsInvite
      security:
      - Bearer: []
      description: Invites a user to a channel.
      tags:
      - channels
  /usergroups.disable:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usergroupsDisabledefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usergroupsDisable200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/usergroups.disable
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/usergroupsDisableBody'
        in: body
        name: body
        description: usergroupsDisable body
      operationId: usergroupsDisable
      security:
      - Bearer: []
      description: Disable an existing User Group
      tags:
      - usergroups
  /users.profile.get:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usersProfileGetdefault'
            description: Schema for error response from users.profile.get method
          examples:
            application/json:
              ok: false
              error: user_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersProfileGet200'
            description: Schema for successful response from users.profile.get method
          examples:
            application/json:
              ok: true
              profile:
                email: spengler@ghostbusters.example.com
                display_name_normalized: spengler
                image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                status_emoji: ':books:'
                display_name: spengler
                image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                status_text: Print is dead
                real_name_normalized: Egon Spengler
                avatar_hash: ge3b51ca72de
                image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                real_name: Egon Spengler
                team: T012AB3C4
                image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/users.profile.get
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: include_labels
        type: boolean
        description: Include labels for each ID in custom profile fields
      - in: query
        name: user
        type: string
        description: User to retrieve profile info for
      operationId: usersProfileGet
      security:
      - Bearer: []
      description: Retrieves a user's profile information.
      tags:
      - users.profile
      - users
  /apps.permissions.resources.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/appsPermissionsResourcesListdefault'
            description: Schema for error response from apps.permissions.resources.list
              method
          examples:
            application/json:
              ok: false
              error: invalid_cursor
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/appsPermissionsResourcesList200'
            description: Schema for successful response apps.permissions.resources.list
              method
          examples:
            application/json:
              ok: true
              resources:
              - id: T0DES3UAN
                type: team
              - id: D024BFF1M
                type: app_home
              - id: C024BE91L
                type: channel
              response_metadata:
                next_cursor: dGVhbTpDMUg5UkVTR0w=
          description: Typical successful paginated response
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.resources.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return.
      operationId: appsPermissionsResourcesList
      security:
      - Bearer: []
      description: Returns list of resource grants this app has on a team.
      tags:
      - apps.permissions.resources
      - apps
  /im.mark:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/imMarkdefault'
            description: Schema for error response im.mark method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/imMark200'
            description: Schema for successful response im.mark method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/im.mark
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/imMarkBody'
        in: body
        name: body
        description: imMark body
      operationId: imMark
      security:
      - Bearer: []
      description: Sets the read cursor in a direct message channel.
      tags:
      - im
  /users.setPresence:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/usersSetPresencedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usersSetPresence200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/users.setPresence
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/usersSetPresenceBody'
        in: body
        name: body
        description: usersSetPresence body
      operationId: usersSetPresence
      security:
      - Bearer: []
      description: Manually sets user presence.
      tags:
      - users
  /chat.postEphemeral:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/chatPostEphemeraldefault'
            description: Schema for error response from chat.postEphemeral method
          examples:
            application/json:
              ok: false
              error: user_not_in_channel
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/chatPostEphemeral200'
            description: Schema for successful response from chat.postEphemeral method
          examples:
            application/json:
              ok: true
              message_ts: "1502210682.580145"
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/chat.postEphemeral
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/chatPostEphemeralBody'
        in: body
        name: body
        description: chatPostEphemeral body
      operationId: chatPostEphemeral
      security:
      - Bearer: []
      description: Sends an ephemeral message to a user in a channel.
      tags:
      - chat
  /groups.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsInfodefault'
            description: Schema for error response groups.info method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsInfo200'
            description: Schema for successful response groups.info method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: include_locale
        type: boolean
        description: Set this to `true` to receive the locale for this group. Defaults
          to `false`
      - in: query
        name: channel
        type: string
        description: Private channel to get info on
      operationId: groupsInfo
      security:
      - Bearer: []
      description: Gets information about a private channel.
      tags:
      - groups
  /pins.remove:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/pinsRemovedefault'
            description: Schema for error response from pins.remove method
          examples:
            application/json:
              ok: false
              error: no_pin
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/pinsRemove200'
            description: Schema for successful response from pins.remove method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/pins.remove
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/pinsRemoveBody'
        in: body
        name: body
        description: pinsRemove body
      operationId: pinsRemove
      security:
      - Bearer: []
      description: Un-pins an item from a channel.
      tags:
      - pins
  /conversations.setPurpose:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsSetPurposedefault'
            description: Schema for error response from conversations.setPurpose method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsSetPurpose200'
            description: Schema for successful response from conversations.setPurpose
              method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.setPurpose
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsSetPurposeBody'
        in: body
        name: body
        description: conversationsSetPurpose body
      operationId: conversationsSetPurpose
      security:
      - Bearer: []
      description: Sets the purpose for a conversation.
      tags:
      - conversations
  /files.comments.delete:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/filesCommentsDeletedefault'
            description: Schema for error response files.comments.delete method
          examples:
            application/json:
              ok: false
              error: file_not_found
          description: Standard failure response when used with an invalid token
        200:
          schema:
            $ref: '#/definitions/filesCommentsDelete200'
            description: Schema for successful response files.comments.delete method
          examples:
            application/json:
              ok: true
          description: Standard success response is very simple
      externalDocs:
        url: https://api.slack.com/methods/files.comments.delete
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/filesCommentsDeleteBody'
        in: body
        name: body
        description: filesCommentsDelete body
      operationId: filesCommentsDelete
      security:
      - Bearer: []
      description: Deletes an existing comment on a file.
      tags:
      - files.comments
      - files
  /apps.permissions.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/appsPermissionsInfodefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Standard failure response when used with an invalid token
        200:
          schema:
            $ref: '#/definitions/appsPermissionsInfo200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              info:
                im:
                  scopes: []
                  resources:
                    ids: []
                group:
                  scopes: []
                  resources:
                    ids: []
                channel:
                  scopes:
                  - channels:read
                  resources:
                    excluded_ids: []
                    ids:
                    - C061FA5PB
                    wildcard: false
                app_home:
                  scopes:
                  - chat:write
                  - im:history
                  - im:read
                  resources:
                    ids:
                    - D0C0NU1Q8
                    - D0BH95DLH
                team:
                  scopes: []
                  resources:
                    ids: []
                mpim:
                  scopes: []
                  resources:
                    ids: []
          description: Standard success response when used with a user token
      externalDocs:
        url: https://api.slack.com/methods/apps.permissions.info
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: appsPermissionsInfo
      security:
      - Bearer: []
      description: Returns list of permissions this app has on a team.
      tags:
      - apps.permissions
      - apps
  /channels.join:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsJoindefault'
            description: Schema for error response from channels.join method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsJoin200'
            description: Schema for successful response from channels.join method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: U0G9QF9C6
                previous_names: []
                created: 1466025154
                members:
                - U0G9QF9C6
                - U1QNSQB9U
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: U0G9QF9C6
                  value: My Purpose
                  last_set: 1503435128
                topic:
                  creator: U0G9QF9C6
                  value: My Topic
                  last_set: 1503435128
                name_normalized: busting
                is_mpim: false
                name: busting
                id: C1H9RESGL
                is_member: true
                is_private: false
                is_org_shared: false
              already_in_channel: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.join
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsJoinBody'
        in: body
        name: body
        description: channelsJoin body
      operationId: channelsJoin
      security:
      - Bearer: []
      description: Joins a channel, creating it if needed.
      tags:
      - channels
  /conversations.open:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsOpendefault'
            description: Schema for error response from conversations.open method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsOpen200'
            description: Schema for successful response from conversations.open method
              when opening channels, ims, mpims
          examples:
            application/json:
              ok: true
              channel:
                id: D069C7QFK
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.open
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsOpenBody'
        in: body
        name: body
        description: conversationsOpen body
      operationId: conversationsOpen
      security:
      - Bearer: []
      description: Opens or resumes a direct message or multi-person direct message.
      tags:
      - conversations
  /conversations.create:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsCreatedefault'
            description: Schema for error response from conversations.create method
          examples:
            application/json:
              ok: false
              error: name_taken
          description: Typical error response when name already in use
        200:
          schema:
            $ref: '#/definitions/conversationsCreate200'
            description: Schema for successful response conversations.create method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: U0123456
                last_read: 0000000000.000000
                previous_names: []
                unlinked: 0
                priority: 0
                created: 1504554479
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: ""
                  last_set: 0
                is_im: false
                topic:
                  creator: ""
                  value: ""
                  last_set: 0
                pending_shared: []
                name_normalized: endeavor
                is_mpim: false
                name: endeavor
                is_pending_ext_shared: false
                is_group: false
                is_ext_shared: false
                unread_count: 0
                id: C0EAQDV4Z
                is_member: true
                is_private: false
                unread_count_display: 0
                latest: ~
                is_org_shared: false
          description: If successful, the command returns a rather stark [conversation
            object](/types/conversation)
      externalDocs:
        url: https://api.slack.com/methods/conversations.create
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsCreateBody'
        in: body
        name: body
        description: conversationsCreate body
      operationId: conversationsCreate
      security:
      - Bearer: []
      description: Initiates a public or private channel-based conversation
      tags:
      - conversations
  /channels.kick:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsKickdefault'
            description: Schema for error response from channels.kick method
          examples:
            application/json:
              ok: false
              error: not_in_channel
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsKick200'
            description: Schema for successful response from channels.kick method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.kick
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsKickBody'
        in: body
        name: body
        description: channelsKick body
      operationId: channelsKick
      security:
      - Bearer: []
      description: Removes a user from a channel.
      tags:
      - channels
  /im.close:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/imClosedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/imClose200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/im.close
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/imCloseBody'
        in: body
        name: body
        description: imClose body
      operationId: imClose
      security:
      - Bearer: []
      description: Close a direct message channel.
      tags:
      - im
  /channels.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsListdefault'
            description: Schema for error response channels.list method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsList200'
            description: Schema for successful response channels.list method
          examples:
            application/json:
              ok: true
              channels:
              - is_shared: false
                creator: U0G9QF9C6
                previous_names: []
                created: 1449709280
                members:
                - U0G9QF9C6
                - U0G9WFXNZ
                is_general: false
                is_archived: false
                is_channel: true
                purpose:
                  creator: ""
                  value: A place for non-work-related flimflam, faffing, hodge-podge
                    or jibber-jabber you'd prefer to keep out of more focused work-related
                    channels.
                  last_set: 0
                topic:
                  creator: U0G9QF9C6
                  value: Other stuff
                  last_set: 1449709352
                name_normalized: random
                is_mpim: false
                name: random
                num_members: 2
                id: C0G9QF9GW
                is_member: true
                is_private: false
                is_org_shared: false
              - is_shared: false
                creator: U0G9QF9C6
                previous_names: []
                created: 1449709280
                members:
                - U0G9QF9C6
                - U0G9WFXNZ
                is_general: true
                is_archived: false
                is_channel: true
                purpose:
                  creator: U0G9QF9C6
                  value: To talk about anything!
                  last_set: 1449709334
                topic:
                  creator: U0G9QF9C6
                  value: Talk about anything!
                  last_set: 1449709364
                name_normalized: general
                is_mpim: false
                name: general
                num_members: 2
                id: C0G9QKBBL
                is_member: true
                is_private: false
                is_org_shared: false
              response_metadata:
                next_cursor: dGVhbTpDMUg5UkVTR0w=
          description: Typical cursored success response
      externalDocs:
        url: https://api.slack.com/methods/channels.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: exclude_members
        type: boolean
        description: Exclude the `members` collection from each `channel`
      - in: query
        name: cursor
        type: string
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
      - in: query
        name: limit
        type: integer
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
      - in: query
        name: exclude_archived
        type: boolean
        description: Exclude archived channels from the list
      operationId: channelsList
      security:
      - Bearer: []
      description: Lists all channels in a Slack team.
      tags:
      - channels
  /channels.archive:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/channelsArchivedefault'
            description: Schema for error response channels.archive method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/channelsArchive200'
            description: Schema for successful response from channels.archive method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/channels.archive
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/channelsArchiveBody'
        in: body
        name: body
        description: channelsArchive body
      operationId: channelsArchive
      security:
      - Bearer: []
      description: Archives a channel.
      tags:
      - channels
  /conversations.invite:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsInvitedefault'
            description: Schema for error response from conversations.invite method
          examples:
            application/json:
              ok: false
              error: method_not_supported_for_channel_type
          description: Typical error response when an invite is attempted on a conversation
            type that does not support it
        200:
          schema:
            $ref: '#/definitions/conversationsInvite200'
            description: Schema for successful response from conversations.invite
              method
          examples:
            application/json:
              ok: true
              channel:
                is_shared: false
                creator: W012A3BCD
                is_read_only: false
                last_read: "1502126650.228446"
                previous_names:
                - specifics
                - abstractions
                - etc
                unlinked: 0
                created: 1449252889
                locale: en-US
                is_general: true
                is_archived: false
                is_channel: true
                purpose:
                  creator: W012A3BCD
                  value: This part of the workspace is for fun. Make fun here.
                  last_set: 1449709364
                is_im: false
                topic:
                  creator: W012A3BCD
                  value: For public discussion of generalities
                  last_set: 1449709364
                pending_shared: []
                name_normalized: general
                is_mpim: false
                name: general
                is_pending_ext_shared: false
                num_members: 23
                is_group: false
                is_ext_shared: false
                id: C012AB3CD
                is_member: true
                is_private: false
                is_org_shared: false
          description: Typical success response when an invitation is extended
      externalDocs:
        url: https://api.slack.com/methods/conversations.invite
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsInviteBody'
        in: body
        name: body
        description: conversationsInvite body
      operationId: conversationsInvite
      security:
      - Bearer: []
      description: Invites users to a channel.
      tags:
      - conversations
  /mpim.close:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/mpimClosedefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/mpimClose200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/mpim.close
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/mpimCloseBody'
        in: body
        name: body
        description: mpimClose body
      operationId: mpimClose
      security:
      - Bearer: []
      description: Closes a multiparty direct message channel.
      tags:
      - mpim
  /migration.exchange:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/migrationExchangedefault'
            description: Schema for error response from migration.exchange method
          examples:
            application/json:
              ok: false
              error: not_enterprise_team
          description: Typical error response when there are no mappings to provide
        200:
          schema:
            $ref: '#/definitions/migrationExchange200'
            description: Schema for successful response from migration.exchange method
          examples:
            application/json:
              ok: true
              team_id: T1KR7PE1W
              enterprise_id: E1KQTNXE1
              user_id_map:
                U06UBSVDX: W06PUUDMW
                W06UAZ65Q: W06UAZ65Q
                U06UBSVB3: W06PUUDLY
                U06UEB62U: W06PTT6GH
                U06UBSUN5: W06M56XJM
              invalid_user_ids:
              - U21ABZZXX
          description: Typical success response when mappings exist for the specified
            user IDs
      externalDocs:
        url: https://api.slack.com/methods/migration.exchange
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: to_old
        type: boolean
        description: Specify `true` to convert `W` global user IDs to workspace-specific
          `U` IDs. Defaults to `false`.
      - in: query
        name: users
        type: string
        description: A comma-separated list of user ids, up to 400 per request
      operationId: migrationExchange
      security:
      - Bearer: []
      description: For Enterprise Grid workspaces, map local user IDs to global user
        IDs
      tags:
      - migration
  /files.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/filesListdefault'
            description: Schema for error response from files.list method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/filesList200'
            description: Schema for successful response from files.list method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/files.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: channel
        type: string
        description: Filter files appearing in a specific channel, indicated by its
          ID.
      - in: query
        name: ts_to
        type: number
        description: Filter files created before this timestamp (inclusive).
      - in: query
        name: ts_from
        type: number
        description: Filter files created after this timestamp (inclusive).
      - in: query
        name: user
        type: string
        description: Filter files created by a single user.
      - in: query
        name: page
        type: string
        description: page
      - in: query
        name: types
        type: string
        description: |-
          Filter files by type:

          * `all` - All files
          * `spaces` - Posts
          * `snippets` - Snippets
          * `images` - Image files
          * `gdocs` - Google docs
          * `zips` - Zip files
          * `pdfs` - PDF files

          You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.
      operationId: filesList
      security:
      - Bearer: []
      description: Lists & filters team files.
      tags:
      - files
  /usergroups.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/usergroupsListdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/usergroupsList200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              usergroups:
              - team_id: T060RNRCH
                handle: admins
                user_count: "2"
                is_external: false
                is_usergroup: true
                created_by: USLACKBOT
                name: Team Admins
                date_create: 1446598059
                date_update: 1446670362
                prefs:
                  groups: []
                  channels: []
                date_delete: 0
                id: S0614TZR7
                auto_type: admin
                description: A group of all Administrators on your team.
                updated_by: U060RNRCZ
                deleted_by: ~
              - team_id: T060RNRCH
                handle: owners
                user_count: "1"
                is_external: false
                is_usergroup: true
                created_by: USLACKBOT
                name: Team Owners
                date_create: 1446678371
                date_update: 1446678371
                prefs:
                  groups: []
                  channels: []
                date_delete: 0
                id: S06158AV7
                auto_type: owner
                description: A group of all Owners on your team.
                updated_by: USLACKBOT
                deleted_by: ~
              - team_id: T060RNRCH
                handle: marketing-team
                user_count: "0"
                is_external: false
                is_usergroup: true
                created_by: U060RNRCZ
                name: Marketing Team
                date_create: 1446746793
                date_update: 1446747767
                prefs:
                  groups: []
                  channels: []
                date_delete: 1446748865
                id: S0615G0KT
                auto_type: ~
                description: Marketing gurus, PR experts and product advocates.
                updated_by: U060RNRCZ
                deleted_by: ~
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/usergroups.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: include_users
        type: boolean
        description: Include the list of users for each User Group.
      - in: query
        name: include_count
        type: boolean
        description: Include the number of users in each User Group.
      - in: query
        name: include_disabled
        type: boolean
        description: Include disabled User Groups.
      operationId: usergroupsList
      security:
      - Bearer: []
      description: List all User Groups for a team
      tags:
      - usergroups
  /dnd.endDnd:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/dndEndDnddefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/dndEndDnd200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/dnd.endDnd
        description: API method documentation
      produces:
      - application/json
      parameters: []
      operationId: dndEndDnd
      security:
      - Bearer: []
      description: Ends the current user's Do Not Disturb session immediately.
      tags:
      - dnd
  /conversations.unarchive:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/conversationsUnarchivedefault'
            description: Schema for error response from conversations.unarchive method
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/conversationsUnarchive200'
            description: Schema for successful response from conversations.unarchive
              method
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/conversations.unarchive
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/conversationsUnarchiveBody'
        in: body
        name: body
        description: conversationsUnarchive body
      operationId: conversationsUnarchive
      security:
      - Bearer: []
      description: Reverses conversation archival.
      tags:
      - conversations
  /search.all:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/searchAlldefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: missing_scope
              needed: search:read
              provided: identify,bot:basic
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/searchAll200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              query: diagram
              files:
                pagination:
                  page_count: 1
                  first: 1
                  page: 1
                  total_count: 1
                  last: 1
                  per_page: 20
                matches:
                - thumb_360: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_360.png
                  groups: []
                  thumb_360_w: 128
                  size: 35705
                  score: "0.99982661240974"
                  created: 1508804330
                  channels: []
                  is_external: false
                  mode: hosted
                  permalink: https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png
                  filetype: png
                  username: amy
                  thumb_160: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_160.png
                  editable: false
                  url_private: https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/slack_workflow_diagram.png
                  image_exif_rotation: 1
                  pretty_type: PNG
                  user: U2U85N1RZ
                  mimetype: image/png
                  comments_count: 1
                  is_public: true
                  name: slack workflow diagram.png
                  ims: []
                  initial_comment:
                    created: 1508804330
                    is_intro: true
                    user: U2U85N1RZ
                    id: Fc7NLL52E7
                    comment: Sure! Here's the workflow diagram!
                    timestamp: 1508804330
                  external_type: ""
                  top_file: false
                  url_private_download: https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/download/slack_workflow_diagram.png
                  preview: ~
                  id: F7PKF1NR7
                  permalink_public: https://slack-files.com/T2U81E2FZ-F7PKF1NR7-bea9143f18
                  title: slack workflow diagram
                  public_url_shared: false
                  thumb_360_h: 117
                  thumb_64: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_64.png
                  timestamp: 1508804330
                  original_h: 117
                  original_w: 128
                  display_as_bot: false
                  thumb_80: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_80.png
                paging:
                  pages: 1
                  count: 20
                  page: 1
                  total: 1
                total: 1
              messages:
                pagination:
                  page_count: 1
                  first: 1
                  page: 1
                  total_count: 1
                  last: 1
                  per_page: 20
                matches:
                - iid: 35692677-e60e-43d9-ac45-1987cea88975
                  ts: "1508804330.000296"
                  next:
                    iid: 6f510ea1-e1d3-4f3f-bdb9-f9c6f6e9d609
                    ts: "1508804378.000219"
                    text: Thanks!
                    username: john
                    user: U2U85HJ7R
                    type: message
                  text: 'uploaded a file: <https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png|slack
                    workflow diagram> and commented: Sure! Here''s the workflow diagram!'
                  channel:
                    is_shared: false
                    pending_shared: []
                    is_mpim: false
                    name: general
                    is_pending_ext_shared: false
                    is_ext_shared: false
                    id: C2U86NC6M
                    is_private: false
                    is_org_shared: false
                  permalink: https://example.slack.com/archives/C2U86NC6M/p1508804330000296
                  username: amy
                  user: U2U85N1RZ
                  team: T2U81E2FZ
                  type: message
                  previous:
                    iid: aba8603c-0543-4fb2-9118-a5ac85f3d138
                    ts: "1508804301.000026"
                    text: Can you send me the Slack workflow diagram?
                    username: john
                    user: U2U85HJ7R
                    type: message
                paging:
                  pages: 1
                  count: 20
                  page: 1
                  total: 1
                total: 1
              posts:
                matches: []
                total: 0
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/search.all
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: sort_dir
        type: string
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
      - in: query
        name: query
        type: string
        description: Search query. May contains booleans, etc.
      - in: query
        name: sort
        type: string
        description: Return matches sorted by either `score` or `timestamp`.
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: highlight
        type: boolean
        description: Pass a value of `true` to enable query highlight markers (see
          below).
      - in: query
        name: page
        type: string
        description: page
      operationId: searchAll
      security:
      - Bearer: []
      description: Searches for messages and files matching a query.
      tags:
      - search
  /files.comments.edit:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/filesCommentsEditdefault'
            description: Schema for error response files.comments.edit method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Standard failure response when used with an invalid token
        200:
          schema:
            $ref: '#/definitions/filesCommentsEdit200'
            description: Schema for successful response files.comments.edit method
          examples:
            application/json:
              ok: true
              team_id: T12345678
              url: https://subarachnoid.slack.com/
              user: grace
              team: Subarachnoid Workspace
              user_id: W12345678
          description: Standard success response when used with a user token
      externalDocs:
        url: https://api.slack.com/methods/files.comments.edit
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/filesCommentsEditBody'
        in: body
        name: body
        description: filesCommentsEdit body
      operationId: filesCommentsEdit
      security:
      - Bearer: []
      description: Edit an existing file comment.
      tags:
      - files.comments
      - files
  /im.replies:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/imRepliesdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/imReplies200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              messages:
              - ts: "1358546515.000008"
                text: Hello
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                is_starred: true
                text: World
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                type: something_else
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/im.replies
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message
      - in: query
        name: channel
        type: string
        description: Direct message channel to fetch thread from
      operationId: imReplies
      security:
      - Bearer: []
      description: Retrieve a thread of messages posted to a direct message conversation
      tags:
      - im
  /chat.unfurl:
    post:
      consumes:
      - application/json
      responses:
        default:
          schema:
            $ref: '#/definitions/chatUnfurldefault'
            description: Schema for error response from chat.unfurl method
          examples:
            application/json:
              ok: false
              error: cannot_unfurl_url
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/chatUnfurl200'
            description: Schema for successful response from chat.unfurl method
          examples:
            application/json:
              ok: true
          description: Typical, minimal success response
      externalDocs:
        url: https://api.slack.com/methods/chat.unfurl
        description: API method documentation
      produces:
      - application/json
      parameters:
      - schema:
          $ref: '#/definitions/chatUnfurlBody'
        in: body
        name: body
        description: chatUnfurl body
      operationId: chatUnfurl
      security:
      - Bearer: []
      description: Provide custom unfurl behavior for user-posted URLs
      tags:
      - chat
  /groups.replies:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/groupsRepliesdefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: channel_not_found
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/groupsReplies200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
              messages:
              - ts: "1358546515.000008"
                text: Hello
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                is_starred: true
                text: World
                user: U2147483896
                type: message
              - ts: "1358546515.000007"
                type: something_else
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/groups.replies
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: thread_ts
        type: number
        description: Unique identifier of a thread's parent message
      - in: query
        name: channel
        type: string
        description: Private channel to fetch thread from
      operationId: groupsReplies
      security:
      - Bearer: []
      description: Retrieve a thread of messages posted to a private channel
      tags:
      - groups
  /dnd.info:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/dndInfodefault'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/dndInfo200'
            description: Verbose schema not yet ready for this method.
          examples:
            application/json:
              ok: true
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/dnd.info
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: user
        type: string
        description: User to fetch status for (defaults to current user)
      operationId: dndInfo
      security:
      - Bearer: []
      description: Retrieves a user's current Do Not Disturb status.
      tags:
      - dnd
  /reactions.list:
    get:
      consumes:
      - application/x-www-form-urlencoded
      responses:
        default:
          schema:
            $ref: '#/definitions/reactionsListdefault'
            description: Schema for error response from reactions.list method
          examples:
            application/json:
              ok: false
              error: invalid_auth
          description: Typical error response
        200:
          schema:
            $ref: '#/definitions/reactionsList200'
            description: Schema for successful response from reactions.list method
          examples:
            application/json:
              ok: true
              items:
              - channel: C3UKJTQAC
                type: message
                message:
                  ts: "1507849573.000090"
                  text: 'Hello from Python! :tada:'
                  username: Shipit Notifications
                  subtype: bot_message
                  reactions:
                  - users:
                    - U2U85N1RV
                    count: 1
                    name: robot_face
                  bot_id: B4VLRLMKJ
              - comment:
                  created: 1508286096
                  user: U2U85N1RV
                  reactions:
                  - users:
                    - U2U85N1RV
                    count: 1
                    name: white_check_mark
                  id: Fc7LP08P1U
                  type: file_comment
                  comment: This is a file comment
                  timestamp: 1508286096
                file:
                  created: 1507850315
                  channels:
                  - C2U7V2YA2
                  username: ""
                  user: U2U85N1RV
                  comments_count: 1
                  reactions:
                  - users:
                    - U2U85N1RV
                    count: 1
                    name: stuck_out_tongue_winking_eye
                  title: computer.gif
              - type: file
                file:
                  size: 1639034
                  created: 1507850315
                  channels:
                  - C2U7V2YA2
                  username: ""
                  user: U2U85N1RV
                  comments_count: 1
                  name: computer.gif
                  reactions:
                  - users:
                    - U2U85N1RV
                    count: 1
                    name: stuck_out_tongue_winking_eye
                  id: F7H0D7ZA4
                  title: computer.gif
              paging:
                pages: 1
                count: 100
                page: 1
                total: 3
          description: Typical success response
      externalDocs:
        url: https://api.slack.com/methods/reactions.list
        description: API method documentation
      produces:
      - application/json
      parameters:
      - in: query
        name: count
        type: string
        description: count
      - in: query
        name: full
        type: boolean
        description: If true always return the complete reaction list.
      - in: query
        name: user
        type: string
        description: Show reactions made by this user. Defaults to the authed user.
      - in: query
        name: page
        type: string
        description: page
      operationId: reactionsList
      security:
      - Bearer: []
      description: Lists reactions made by a user.
      tags:
      - reactions
...
